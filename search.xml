<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>用AssetStudio获取Steam上Unity游戏资产</title>
      <link href="/2025/01/25/%E7%94%A8AssetStudio%E8%8E%B7%E5%8F%96Steam%E4%B8%8AUnity%E6%B8%B8%E6%88%8F%E8%B5%84%E4%BA%A7/"/>
      <url>/2025/01/25/%E7%94%A8AssetStudio%E8%8E%B7%E5%8F%96Steam%E4%B8%8AUnity%E6%B8%B8%E6%88%8F%E8%B5%84%E4%BA%A7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>首先下载AssetStudio，Github网址： <a href="https://github.com/Perfare/AssetStudio/releases">Releases · Perfare&#x2F;AssetStudio</a> </p><p>我下载的是第二个，第一个不知道为啥没找到exe文件，也可以自己下了都试试。</p><p><img src="/2025/01/25/%E7%94%A8AssetStudio%E8%8E%B7%E5%8F%96Steam%E4%B8%8AUnity%E6%B8%B8%E6%88%8F%E8%B5%84%E4%BA%A7/1737818347604.png" alt="1737818347604"></p><p>下载后解压，点击运行程序。</p><p><img src="/2025/01/25/%E7%94%A8AssetStudio%E8%8E%B7%E5%8F%96Steam%E4%B8%8AUnity%E6%B8%B8%E6%88%8F%E8%B5%84%E4%BA%A7/1737818451546.png" alt="1737818451546"></p><p>打开steam，找到想要解包的游戏地址，复制（只能是Unity开发的游戏，有些游戏可能有保护也无法解包）。</p><p><img src="/2025/01/25/%E7%94%A8AssetStudio%E8%8E%B7%E5%8F%96Steam%E4%B8%8AUnity%E6%B8%B8%E6%88%8F%E8%B5%84%E4%BA%A7/1737818607362.png" alt="1737818607362"></p><p>选择file-&gt;load folder.</p><p><img src="/2025/01/25/%E7%94%A8AssetStudio%E8%8E%B7%E5%8F%96Steam%E4%B8%8AUnity%E6%B8%B8%E6%88%8F%E8%B5%84%E4%BA%A7/1737818663186.png" alt="1737818663186"></p><p>粘贴地址即可。</p><p><img src="/2025/01/25/%E7%94%A8AssetStudio%E8%8E%B7%E5%8F%96Steam%E4%B8%8AUnity%E6%B8%B8%E6%88%8F%E8%B5%84%E4%BA%A7/1737818701130.png" alt="1737818701130"></p><p>解包过程比较长，会一直出现报错，点击确定即可。但是不点击的话似乎就不会继续解包下去。</p><p><img src="/2025/01/25/%E7%94%A8AssetStudio%E8%8E%B7%E5%8F%96Steam%E4%B8%8AUnity%E6%B8%B8%E6%88%8F%E8%B5%84%E4%BA%A7/1737797842210.png" alt="1737797842210"></p><p>解包完成后，点击Asset List查看解包文件，Mesh的是模型文件，还有其它种类的资产都会在里面。</p><p><img src="/2025/01/25/%E7%94%A8AssetStudio%E8%8E%B7%E5%8F%96Steam%E4%B8%8AUnity%E6%B8%B8%E6%88%8F%E8%B5%84%E4%BA%A7/1737802334773.png" alt="1737802334773"></p><p>点击Export可以导出全部资产到本地，或者指定资产导出。</p><p><img src="/2025/01/25/%E7%94%A8AssetStudio%E8%8E%B7%E5%8F%96Steam%E4%B8%8AUnity%E6%B8%B8%E6%88%8F%E8%B5%84%E4%BA%A7/1737802295833.png" alt="1737802295833"></p><p>全部导出时间比较长，中间没有确定，挂机等待即可。</p><p><img src="/2025/01/25/%E7%94%A8AssetStudio%E8%8E%B7%E5%8F%96Steam%E4%B8%8AUnity%E6%B8%B8%E6%88%8F%E8%B5%84%E4%BA%A7/1737818232014.png" alt="1737818232014"></p><p>导出目录如下(以米塔为例，xml文件是另外导出的资产目录)：</p><p><img src="/2025/01/25/%E7%94%A8AssetStudio%E8%8E%B7%E5%8F%96Steam%E4%B8%8AUnity%E6%B8%B8%E6%88%8F%E8%B5%84%E4%BA%A7/1737818930610.png" alt="1737818930610"></p>]]></content>
      
      
      
        <tags>
            
            <tag> unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity-Shader入门笔记2</title>
      <link href="/2025/01/24/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B02/"/>
      <url>/2025/01/24/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B02/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Shader-是什么"><a href="#Shader-是什么" class="headerlink" title="Shader 是什么"></a>Shader 是什么</h1><p>Shader的中文意思是 着色器是一种用于描述如何渲染图形和计算图形外观的程序主要用于控制图形的颜色、光照、纹理和其他视觉效果。</p><p>着色器通常由着色器语言编写，这些着色器语言提供了指令和语法用于编写描述光照、纹理映射、阴影、反射等图形外观的代码。</p><p><strong>Shader就是着色器，是用于编写图形表现效果的程序代码。</strong></p><p>为了和前面通用的Shader 语义进行区分，我们把Unity 中的Shader文件统称为<strong>Unity Shader</strong>。这是因为，Unity Shader和我们之前提及的渲染管线的Shader有很大不同。</p><h1 id="Shader-和渲染管线的关系"><a href="#Shader-和渲染管线的关系" class="headerlink" title="Shader 和渲染管线的关系"></a>Shader 和渲染管线的关系</h1><p>Shader和渲染管线的关系是密不可分的，渲染管线(流水线)的基本概念是将数据分阶段的变为屏幕图像的过程<br>而Shader开发就是针对其中<strong>某些阶段的自定义开发</strong>从而<strong>决定</strong>图形图像最终呈现到屏幕上的表现效果。</p><p>主要针对的是几何阶段中的<strong>顶点着色器</strong>小阶段和光栅化阶段中的<strong>片元着色器</strong>小阶段。</p><p><img src="/2025/01/24/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B02/1737731392848.png" alt="1737731392848"></p><p><img src="/2025/01/24/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B02/1737731427662.png" alt="1737731427662"></p><h2 id="如何学习Shader开发"><a href="#如何学习Shader开发" class="headerlink" title="如何学习Shader开发"></a>如何学习Shader开发</h2><p>学习Shader开发，我们必须要学习的基本知识有：<br>        1.数学相关知识<br>        2.语法相关知识<br>        3.着色器开发相关知识</p><p>在Unity Shader开发过程中，我们需要学习Unity中的<strong>ShaderLab</strong>语法和着色开发的<strong>CG</strong>语言。在Unity中，所有的Unity Shader 都是使用 ShaderLab来编写的。ShaderLab是Unity 提供的编写Unity Shader的一种说明性语言。它使用了一些嵌套在花括号内部的**语义(syntax)**来描述一个Unity Shader 文件的结构。这些结构包含了许多渲染所需的数据，例如Properties 语句块中定义了着色器所需的各种属性，这些属性将会出现在材质面板中。</p><p><img src="/2025/01/24/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B02/1737731996254.png" alt="1737731996254"></p><h1 id="Material"><a href="#Material" class="headerlink" title="Material"></a>Material</h1><p>在Unity 中我们需要配合使用材质(Material)和Unity Shader才能达到需要的效果。一个最常见的流程是： </p><p>(1)创建一个材质； </p><p>(2)创建一个Unity Shader,并把它赋给上一步中创建的材质： </p><p>(3)把材质赋给要渲染的对象； </p><p>(4)在材质面板中调整Unity Shader的属性，以得到满意的效果。</p><p>下面是Unity Shader的导入设置面板。</p><p><img src="/2025/01/24/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B02/1737732586808.png" alt="1737732586808"></p><p><img src="/2025/01/24/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B02/1737780661854.png" alt="1737780661854"></p><p><img src="/2025/01/24/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B02/1737780867047.png" alt="1737780867047"></p><h1 id="Shader示例"><a href="#Shader示例" class="headerlink" title="Shader示例"></a>Shader示例</h1><p>下面是一个 <strong>ShaderLab</strong> 编写的自定义Shader 。</p><p><img src="/2025/01/24/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B02/1737780837136.png" alt="1737780837136"></p><p>下面是一般形式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Shader&quot;ShaderName&quot;&#123;</span><br><span class="line">Properties</span><br><span class="line">&#123;</span><br><span class="line">// 属性</span><br><span class="line">&#125;</span><br><span class="line">SubShader &#123;</span><br><span class="line">// 显卡A使用的子着色器</span><br><span class="line">&#125;</span><br><span class="line">SubShader &#123;</span><br><span class="line">// 显卡B使用的子着色器</span><br><span class="line">&#125;</span><br><span class="line">Fallback &quot;Diffuse&quot;</span><br><span class="line">//Fallback 是一个用于指定当某个Shader无法使用时，自动回退到其他Shader的机制。它通常用于确保在不支持某些高级图形特性的设备上，仍然能够渲染对象而不会导致错误或崩溃。</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Unity 在背后会根据使用的平台来把这些结构编译成<strong>真正的代码和 Shader 文件</strong>，而开发者只需要和Unity Shader打交道即可。</p><h2 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h2><p>材质和 Unity Shader的桥梁：Properties。</p><p>Properties语义块中包含了一系列属性(property)，这些属性将会出现在材质面板中，斜杠来组织在材质面板中的位置 。</p><p>Properties 语义块的定义通常如下： </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Properties&#123;</span><br><span class="line"></span><br><span class="line">Name(&quot;display name&quot;,PropertyType)= DefaultValue </span><br><span class="line"></span><br><span class="line">Name(&quot;display name&quot;,PropertyType)- DefaultValue </span><br><span class="line"></span><br><span class="line">// 更多属性 </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>开发者们声明这些属性是为了在材质面板中能够方便地调整各种材质属性。如果我们需要在Shader 中访问它们，就需要使用每个属性的名字(Name)。在Unity 中，这些属性的名字通常由一个下划线开始。显示的名称(display name)则是出现在材质面板上的名字。我们需要为每个属性指定它的类型(PropertyType)。除此之外，我们还需要为每 个属性指定一个默认值，在我们第一次把该Unity Shader 赋给某个材质时，材质面板上显示的就是这些默认值。</p><p><img src="/2025/01/24/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B02/1737781808834.png" alt="1737781808834"></p><h2 id="SubShader"><a href="#SubShader" class="headerlink" title="SubShader"></a>SubShader</h2><p>每一个Unity Shader文件可以包含多个SubShader语义块，但最少要有一个。当Unity 需要加载这个Unity Shader时，Unity会扫描所有的SubShader语义块，然后选择第一个能够在目标平台运行的SubShader。如果都不支持的话，Unity 就会使用Fallback语义指定的Unity Shader。Unity 提供这种语义的原因在于，不同的显卡具有不同的能力。例如，一些旧的显卡仅能支 持一定数目的操作指令，而一些更高级的显卡可以支持更多的指令数，那么我们希望在旧的显卡 上使用计算复杂度较低的着色器，而在高级的显卡上使用计算复杂度较高的着色器，以便提供更出色的画面。</p><p><img src="/2025/01/24/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B02/1737781848687.png" alt="1737781848687"></p><p><img src="/2025/01/24/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B02/1737781918447.png" alt="1737781918447"></p><p>上述标签仅可以在SubShader中声明，而不可以在Pass块中声明。Pass块虽然也可以定义标签，但这些标签是不同于SubShader的标签类型。</p><p>Pass 语义块包含的语义如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Pass &#123;</span><br><span class="line">[Name]</span><br><span class="line">[Tags]</span><br><span class="line">[RenderSetup]</span><br><span class="line">// Other code</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Pass同样可以设置标签，但它的标签不同于SubShader的标签。这些标签也是用于告诉渲染引擎我们希望怎样来渲染该物体。</p><p><img src="/2025/01/24/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B02/1737782439567.png" alt="1737782439567"></p><h2 id="Fallback"><a href="#Fallback" class="headerlink" title="Fallback"></a>Fallback</h2><p>紧跟在各个SubShader语义块后面的，可以是一个Fallback 指令。它用于告诉Unity，“如果上面所有的SubShader在这块显卡上都不能运行，那么就使用这个最低级的Shader吧!”</p><p>Fallback 是一个用于指定当某个Shader无法使用时，自动回退到其他Shader的机制。它通常用于确保在不支持某些高级图形特性的设备上，仍然能够渲染对象而不会导致错误或崩溃。</p><h1 id="Unity-Shader-的形式"><a href="#Unity-Shader-的形式" class="headerlink" title="Unity Shader 的形式"></a>Unity Shader 的形式</h1><p>最重要的任务还是指定各种着色器所需的代码。这些着色器代码可以写在SubShader语义块中(表面着色器的做法),也可以写在Pass 语义块中(顶 点&#x2F;片元着色器和固定函数着色器的做法)。</p><h2 id="表面着色器"><a href="#表面着色器" class="headerlink" title="表面着色器"></a>表面着色器</h2><p>表面着色器(Surface Shader)是Unity自己创造的一种着色器代码类型。它需要的代码量很少，Unity 在背后做了很多工作，但渲染的代价比较大。它在本质上和下面要讲到的顶点&#x2F;片元着色器是一样的。当给 Unity 提供一个表面着色器的时候，它在背后仍旧把它转换成对应的顶点&#x2F;片元着色器。</p><p><img src="/2025/01/24/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B02/1737784331576.png" alt="1737784331576"></p><p>GPROGRAM和ENDCG之间的代码是使用CG&#x2F;HLSL 编写的，也就是说，我们需要把CG&#x2F;HLSL语言嵌套在 ShaderLab语言中。值得注意的是，这里的CG&#x2F;HLSL是Unity 经封装后提供的，它的语法和标准的CG&#x2F;HLSL 语法几乎一样，但还是有细微的不同，例如有些原生的函数 和用法Unity并没有提供支持。</p><h2 id="顶点-片元着色器"><a href="#顶点-片元着色器" class="headerlink" title="顶点&#x2F;片元着色器"></a>顶点&#x2F;片元着色器</h2><p>在Unity中我们可以使用CG&#x2F;HLSL语言来编写顶点&#x2F;片元着色器(Vertex&#x2F;Fragment Shader)。它们更加复杂，但灵活性也更高。一个非常简单的顶点&#x2F;片元着色器示例代码如下：</p><p><img src="/2025/01/24/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B02/1737784414078.png" alt="1737784414078"></p>]]></content>
      
      
      
        <tags>
            
            <tag> unity </tag>
            
            <tag> shader </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UnityShader常见术语</title>
      <link href="/2025/01/23/UnityShader%E5%B8%B8%E8%A7%81%E6%9C%AF%E8%AF%AD/"/>
      <url>/2025/01/23/UnityShader%E5%B8%B8%E8%A7%81%E6%9C%AF%E8%AF%AD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="OpenGL-和-DirectX"><a href="#OpenGL-和-DirectX" class="headerlink" title="OpenGL 和 DirectX"></a><strong>OpenGL</strong> 和 <strong>DirectX</strong></h1><p><strong>OpenGL</strong> 和 <strong>DirectX</strong> 都是计算机图形和游戏开发中常用的图形渲染接口（API），它们提供了一组工具和规范，允许开发者控制硬件来创建图形和处理多媒体内容。虽然它们的核心功能相似，但它们有不同的历史背景、平台支持和设计哲学。</p><h3 id="1-OpenGL（Open-Graphics-Library）"><a href="#1-OpenGL（Open-Graphics-Library）" class="headerlink" title="1. OpenGL（Open Graphics Library）"></a><strong>1. OpenGL（Open Graphics Library）</strong></h3><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a><strong>概述</strong></h4><ul><li><strong>开放标准</strong>：OpenGL 是一个跨平台的图形渲染 API，最初由硅图形（SGI）公司于 1992 年开发，现在由非盈利组织 <strong>Khronos Group</strong> 维护。它是一个开放标准，意味着任何公司或开发者都可以免费使用和实现它。</li><li><strong>跨平台支持</strong>：OpenGL 主要支持跨平台操作系统，如 Windows、Linux、macOS（虽然 Apple 现在推崇 Metal）以及一些移动平台（通过 OpenGL ES）。</li><li><strong>灵活性</strong>：OpenGL 是一个比较低层次的 API，提供了大量的可配置选项，可以允许开发者非常精细地控制图形渲染过程。</li></ul><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a><strong>优点</strong></h4><ul><li><strong>跨平台</strong>：OpenGL 可以在多种操作系统上运行，因此，基于 OpenGL 的应用程序可以更容易地在不同平台间移植。</li><li><strong>开放性</strong>：作为一个开放标准，OpenGL 的文档和规范可以免费访问，且得到了广泛的支持。</li><li><strong>成熟的社区支持</strong>：OpenGL 拥有丰富的教程、开发工具和开源项目，有庞大的开发者社区支持。</li></ul><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a><strong>缺点</strong></h4><ul><li><strong>性能问题</strong>：由于其抽象层较高，OpenGL 相比 DirectX 可能在一些平台上的性能较差。</li><li><strong>较为复杂</strong>：OpenGL 对开发者的要求较高，提供了大量的自由度，这可能会导致开发变得复杂。</li></ul><h4 id="应用领域"><a href="#应用领域" class="headerlink" title="应用领域"></a><strong>应用领域</strong></h4><ul><li>OpenGL 主要用于游戏、3D 图形、科学计算（如计算机辅助设计 CAD）、虚拟现实、图像处理等领域。</li></ul><h3 id="2-DirectX"><a href="#2-DirectX" class="headerlink" title="2. DirectX"></a><strong>2. DirectX</strong></h3><h4 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a><strong>概述</strong></h4><ul><li><strong>微软的专有技术</strong>：DirectX 是由微软开发并为 Windows 平台量身定制的多媒体接口，首次发布于 1995 年。它包括多个子组件，其中 <strong>Direct3D</strong> 是专门用于图形渲染的部分，类似于 OpenGL。</li><li><strong>Windows 专用</strong>：与 OpenGL 的跨平台支持不同，DirectX 只适用于 Windows 操作系统和 Xbox 游戏机。虽然 DirectX 的某些功能（如 DirectCompute）也能在其他平台上运行，但 Direct3D 主要用于 Windows 平台。</li></ul><h4 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a><strong>优点</strong></h4><ul><li><strong>优化的性能</strong>：由于 DirectX 是专为 Windows 平台设计的，微软能够在操作系统层面对其进行优化，因此它在 Windows 上的性能通常优于 OpenGL。</li><li><strong>紧密集成</strong>：DirectX 与 Windows 操作系统和硬件的集成更为紧密，因此它能够更好地利用 Windows 系统提供的功能和硬件加速。</li><li><strong>更易上手</strong>：与 OpenGL 相比，DirectX 的 API 在一些情况下设计得更加简洁易用，尤其是在开发游戏时，微软为 DirectX 提供了丰富的工具和库，帮助开发者更快上手。</li></ul><h4 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a><strong>缺点</strong></h4><ul><li><strong>平台限制</strong>：DirectX 仅限于 Windows 和 Xbox 系统，这使得它在跨平台开发时受限。虽然通过工具如 Wine 可以在 Linux 上运行 DirectX 应用，但这并不是一个完美的解决方案。</li><li><strong>封闭性</strong>：作为一个专有技术，DirectX 不是开放标准，微软控制着其更新和发展，某些方面的文档和实现并不如 OpenGL 那样透明。</li></ul><h4 id="应用领域-1"><a href="#应用领域-1" class="headerlink" title="应用领域"></a><strong>应用领域</strong></h4><ul><li>DirectX 是 Windows 上最常用的图形 API，尤其在游戏开发领域。许多 Windows 游戏和基于 Xbox 的游戏都依赖 Direct3D（DirectX 的一部分）来进行图形渲染。</li></ul><h3 id="OpenGL-vs-DirectX-的比较"><a href="#OpenGL-vs-DirectX-的比较" class="headerlink" title="OpenGL vs DirectX 的比较"></a><strong>OpenGL vs DirectX 的比较</strong></h3><table><thead><tr><th>特性</th><th><strong>OpenGL</strong></th><th><strong>DirectX</strong></th></tr></thead><tbody><tr><td><strong>平台支持</strong></td><td>跨平台（Windows、Linux、macOS、移动设备等）</td><td>主要支持 Windows 和 Xbox</td></tr><tr><td><strong>开源与闭源</strong></td><td>开源，开发者可以自由使用和修改</td><td>封闭，微软控制开发和更新</td></tr><tr><td><strong>性能</strong></td><td>在跨平台应用中有时不如 DirectX 高效</td><td>在 Windows 上经过优化，通常性能更好</td></tr><tr><td><strong>API 复杂度</strong></td><td>较为复杂，提供更多灵活性和控制</td><td>相对较简洁，易于上手</td></tr><tr><td><strong>文档和支持</strong></td><td>文档和社区支持广泛，跨平台开发社区活跃</td><td>主要针对 Windows 平台，文档和工具完善</td></tr><tr><td><strong>开发工具支持</strong></td><td>可以在多种平台上使用各类开发工具</td><td>紧密集成于 Visual Studio 等工具</td></tr></tbody></table><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h3><ul><li><strong>OpenGL</strong> 适合那些需要跨平台支持的应用程序和开发者，尤其是那些需要灵活控制渲染细节的场景，如学术研究、跨平台游戏开发等。</li><li><strong>DirectX</strong> 则更加适合 Windows 平台的开发，尤其是在游戏和图形密集型应用中，由于其对 Windows 系统和硬件的优化，通常提供更高的性能和更好的支持。</li></ul><p>对于游戏开发者来说，<strong>DirectX</strong> 通常是 Windows 游戏开发的首选，而对于跨平台应用或者需要支持多种操作系统的开发者来说，<strong>OpenGL</strong>（或其衍生的 Vulkan）则可能是更好的选择。</p><p><img src="/2025/01/23/UnityShader%E5%B8%B8%E8%A7%81%E6%9C%AF%E8%AF%AD/1737611317237.png" alt="1737611317237"></p><h1 id="HLSL、GLSL-和Cg"><a href="#HLSL、GLSL-和Cg" class="headerlink" title="HLSL、GLSL 和Cg"></a><strong>HLSL</strong>、<strong>GLSL</strong> 和<strong>Cg</strong></h1><p><strong>HLSL</strong>（High-Level Shading Language）、<strong>GLSL</strong>（OpenGL Shading Language）和 <strong>Cg</strong>（C for Graphics）都是用于编写图形着色器（shaders）的编程语言。它们的主要用途是为图形处理单元（GPU）编写程序，以执行特定的图形计算任务，比如渲染、光照、纹理映射等。这些着色器程序会在图形渲染管线中运行，以实现复杂的视觉效果。</p><p>下面是这三种语言的详细介绍：</p><hr><h3 id="1-HLSL-High-Level-Shading-Language"><a href="#1-HLSL-High-Level-Shading-Language" class="headerlink" title="1. HLSL (High-Level Shading Language)"></a><strong>1. HLSL (High-Level Shading Language)</strong></h3><h4 id="概述-2"><a href="#概述-2" class="headerlink" title="概述"></a><strong>概述</strong></h4><ul><li><strong>HLSL</strong> 是微软为 <strong>DirectX</strong> 提供的着色器语言，用于在 <strong>Direct3D</strong> 环境中编写着色器程序。</li><li>它是 <strong>高层次的着色器语言</strong>，语法类似于 C，且专为 GPU 编程设计。</li><li>通过 HLSL，开发者可以编写各种类型的着色器，如 <strong>顶点着色器</strong>、<strong>像素着色器</strong>、<strong>几何着色器</strong>、<strong>计算着色器</strong> 等。</li></ul><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a><strong>特点</strong></h4><ul><li><strong>平台依赖</strong>：HLSL 仅在 Windows 和 Xbox 平台上使用，因为它与 DirectX（特别是 Direct3D）紧密集成。</li><li><strong>强大的功能</strong>：提供了大量的图形编程功能，允许开发者控制渲染管线的各个阶段。</li><li><strong>语法简洁</strong>：类似于 C&#x2F;C++，这使得它对大多数熟悉 C 语言的程序员更易于上手。</li></ul><h4 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a><strong>应用场景</strong></h4><ul><li>用于 Windows 和 Xbox 平台的游戏和图形应用开发，特别是 DirectX 环境下的图形渲染编程。</li></ul><h4 id="示例（HLSL）"><a href="#示例（HLSL）" class="headerlink" title="示例（HLSL）"></a><strong>示例（HLSL）</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">struct PS_INPUT</span><br><span class="line">&#123;</span><br><span class="line">    float4 pos : POSITION;</span><br><span class="line">    float4 color : COLOR;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">float4 main(PS_INPUT input) : SV_Target</span><br><span class="line">&#123;</span><br><span class="line">    return input.color;  // 输出颜色</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="2-GLSL-OpenGL-Shading-Language"><a href="#2-GLSL-OpenGL-Shading-Language" class="headerlink" title="2. GLSL (OpenGL Shading Language)"></a><strong>2. GLSL (OpenGL Shading Language)</strong></h3><h4 id="概述-3"><a href="#概述-3" class="headerlink" title="概述"></a><strong>概述</strong></h4><ul><li><strong>GLSL</strong> 是 <strong>OpenGL</strong> 使用的着色器语言，设计目的是为 OpenGL 提供一种高效的、与平台无关的图形编程方式。</li><li>它是与 OpenGL 和 OpenGL ES 配套的，支持顶点着色器、片段着色器（即像素着色器）、几何着色器等类型的着色器。</li></ul><h4 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a><strong>特点</strong></h4><ul><li><strong>跨平台</strong>：GLSL 是 OpenGL 的一部分，因此它可以在支持 OpenGL 的任何平台上运行（如 Windows、Linux、macOS、Android、iOS 等）。</li><li><strong>灵活性</strong>：GLSL 允许开发者编写高效的图形程序，并且它支持现代图形渲染的多种特性，如 <strong>计算着色器</strong>、<strong>光照模型</strong>、<strong>纹理处理</strong> 等。</li><li><strong>与 OpenGL 紧密结合</strong>：GLSL 是 OpenGL 的一部分，它直接操作 OpenGL 渲染管线中的数据，简化了与图形硬件的交互。</li></ul><h4 id="应用场景-1"><a href="#应用场景-1" class="headerlink" title="应用场景"></a><strong>应用场景</strong></h4><ul><li>用于所有支持 OpenGL 和 OpenGL ES 的平台，包括桌面、移动设备以及嵌入式系统。</li></ul><h4 id="示例（GLSL）"><a href="#示例（GLSL）" class="headerlink" title="示例（GLSL）"></a><strong>示例（GLSL）</strong></h4><figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"><span class="keyword">in</span> <span class="type">vec4</span> color;</span><br><span class="line"><span class="keyword">out</span> <span class="type">vec4</span> FragColor;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    FragColor = color;  <span class="comment">// 输出颜色</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="3-Cg-C-for-Graphics"><a href="#3-Cg-C-for-Graphics" class="headerlink" title="3. Cg (C for Graphics)"></a><strong>3. Cg (C for Graphics)</strong></h3><h4 id="概述-4"><a href="#概述-4" class="headerlink" title="概述"></a><strong>概述</strong></h4><ul><li><strong>Cg</strong> 是 <strong>NVIDIA</strong> 开发的图形着色器语言，旨在提供一种跨平台的着色器编程语言，它的语法类似于 C 语言。</li><li>Cg 在设计时参考了 HLSL 和 GLSL，试图结合两者的优点。它在早期广泛用于 <strong>OpenGL</strong> 和 <strong>DirectX</strong> 环境中，但近年来逐渐被 <strong>HLSL</strong> 和 <strong>GLSL</strong> 取代。</li><li>Cg 提供了丰富的图形编程功能，并且可以生成针对不同平台和图形 API（如 DirectX 和 OpenGL）的代码。</li></ul><h4 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a><strong>特点</strong></h4><ul><li><strong>跨平台</strong>：Cg 最初被设计为可以在多种图形 API（包括 OpenGL 和 DirectX）中使用，因此它有跨平台的优势。</li><li><strong>工具支持</strong>：NVIDIA 提供了 Cg 的编译器和工具，帮助开发者生成优化的着色器代码。</li><li><strong>已过时</strong>：由于 HLSL 和 GLSL 的广泛应用，NVIDIA 已不再积极更新 Cg，目前已经不再作为主流的图形编程语言。</li></ul><h4 id="应用场景-2"><a href="#应用场景-2" class="headerlink" title="应用场景"></a><strong>应用场景</strong></h4><ul><li>以前用于开发跨平台的图形应用，特别是在 OpenGL 和 DirectX 环境下。但如今它的使用逐渐减少，开发者更多使用 HLSL 和 GLSL。</li></ul><h4 id="示例（Cg）"><a href="#示例（Cg）" class="headerlink" title="示例（Cg）"></a><strong>示例（Cg）</strong></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">struct PS_INPUT</span><br><span class="line">&#123;</span><br><span class="line">    float4 pos : POSITION;</span><br><span class="line">    float4 color : COLOR;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">float4 main(PS_INPUT input) : COLOR</span><br><span class="line">&#123;</span><br><span class="line">    return input.color;  // 输出颜色</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="比较：HLSL、GLSL、Cg"><a href="#比较：HLSL、GLSL、Cg" class="headerlink" title="比较：HLSL、GLSL、Cg"></a><strong>比较：HLSL、GLSL、Cg</strong></h3><table><thead><tr><th>特性</th><th><strong>HLSL</strong></th><th><strong>GLSL</strong></th><th><strong>Cg</strong></th></tr></thead><tbody><tr><td><strong>平台支持</strong></td><td>主要用于 Windows 和 Xbox（DirectX）</td><td>跨平台支持（Windows、Linux、macOS 等）</td><td>跨平台支持（OpenGL 和 DirectX）</td></tr><tr><td><strong>语言风格</strong></td><td>类似 C&#x2F;C++，语法清晰简洁</td><td>类似 C，易于理解，接近硬件编程</td><td>类似 C，融合了 HLSL 和 GLSL 的优点</td></tr><tr><td><strong>功能性</strong></td><td>强大，特别是在 Direct3D 环境下</td><td>强大，专为 OpenGL 环境设计</td><td>早期强大，但现在逐渐被 HLSL 和 GLSL 取代</td></tr><tr><td><strong>主流使用</strong></td><td>游戏、图形开发，特别是在 Windows 平台</td><td>游戏开发、图形应用，支持广泛平台</td><td>过去用于跨平台开发，但现已过时</td></tr><tr><td><strong>未来前景</strong></td><td>强大且继续更新，尤其在 DirectX 中</td><td>广泛使用，特别是在跨平台应用中</td><td>已不再更新，逐渐被淘汰</td></tr></tbody></table><h3 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a><strong>总结</strong></h3><ul><li><strong>HLSL</strong>：专为 DirectX 环境设计，主要用于 Windows 和 Xbox 游戏开发，性能优化较好，功能强大。</li><li><strong>GLSL</strong>：与 OpenGL 紧密集成，支持跨平台应用，适用于桌面、移动和嵌入式平台的图形开发。</li><li><strong>Cg</strong>：早期为跨平台图形开发设计，但现在被 HLSL 和 GLSL 取代，逐渐过时。</li></ul><p>如今，开发者通常根据所选平台和图形 API 来选择合适的着色器语言：如果是 Windows 和 Xbox 平台，使用 HLSL；如果是跨平台应用，使用 GLSL。Cg 曾经有一定的影响力，但现在已不再是主流选择。对于Unity平台，我们同样可以选择使用哪种语言。在Unity Shader中，我们可以<strong>选择使用 “CG&#x2F;HLSL”或者“GLSL”</strong>。带引号是因为Unity里的这些着色语言并不是真正意义上的对应的着色语言，尽管它们的语法几乎一样。以Unity CG为例，你有时会发现有些CG语法在Unity Shader中是不支持的。</p><h1 id="Draw-Call"><a href="#Draw-Call" class="headerlink" title="Draw Call"></a><strong>Draw Call</strong></h1><p><strong>Draw Call</strong> 是计算机图形学中的一个术语，指的是向图形处理单元（GPU）发出的一次请求，要求它渲染（绘制）一个或多个图形元素（如三角形、纹理、顶点等）。每个 Draw Call 通常代表一次对 GPU 的操作，它告诉 GPU 需要渲染的内容以及如何渲染。</p><h3 id="详细解释"><a href="#详细解释" class="headerlink" title="详细解释"></a><strong>详细解释</strong></h3><p>在现代的图形渲染中，GPU 执行渲染操作时，会接收来自 CPU 的一系列指令（这些指令包括顶点数据、材质、纹理、光照等信息）。每个 Draw Call 就是这种指令的一个集合，包含了关于如何绘制某个图形的详细信息。通常情况下，一个 Draw Call 可能会涉及到以下内容：</p><ul><li><strong>顶点数据</strong>：比如一个三角形的三个顶点的坐标。</li><li><strong>纹理数据</strong>：图像或纹理应用到图形表面的方式。</li><li><strong>着色器</strong>：控制渲染效果的程序（如顶点着色器和片段着色器）。</li><li><strong>渲染目标</strong>：要渲染到的帧缓冲或图像。</li></ul><h3 id="简单的-Draw-Call-流程"><a href="#简单的-Draw-Call-流程" class="headerlink" title="简单的 Draw Call 流程"></a><strong>简单的 Draw Call 流程</strong></h3><ol><li><strong>CPU 发出 Draw Call</strong>：游戏或应用程序的 CPU 会通过调用 API（如 OpenGL、DirectX 或 Vulkan）发出一个 Draw Call，请求 GPU 渲染指定的几何体。</li><li><strong>GPU 执行渲染</strong>：GPU 会使用这个指令中包含的数据（如顶点、纹理、着色器等），然后渲染出图形。</li><li><strong>输出图像</strong>：GPU 渲染后的图形会被输出到屏幕或渲染目标（如一个纹理）。</li></ol><p><img src="/2025/01/23/UnityShader%E5%B8%B8%E8%A7%81%E6%9C%AF%E8%AF%AD/1737611739112.png" alt="1737611739112"></p><h3 id="如何优化-Draw-Call"><a href="#如何优化-Draw-Call" class="headerlink" title="如何优化 Draw Call"></a><strong>如何优化 Draw Call</strong></h3><p>优化 Draw Call 的目的是减少每帧中发出的 Draw Call 数量，这可以通过以下方式实现：</p><ol><li><strong>合并绘制操作</strong>：<ul><li><strong>批量渲染</strong>：将多个物体的渲染合并为一次 Draw Call。例如，多个静态物体可以放入同一个批次，使用相同的材质和纹理来减少 Draw Call。</li><li><strong>实例化渲染（Instancing）</strong>：当多个物体具有相同的几何体结构但不同的位置、缩放或旋转时，可以使用实例化渲染，将所有实例的绘制合并为一个 Draw Call。这样，只需发送一次 Draw Call，就能渲染多个相同物体。</li></ul></li><li><strong>减少状态切换</strong>：<ul><li>GPU 渲染时需要设置各种状态（如纹理、着色器等）。频繁地切换这些状态（例如更换纹理或着色器）会增加开销。优化时，尽量保持状态的一致性，减少不必要的切换。</li></ul></li><li><strong>合并多个小物体</strong>：<ul><li>如果场景中有很多小物体，可以将它们合并成更大的几何体，减少每个物体的独立 Draw Call。</li></ul></li><li><strong>使用合适的渲染 API</strong>：<ul><li>一些现代的渲染 API（如 <strong>Vulkan</strong> 和 <strong>DirectX 12</strong>）允许开发者更细粒度地控制 GPU 和 CPU 之间的交互，优化 Draw Call 的发出时机，从而减轻性能负担。</li></ul></li></ol><h3 id="Draw-Call-示例"><a href="#Draw-Call-示例" class="headerlink" title="Draw Call 示例"></a><strong>Draw Call 示例</strong></h3><p>假设我们要渲染一个简单的场景，包含一个立方体和一个球体。每个物体都有自己的纹理和着色器。如果我们分别为每个物体发出一个 Draw Call，那么会有两个 Draw Call：一个用于渲染立方体，另一个用于渲染球体。</p><ul><li><strong>高效的做法</strong>：如果立方体和球体使用相同的材质和纹理，可以将它们合并成一个 Draw Call，通过批量渲染或者实例化渲染来减少 Draw Call 数量。</li></ul><h1 id="固定管线渲染"><a href="#固定管线渲染" class="headerlink" title="固定管线渲染"></a><strong>固定管线渲染</strong></h1><p><strong>固定管线渲染</strong>（Fixed-Function Pipeline Rendering）是指在计算机图形学中，一种由图形 API 提供的预定义的、不可定制的渲染管线，它以固定的顺序执行一系列图形处理步骤。也就是说，渲染过程中的各个步骤已经被硬件或 API 固定下来，开发者无法修改或控制这些步骤的执行顺序或具体实现。</p><p>在早期的图形硬件（GPU）中，固定管线渲染是最常用的方式，开发者通过调用图形 API（如 OpenGL 或 DirectX）中的固定功能，来完成图形的渲染任务。这些功能包括光照、纹理映射、颜色混合、裁剪等。</p><h3 id="固定管线渲染的工作原理"><a href="#固定管线渲染的工作原理" class="headerlink" title="固定管线渲染的工作原理"></a><strong>固定管线渲染的工作原理</strong></h3><p>固定管线渲染通常遵循以下几个主要阶段（顺序可能略有不同，取决于具体的 API 和硬件）：</p><ol><li><strong>模型变换（Model Transformation）</strong>：<ul><li>将物体的顶点从物体坐标系变换到世界坐标系。这是通过一个变换矩阵完成的，通常是物体位置、旋转和缩放的组合。</li></ul></li><li><strong>视图变换（View Transformation）</strong>：<ul><li>将物体从世界坐标系变换到观察者的视图坐标系（也叫视图空间或相机坐标系）。这个变换是为了模拟观察者的视角。</li></ul></li><li><strong>投影变换（Projection Transformation）</strong>：<ul><li>将视图空间中的顶点投影到二维视口上（屏幕上的坐标）。常见的投影方式包括透视投影（模拟现实世界的视角）和正交投影（无透视效果，常用于技术绘图或2D应用）。</li></ul></li><li><strong>裁剪（Clipping）</strong>：<ul><li>剔除那些不在视锥体内的物体，这样就避免了绘制不在视野中的物体，提高了渲染效率。</li></ul></li><li><strong>光栅化（Rasterization）</strong>：<ul><li>将三维场景中的几何体（通常是三角形）转换为二维图像的像素或片元。每个像素或片元都会有颜色、深度等属性。</li></ul></li><li><strong>纹理映射（Texture Mapping）</strong>：<ul><li>在光栅化后的片元上应用纹理图像，赋予物体更多的细节和真实感。</li></ul></li><li><strong>光照（Lighting）</strong>：<ul><li>根据物体的表面特性、光源的位置和方向，计算每个片元的光照值。固定管线的光照模型通常比较简单，只有一些基本的光照模型（如环境光、漫反射和镜面反射）。</li></ul></li><li><strong>颜色混合和输出（Blending and Output）</strong>：<ul><li>在最终的颜色输出阶段，应用颜色混合（例如透明度效果）并将最终的像素颜色输出到帧缓冲中，准备显示在屏幕上。</li></ul></li></ol><h3 id="固定管线渲染的特点"><a href="#固定管线渲染的特点" class="headerlink" title="固定管线渲染的特点"></a><strong>固定管线渲染的特点</strong></h3><ol><li><strong>不可定制</strong>：<ul><li>固定管线的渲染过程是预定义的，开发者无法控制渲染的每个步骤或添加新的步骤。例如，光照、纹理映射和着色等过程都有固定的实现方式，无法改变。</li></ul></li><li><strong>简单易用</strong>：<ul><li>由于渲染过程已经预定义好，开发者不需要关心复杂的图形编程细节，使用固定管线的开发工作量较少。适合于那些不需要高度自定义渲染的应用场景。</li></ul></li><li><strong>硬件加速</strong>：<ul><li>在早期的图形硬件上，固定管线的操作往往是由硬件直接加速的，这使得渲染过程非常高效和快速。</li></ul></li><li><strong>局限性</strong>：<ul><li>固定管线的局限性在于它的灵活性差。由于所有操作都是固定的，开发者无法根据需要定制或优化渲染管线。例如，光照模型和材质处理等都没有办法像现代的 <strong>可编程管线</strong> 那样进行自定义。</li></ul></li></ol><h3 id="固定管线渲染的历史和发展"><a href="#固定管线渲染的历史和发展" class="headerlink" title="固定管线渲染的历史和发展"></a><strong>固定管线渲染的历史和发展</strong></h3><p>在图形硬件发展早期，所有的图形操作都通过固定管线来完成。随着 GPU 技术的不断进步，特别是可编程 GPU 的出现，渲染管线逐步变得更加灵活和可定制。</p><ul><li><strong>OpenGL 2.x 和 DirectX 9</strong> 时代，固定管线仍然是主流，但引入了 <strong>着色器</strong>（Shader）的概念，使得部分渲染过程（如光照、纹理等）可以通过编程来进行定制，但仍保留了固定管线的部分功能。</li><li><strong>OpenGL 3.x 和 DirectX 10 及之后版本</strong>，固定管线逐渐被 <strong>可编程管线</strong> 取代，允许开发者编写顶点着色器、片段着色器等程序来完全控制渲染过程。这种方式提供了更高的灵活性，但也需要开发者具备更多的图形编程知识。</li></ul><h3 id="固定管线与可编程管线的比较"><a href="#固定管线与可编程管线的比较" class="headerlink" title="固定管线与可编程管线的比较"></a><strong>固定管线与可编程管线的比较</strong></h3><table><thead><tr><th>特性</th><th><strong>固定管线渲染</strong></th><th><strong>可编程管线渲染</strong></th></tr></thead><tbody><tr><td><strong>灵活性</strong></td><td>低，渲染过程不可定制</td><td>高，开发者可以自定义顶点着色器、片段着色器等</td></tr><tr><td><strong>性能</strong></td><td>由于是固定的硬件加速，通常性能较好</td><td>更灵活但可能需要更多的优化与调整</td></tr><tr><td><strong>开发难度</strong></td><td>较低，开发者只需调用 API</td><td>较高，开发者需要编写着色器程序</td></tr><tr><td><strong>可控性</strong></td><td>不可控制，API 完全固定</td><td>完全控制渲染管线，可以实现复杂效果</td></tr><tr><td><strong>适用场景</strong></td><td>简单的渲染任务，较早的硬件或简单应用</td><td>需要高自定义的复杂渲染任务，如现代游戏</td></tr></tbody></table><h3 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a><strong>总结</strong></h3><p><strong>固定管线渲染</strong> 是早期图形硬件和渲染 API 的标准渲染方式，具有简单易用、硬件加速等特点，但缺乏灵活性，无法提供复杂的自定义渲染控制。随着图形硬件和渲染 API 的发展，固定管线逐渐被 <strong>可编程管线</strong> 替代，使得开发者能够编写着色器程序来完全控制渲染过程，提供了更高的灵活性和功能，适应了现代图形和游戏的需求。如果不是为了对较旧的设备进行兼容，不建议继续使用固定管线的渲染方式。</p>]]></content>
      
      
      
        <tags>
            
            <tag> unity </tag>
            
            <tag> shader </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity Shader入门笔记1</title>
      <link href="/2025/01/22/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/"/>
      <url>/2025/01/22/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Unity中的<strong>渲染管线</strong>和图形学中的渲染管线基本上指的是相同的概念，但是具体实现和细节方面可能存在一些差异。<br>        Unity的渲染管线建立在图形学的基础上，但是它具有自己的实现和拓展提供了一个高度可配置和可拓展的框架，允许开发者根据需求自定义渲染流程，<br>之后讲解的渲染管线相关知识主要针对Unity中的实现。</p><h3 id="什么是渲染管线"><a href="#什么是渲染管线" class="headerlink" title="什么是渲染管线?"></a>什么是渲染管线?</h3><p>渲染管线(渲染流水线)，它是计算机图形学中用于将<strong>三维场景</strong>转换为<strong>最终屏幕所见图像</strong>的过程。它是由一系列的阶段和操作组成的，每个阶段都负责执行特定的任务逐步处理输入的集合数据和纹理信息最终生成可视化图像的过程。<br>渲染管线(流水线)就是将数据分阶段的变为屏幕图像的过程</p><h3 id="渲染管线中的数据指的是什么"><a href="#渲染管线中的数据指的是什么" class="headerlink" title="渲染管线中的数据指的是什么?"></a>渲染管线中的数据指的是什么?</h3><p>渲染管线(流水线)的概念是:将数据分阶段的变为屏幕图像的过程这里的数据指的是:<br>        1.**顶点数据:**模型的顶点坐标、法线向量、纹理坐标等等。<br>        2.**纹理数据:**纹理贴图等。<br>        3.**光照数据:**光照参数、光源信息等等等 Unity场景上相关的数据。</p><h3 id="渲染管线中的分阶段指的是什么"><a href="#渲染管线中的分阶段指的是什么" class="headerlink" title="渲染管线中的分阶段指的是什么?"></a>渲染管线中的分阶段指的是什么?</h3><p>渲染管线(流水线)的概念是:将数据分阶段的变为屏幕图像的过程。</p><p>这里的分阶段指的是:渲染管线分为3个阶段：</p><p><strong>应用阶段–&gt;几何阶段–&gt;光栅化阶段</strong></p><p><img src="/2025/01/22/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/01.png"></p><p>在每一个阶段都会对数据进行处理，<strong>最终目的</strong>就是在屏幕上让我们看见最终的图像。</p><h2 id="应用阶段"><a href="#应用阶段" class="headerlink" title="应用阶段"></a>应用阶段</h2><p>这个阶段是由我们的应用主导的，因此通常由CPU负责实现。换句话说，我们这些开发者具有这个阶段的绝对控制权。 </p><p>在这一阶段中，开发者有3个主要任务：首先，我们需要准备好场景数据，例如摄像机的位置、视锥体、场景中包含了哪些模型、使用了哪些光源等等；其次，为了提高渲染性能，我们往往需要做一个粗粒度剔除(culling)工作，以把那些不可见的物体剔除出去，这样就不需要再移交给几何阶段进行处理；最后，我们需要设置好每个模型的渲染状态。这些渲染状态包括但不限于它使用的材质(漫反射颜色、高光反射颜色)、使用的纹理、使用的 Shader 等。这一阶段最重要的输出是渲染所需的几何信息，即渲染图元(rendering primitives)。通俗来讲，渲染图元将会被传递给下一个阶段——几何阶段。</p><p>应用阶段大致可分为下面3个阶段： </p><p>(1)把数据加载到显存中。 </p><p>(2)设置渲染状态。 </p><p>(3)调用Draw Call。</p><p>要注意的是，Draw Call过多时，性能瓶颈是由CPU造成的，我们可以用批处理技术来优化。</p><p><img src="/2025/01/22/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/1737554735963.png" alt="1737554735963"></p><h2 id="几何阶段"><a href="#几何阶段" class="headerlink" title="几何阶段"></a>几何阶段</h2><p>在渲染管线中，图元是指几何数据的基本单元它是构成几何体的最小可绘制的单元图元可以是点、线、三角形，在渲染管线的几何阶段，顶点数据会被组合为图元这些图元将在后续的光栅化阶段转换为像素，最终呈现在屏幕上。</p><p>几何阶段用于处理所有和我们要绘制的几何相关的事情。例如，决定需要绘制的图元是什么,，样绘制它们，在哪里绘制它们。这一阶段通常在GPU上进行。所有渲染所需的数据都需要从硬盘(Hard Disk Drive,HDD)中加载到系统内存(Random Access Memory,RAM)中。然后，网格和纹理等数据又被加载到显卡上的存储空间——显存(Video Random Access Memory, VRAM)中。这是因为，显卡对于显存的访问速度更快，而且大多数显卡对于RAM没有直接的访问权利(苹果除外， 在苹果的统一内存架构中，CPU 和 GPU 使用相同的内存池 )。</p><p>在渲染管线(流水线)的几何阶段<strong>最主要做的工作就是对顶点进行处理</strong>，并<strong>进行坐标转换裁剪画面外的图元</strong>。最主要完成的就是将模型的顶点从其<strong>本地坐标</strong>转换到最终的<strong>屏幕坐标</strong>中。对于我们来说，我们只要在顶点着色器中进行一些操作就可以带来不同的表现效果的体现，比如:水波纹、布料等等。</p><h3 id="顶点着色器"><a href="#顶点着色器" class="headerlink" title="顶点着色器:"></a>顶点着色器:</h3><p>它处理来自应用阶段由CPU传递过来的顶点相关数据，输入进来的每一个顶点都会调用一次顶点着色器中的逻辑顶点着色器需要完成的工作主要有:<br>        <strong>1.坐标变换</strong> – 顶点变换、法线变换、纹理坐标变换等</p><p><img src="/2025/01/22/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/1737594916675.png" alt="1737594916675"></p><p><strong>2.顶点属性处理</strong>– 对顶点的其他属性进行处理，比如顶点颜色、透明度、切线向最等，可以用于实现顶点动画、着色、光照等效果</p><p><strong>3.顶点插值</strong> – 计算顶点属性的插值</p><p>对于我们来说顶点着色器是<strong>完全可编程</strong>的。</p><h3 id="裁剪："><a href="#裁剪：" class="headerlink" title="裁剪："></a>裁剪：</h3><p>由于我们的场景可能会很大，而摄像机的视野范围很有可能不会覆盖所有的场景物体，一个很自然的想法就是，那些不在摄像机视野范围的物体不需要被处理。而裁剪(Clipping)就是为了完成这个目的而被提出来的。我们可以进行一些配置，但一般情况下不需要进行任何处理，渲染管线会帮我们进行处理。</p><p><img src="/2025/01/22/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/1737595173323.png" alt="1737595173323"></p><h3 id="屏幕映射-："><a href="#屏幕映射-：" class="headerlink" title="屏幕映射 ："></a>屏幕映射 ：</h3><p>这一步输入的坐标仍然是三维坐标系下的坐标(范围在单位立方体内)。屏幕映射(Sereen Mapping)的任务是把每个图元的x和y坐标转换到屏幕坐标系(Sereen Coordinates)下。屏幕坐标系是一个二维坐标系，它和我们用于显示画面的分辨率有很大关系。</p><p><img src="/2025/01/22/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/1737595297869.png" alt="1737595297869"></p><p>有一个需要引起注意的地方是，屏幕坐标系在OpenGL和DirectX 之间的差异问题。OpenGL把屏幕的左下角当成最小的窗口坐标值，而DirectX则定义了屏幕的左上角为最小的窗口坐标值。 下图显示了这样的差异。</p><p><img src="/2025/01/22/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/1737595395988.png" alt="1737595395988"></p><h2 id="光栅化阶段"><a href="#光栅化阶段" class="headerlink" title="光栅化阶段"></a>光栅化阶段</h2><p>**片元:**在渲染管线中，片元是指在光栅化阶段生成的像素或像素片段。片元是渲染管线中进行像素级别操作和计算的基本单位每个片元代表了屏幕上的一个像素，并且具有位置信息和与之相关的属性，比如:<strong>颜色、深度值、法线</strong>等等。</p><p>光栅化阶段有两个最重 要的目标：计算每个图元覆盖了哪些像素，以及为这些像素计算它们的颜色。</p><p>光栅化阶段有四个小阶段：三角形设置，三角形便利，片元着色器和逐片元操作。</p><p><img src="/2025/01/22/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/1737597839597.png" alt="1737597839597"></p><h3 id="三角形设置："><a href="#三角形设置：" class="headerlink" title="三角形设置："></a>三角形设置：</h3><p>光栅化的第一个流水线阶段是<strong>三角形设置(Triangle Setup)<strong>。这个阶段会计算光栅化一个三角网格所需的信息。具体来说，上一个阶段输出的都是三角网格的顶点，即我们得到的是三角网格每条边的两个端点。但如果要得到</strong>整个三角网格对像素的覆盖情况</strong>，我们就必须计算<strong>每条边上的像素坐标</strong>。为了能够计算边界像素的坐标信息，我们就需要得到<strong>三角形边界的表示方式</strong>。这样一个<strong>计算三角网格表示数据</strong>的过程就叫做三角形设置。它的输出是为了给下一个阶段做准备。</p><h3 id="三角形遍历-："><a href="#三角形遍历-：" class="headerlink" title="三角形遍历 ："></a>三角形遍历 ：</h3><p>三角形遍历(Triangle Traversal)阶段将会检查每个像素<strong>是否被一个三角网格所覆盖</strong>。如果被覆盖的话，就会生成一个**片元(fragment)**。而这样一个找到哪些像素被三角网格覆盖的过程就是三角形遍历，这个阶段也被称为扫描变换(Scan Conversion)。 </p><p>三角形遍历阶段会根据上一个阶段的计算结果来判断一个三角网格覆盖了哪些像素，并使用三角网格3个顶点的顶点信息对整个覆盖区域的像素进行插值。</p><p><img src="/2025/01/22/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/1737598159422.png" alt="1737598159422"></p><h3 id="片元着色器-像素着色器-："><a href="#片元着色器-像素着色器-：" class="headerlink" title="片元着色器(像素着色器)："></a>片元着色器(像素着色器)：</h3><p>它主要完成对 三角形遍历输入的片元序列中的每个片元(像素)的着色计算和属性处理。片元着色器需要完成的工作主要有:</p><p>1.光照计算 – 计算片元的光照效果。</p><p>2.纹理映射 – 根据片元在纹理中的位置，对纹理进行采样，将纹理颜色映射到片元上，实现表面贴图效果- 根据材质的属性，比如颜色、透明度、反射率等，计算片元的最终颜色和透明度。</p><p>3.材质属性处理。</p><p>4.阴影计算 – 林根据光源等信息，计算片元是否处于阴影中，影响其最终颜色。</p><p>etc.</p><p>对于我们来说片元着色器是<strong>完全可编程</strong>的。</p><p><img src="/2025/01/22/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/1737598375065.png" alt="1737598375065"></p><h3 id="逐片元操作-："><a href="#逐片元操作-：" class="headerlink" title="逐片元操作 ："></a>逐片元操作 ：</h3><p>到了渲染流水线的最后一步。<strong>逐片元操作</strong>(Per-Fragment Operations)是OpenGL中的说法，在DirectX中，这一阶段被称为输出合并阶段(Output-Merger)。</p><p>它主要完成对片元着色器输出数据(最终颜色、法线、纹理坐标、深度等)进行各种处理和计算。</p><p>逐片元操作主要完成的工作主要有:</p><p>1.决定每个片元的可见性，比如深度测试、模板测试</p><p>2.如果通过了所有测试，需要把片元的颜色值和已经存储在颜色缓冲区的颜色进行合并(混合)等等。</p><p>对于我们来说逐片元操作是<strong>可配置</strong>的。</p><p><img src="/2025/01/22/Unity-Shader%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/1737598503286.png" alt="1737598503286"></p>]]></content>
      
      
      
        <tags>
            
            <tag> unity </tag>
            
            <tag> shader </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cs2炼狱小镇道具教学</title>
      <link href="/2025/01/22/cs2%E7%82%BC%E7%8B%B1%E5%B0%8F%E9%95%87%E9%81%93%E5%85%B7%E6%95%99%E5%AD%A6/"/>
      <url>/2025/01/22/cs2%E7%82%BC%E7%8B%B1%E5%B0%8F%E9%95%87%E9%81%93%E5%85%B7%E6%95%99%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="匪"><a href="#匪" class="headerlink" title="匪"></a>匪</h1><h2 id="B包点"><a href="#B包点" class="headerlink" title="B包点"></a>B包点</h2><h3 id="rush警家烟"><a href="#rush警家烟" class="headerlink" title="rush警家烟"></a>rush警家烟</h3><p><img src="/2025/01/22/cs2%E7%82%BC%E7%8B%B1%E5%B0%8F%E9%95%87%E9%81%93%E5%85%B7%E6%95%99%E5%AD%A6/01.png"></p><p><img src="/2025/01/22/cs2%E7%82%BC%E7%8B%B1%E5%B0%8F%E9%95%87%E9%81%93%E5%85%B7%E6%95%99%E5%AD%A6/02.png"></p><h3 id="香蕉道窗户闪"><a href="#香蕉道窗户闪" class="headerlink" title="香蕉道窗户闪"></a>香蕉道窗户闪</h3><p><img src="/2025/01/22/cs2%E7%82%BC%E7%8B%B1%E5%B0%8F%E9%95%87%E9%81%93%E5%85%B7%E6%95%99%E5%AD%A6/03.png"></p><p><img src="/2025/01/22/cs2%E7%82%BC%E7%8B%B1%E5%B0%8F%E9%95%87%E9%81%93%E5%85%B7%E6%95%99%E5%AD%A6/04.png"></p><h3 id="车位火"><a href="#车位火" class="headerlink" title="车位火"></a>车位火</h3><p><img src="/2025/01/22/cs2%E7%82%BC%E7%8B%B1%E5%B0%8F%E9%95%87%E9%81%93%E5%85%B7%E6%95%99%E5%AD%A6/05.png"></p><p><img src="/2025/01/22/cs2%E7%82%BC%E7%8B%B1%E5%B0%8F%E9%95%87%E9%81%93%E5%85%B7%E6%95%99%E5%AD%A6/06.png"></p><h3 id="石板闪"><a href="#石板闪" class="headerlink" title="石板闪"></a>石板闪</h3><p><img src="/2025/01/22/cs2%E7%82%BC%E7%8B%B1%E5%B0%8F%E9%95%87%E9%81%93%E5%85%B7%E6%95%99%E5%AD%A6/05.png"></p><p><img src="/2025/01/22/cs2%E7%82%BC%E7%8B%B1%E5%B0%8F%E9%95%87%E9%81%93%E5%85%B7%E6%95%99%E5%AD%A6/06-1.png"></p><h3 id="花坛瀑布烟"><a href="#花坛瀑布烟" class="headerlink" title="花坛瀑布烟"></a>花坛瀑布烟</h3><p><img src="/2025/01/22/cs2%E7%82%BC%E7%8B%B1%E5%B0%8F%E9%95%87%E9%81%93%E5%85%B7%E6%95%99%E5%AD%A6/07.png"></p><p><img src="/2025/01/22/cs2%E7%82%BC%E7%8B%B1%E5%B0%8F%E9%95%87%E9%81%93%E5%85%B7%E6%95%99%E5%AD%A6/08.png"></p><h3 id="棺材烟"><a href="#棺材烟" class="headerlink" title="棺材烟"></a>棺材烟</h3><p><img src="/2025/01/22/cs2%E7%82%BC%E7%8B%B1%E5%B0%8F%E9%95%87%E9%81%93%E5%85%B7%E6%95%99%E5%AD%A6/09.png"></p><p><img src="/2025/01/22/cs2%E7%82%BC%E7%8B%B1%E5%B0%8F%E9%95%87%E9%81%93%E5%85%B7%E6%95%99%E5%AD%A6/10.png"></p><h2 id="A包点（未完待续）"><a href="#A包点（未完待续）" class="headerlink" title="A包点（未完待续）"></a>A包点（未完待续）</h2><p><img src="/2025/01/22/cs2%E7%82%BC%E7%8B%B1%E5%B0%8F%E9%95%87%E9%81%93%E5%85%B7%E6%95%99%E5%AD%A6/11.png"></p><p><img src="/2025/01/22/cs2%E7%82%BC%E7%8B%B1%E5%B0%8F%E9%95%87%E9%81%93%E5%85%B7%E6%95%99%E5%AD%A6/12.png"></p><h1 id="警"><a href="#警" class="headerlink" title="警"></a>警</h1><h2 id="中路"><a href="#中路" class="headerlink" title="中路"></a>中路</h2><h3 id="Faze烟"><a href="#Faze烟" class="headerlink" title="Faze烟"></a>Faze烟</h3><p><img src="/2025/01/22/cs2%E7%82%BC%E7%8B%B1%E5%B0%8F%E9%95%87%E9%81%93%E5%85%B7%E6%95%99%E5%AD%A6/13.png"></p><p><img src="/2025/01/22/cs2%E7%82%BC%E7%8B%B1%E5%B0%8F%E9%95%87%E9%81%93%E5%85%B7%E6%95%99%E5%AD%A6/14.png"></p><p><img src="/2025/01/22/cs2%E7%82%BC%E7%8B%B1%E5%B0%8F%E9%95%87%E9%81%93%E5%85%B7%E6%95%99%E5%AD%A6/15.png"></p><p><img src="/2025/01/22/cs2%E7%82%BC%E7%8B%B1%E5%B0%8F%E9%95%87%E9%81%93%E5%85%B7%E6%95%99%E5%AD%A6/16.png"></p><p><img src="/2025/01/22/cs2%E7%82%BC%E7%8B%B1%E5%B0%8F%E9%95%87%E9%81%93%E5%85%B7%E6%95%99%E5%AD%A6/17.png"></p><p><img src="/2025/01/22/cs2%E7%82%BC%E7%8B%B1%E5%B0%8F%E9%95%87%E9%81%93%E5%85%B7%E6%95%99%E5%AD%A6/18.png"></p><p>（未完待续）</p>]]></content>
      
      
      <categories>
          
          <category> 游戏攻略 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Csharp学习笔记-2</title>
      <link href="/2025/01/18/Csharp%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2/"/>
      <url>/2025/01/18/Csharp%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="C-基本语法"><a href="#C-基本语法" class="headerlink" title="C# 基本语法"></a>C# 基本语法</h1><p>学过C语言的同学对于C#的语法应该是比较熟悉的了。下面就以菜鸟教程中的一段代码作为示例。</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;<span class="comment">//命名空间指令，告诉编译器在代码中希望使用System命名空间中的类、接口、枚举和其他类型</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">RectangleApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Rectangle</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 成员变量</span></span><br><span class="line">        <span class="built_in">double</span> length;<span class="comment">//一个double类型的变量，名为length，下同</span></span><br><span class="line">        <span class="built_in">double</span> width;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Acceptdetails</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            length = <span class="number">5.5</span>;    </span><br><span class="line">            width = <span class="number">3.5</span>;</span><br><span class="line">        &#125;<span class="comment">//调用该方法，给变量赋值（C#中严格意义上只有方法Method，没有函数）</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">GetArea</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> length * width;</span><br><span class="line">        &#125;<span class="comment">//有返回值的方法</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Display</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Length: &#123;0&#125;&quot;</span>, length);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Width: &#123;0&#125;&quot;</span>, width);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Area: &#123;0&#125;&quot;</span>, GetArea());</span><br><span class="line">        &#125;<span class="comment">//调用该方法，打印数据</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title">ExecuteRectangle</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Rectangle r = <span class="keyword">new</span> Rectangle();<span class="comment">//创建Rectangle类的对象r</span></span><br><span class="line">            r.Acceptdetails();</span><br><span class="line">            r.Display();</span><br><span class="line">            Console.ReadLine();<span class="comment">//等待用户输入，防止程序运行后窗口立即关闭</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="comment">//定义一个ExecuteRectangle类，其中包含了一个Main的方法，该方法在外部调用，可以创建一个矩形</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> CSharp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Csharp学习笔记-1</title>
      <link href="/2025/01/17/Csharp%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/"/>
      <url>/2025/01/17/Csharp%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="C-简介"><a href="#C-简介" class="headerlink" title="C#简介"></a>C#简介</h1><p>C#在2000年6月发布，使用了.NET框架作为运行环境，源于C语言系列，继承了C和C++强大功能的同时去掉了一些它们的复杂特性（例如，没有宏以及不允许多重继承）。C#综合了VB简单的可视化操作和C++的高运行效率，以其强大的操作能力、优雅的语法风格、创新的语言特性和便捷的面向组件编程的支持成为.NET开发的首选语言。是由C和C++衍生出来的一种安全的、稳定的、简单的、优雅的面向对象编程语言。</p><p>C#主要应用于桌面应用程序开发、Web应用程序开发、移动应用程序开发、游戏开发、云和服务开发、数据库开发、科学计算、物联网（IoT）应用程序、人工智能（AI）应用程序等。对于本系列学习笔记来说，主要会列举unity游戏开发中的代码作为例子。</p><p>尽管用了快两年C#了，但除了最开始的时候学习了一次入门版，后面基本上都是靠着GPT大跌狠狠输出，没有再进一步学习C#。虽然个人博客中已经开了无数个学习笔记的第一篇，但还是希望能把这些系列重新启动，并且借此机会希望能认真系统过一遍C#，夯实基础。</p><p>首先，相比经典的C语言，C#是面向对象编程的语言。什么是面向对象编程（OOP）呢，这是一种编程范式，主要思想是通过将数据和操作封装在一个个对象之中，通过对象之间的交互来完成任务。例如，在游戏开发的过程中，一个敌人就可以是一个可以交互的对象，而在C#中就对应着一个类(class)，这个类记录着敌人的各种信息，例如血量，攻击力等等。</p><p>面向对象编程有着四大特性，分别是封装、继承、多态和抽象。下面将简要介绍一下这四大特性。</p><p><strong>封装。</strong>是指将数据和操作（方法）绑定在一起，限制外部对对象内部数据的直接访问。通过访问修饰符(public,private,protected)来控制访问权限。最常见的就是在unity的inspector窗口里，对于public 的数据可以直接修改，而对于private的数据则不能修改，它们被封装在了类的内部，只能在脚本内部更改。</p><p><strong>继承。</strong>在C#中，子类可以继承父类的属性和方法，从而实现代码的复用和扩展，避免功能的重复实现。例如，在管理unity的面板的时候，对于一个UI面板，打开、关闭这些功能都是公用的，因此我们可以先写一个面板基类，里面封装这些公用方法，然后所有面板的管理脚本都可以继承这个基类。不但如此，子类还可以新增或者重写父类的方法，实现更加灵活的代码利用。</p><p><strong>多态。</strong>指的是，同一个方法或者操作，可以根据对象的类型表现出不同的行为，包括方法重载（编译时多态）和方法重写（运行时多态）。</p><p><strong>抽象。</strong>抽象关注事物的共性，通过定义抽象类或者接口来描述对象的公共特性和行为，而不关心其具体实现。换句话说，抽象定义“是什么”，而多态更加关心事物的多样性，指的是同一个接口或者方法在不同对象中有什么不同的实现，强调“如何表现”。不过实际上，多态和抽象经常一同出现，这将会在后面详细展开讲。</p><h1 id="C-环境"><a href="#C-环境" class="headerlink" title="C#环境"></a>C#环境</h1><p>如果是只用C#编写Unity程序脚本的开发者，可以直接在网上搜索Unity环境配置，一步到位就可以配置好环境。</p><p>在Windows平台，推荐的IDE（集成开发环境）是<strong>Visual Studio</strong>(VS)，在 Visual Studio 中，用于编译 C# 代码的编译器是 <strong>Roslyn</strong>，它的正式名称是 <strong>.NET Compiler Platform</strong>。</p><p>而在Mac中（尽管并不推荐使用Mac开发）推荐的IDE仍然是VS，除此之外需要额外安装Mono，这是一个 <strong>运行时环境（Runtime Environment）</strong>，类似于 .NET Framework 或 .NET Core。它负责处理程序运行时所需的核心功能，如内存管理、线程调度、异常处理以及与底层操作系统的交互。Windows中的VS已经默认安装了.NET SDK，包括 .NET Runtime 和工具（如 Roslyn 编译器），而Mac中的VS不支持 Windows 特定的 .NET Framework（因为它依赖 Windows-only 技术），因此需要额外安装mono作为运行时环境。自mono4.0起，mono已经开始调用Roslyn作为C#的编译器了。因此在Win和Mac中都可以采用VS+Roslyn作为开发编译工具，只不过运行时环境会有所不同。</p>]]></content>
      
      
      
        <tags>
            
            <tag> CSharp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>梦中的独游——米塔MiSide</title>
      <link href="/2025/01/17/%E6%A2%A6%E4%B8%AD%E7%9A%84%E7%8B%AC%E6%B8%B8%E2%80%94%E2%80%94%E7%B1%B3%E5%A1%94MiSide/"/>
      <url>/2025/01/17/%E6%A2%A6%E4%B8%AD%E7%9A%84%E7%8B%AC%E6%B8%B8%E2%80%94%E2%80%94%E7%B1%B3%E5%A1%94MiSide/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>玩前评：</p><p>在各大平台铺天盖地的宣传下，想不知道米塔都是一件难事了。作为2024年末最后一款出圈的独立游戏，这款仅由两个俄罗斯大汉开发的游戏无疑有着非常多的亮点，无论是作为一个玩家还是开发者，这款游戏无疑都十分值得一玩。</p><p>米塔的出圈方式，其实和几年前的《主播女孩重度依赖》十分相似。首先最抢眼的便是米塔的人设，典型的3D二次元卡哇伊形象，加上不常见的赛博女鬼人设，反差感给这位人物带来了立体的人设，这一点和超天酱其实是很像的。另外米塔扭曲的性格和精美的渲染风格很难不让人联想到MyGo和BGC这两部以角色性格扭曲和超绝3D建模动画而出圈的作品。</p><p>究其原因，还是对于现代年轻人来说，社会节奏快，每天精神压力都很大，每个人都或多或少会有些精神问题，而性格比较扭曲的人物形象更能引起大家的共鸣，在这个网络造梗时代更能在网络上广泛传播。当然，这只是玩前的简评，实际体验后我会补全“玩中评”和“玩后评”的。</p>]]></content>
      
      
      <categories>
          
          <category> 游戏杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 米塔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>过去，现在与未来</title>
      <link href="/2025/01/14/%E8%BF%87%E5%8E%BB%EF%BC%8C%E7%8E%B0%E5%9C%A8%E4%B8%8E%E6%9C%AA%E6%9D%A5/"/>
      <url>/2025/01/14/%E8%BF%87%E5%8E%BB%EF%BC%8C%E7%8E%B0%E5%9C%A8%E4%B8%8E%E6%9C%AA%E6%9D%A5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>真的是好久好久没好好来更新一下个人博客了，虽然也没啥好写的东西就是。</p><p>这篇博客就用来简要记录一下过去不在的几个月发生的事情，现在的处境以及未来的规划。</p><p>过去一年确实是超负荷的一年，说是人生中最奋斗的一年也丝毫不为过。开年参加了第一场ggj，然后加入了IMDT的项目组，开始了一直到十一月的进组干活之旅，老实说，这到底是一步坏棋还是好棋，恐怕现在也只有上天知道了。</p><p>六月份开始，伴随着我搬进租的小屋子，便开始了备考初试的大半年。</p><p>说来惭愧，说是全力备考，但其实中间依然掺杂着许许多多的事情，八九月份我开始了减肥健身寄希望于通过减肥来提升整体的精神状态，结果是我也成功减下了二十斤。这确实会挤占了不少复习时间，但我认为这件事并不是毫无意义的，相反这次从我出生下来的唯一一次成功的减肥，也确实给我在精神层面上很大的鼓舞。</p><p>然后就是干活，在学校那边我已经算是差不多开摆的状态了，但是还依然偶尔会被叫去干活。更多的是IMDT项目组那边，说实话我确实学到了很多东西，但是项目时长远比我预想的要长，直到十一月我才算彻底结束，或许我应该更早地结束的，我非常清楚，自己的能力十分有限，想要把多件事情都做好，对我来说往往意味着失败。</p><p>更加雪上加霜的是，学校在复习的最后两个月开设的课程，以及关于毕设的一系列事情，在最后一两个月加起来几乎要将我压垮。尽管在考试的两天我自认为已经拿出了全部的状态了，但是对完答案后，我只能说，基础不牢固，我的水平也就是这样了。说实话，上岸的可能性已经微乎其微，过去一年多的努力也基本上都是泡影了。</p><p>刚考完的我其实信心十足，认为上岸不成问题。但事实却狠狠给我了一棒子，对完答案后我真正的陷入了不知所措的状态。我不但不是什么天才，甚至连正常人的智商都不具备，别人复习三个月达到的成绩，我必须得六个月全神贯注才有一点可能达到。分散过多精力对我来说只会带来失败。我如果想要成功，只有在某一件事情上倾注全力才有一丝可能可以办到。而对于初试我显然没有给予应有的努力。虽然说我也确实是无时无刻不在想着抽出更多时间去复习，但事实是我显然没有把应该放弃的东西全部放弃掉。虽然这些东西事实上都是我以前的选择带来的产物，几乎无法去放弃掉。</p><p>野心太大，能力不足，或许才是我会一次次失败的根本原因。</p><p>但事实上，对我来说，那遥不可及的愿望，才是唯一能驱动我不断前进的东西。人或许就是这样，处在无可避免的矛盾之中，不断地挣扎着。我想，不论结局如何，我还是依然会在这矛盾螺旋之中继续挣扎着吧。</p><p>关于现在。</p><p>时光飞逝，距离考试结束居然已经二十来天了，却还是没什么实感。对于我来说，休息是差不多休息够了的，但是越休息越会开始怀恋起过去大半年的那种有着明确奋斗目标的日子，那种每天早上醒来都知道自己应该去做些什么，并且真的去努力做的日子。</p><p>但是我现在是真的没有应该去做的事情吗？并不然。</p><p>在过去一年里面屯了许多游戏，本打算在考完之后开始玩，但是遗憾的是除了那两款fps游戏和gal之外，我依然躺在自己的“游戏舒适区“，没有去静下心去品味其他种类的游戏。本来的上分计划也没有好好地去执行，依然是在随便乱打。我正在向着以前漫无目的的方向滑落。</p><p>另外，虽然过去一年我完成了不少大学预期，但是依然还有不少顽固分子等着被完成，例如霓虹语，画画，加上后面新加的学习建模，巩固编程，还有最重要的游戏项目，这些都是立马可以着手去做的事情，但是我却在这里停滞不前。</p><p>究其根本原因，还是习惯问题。晚睡与晚起，这对最大的问题，让我的每一天都在“什么都没做就过去了”的状态之中。起床已经是中午，吃个饭就差不多下午了，不知道干什么于是就重复着舒适区游戏，结果就是时光飞逝，而想做的事情一件都没有去推进。我想，为了去完成更加重要的事情，我确实需要继续延续着之前的习惯，早睡早起。继续在这后面的半年把大学剩下的几件事情给做完。</p><p>对于一位自诩“游戏开发者”的人来说，沉迷于短信息流是最不应该的，相当于向敌人投降。相比短暂的信息流，我应该沉下心来，选择更加专注地品鉴每一个游戏，磨砺每一项能打造游戏的技能，踏踏实实地走好每一步，直到打磨出最好的作品。除此之外的事情，都不重要。</p><p>关于未来。</p><p>我会重启博客，并且努力更新内容。游戏品鉴、技术文章、学习笔记、开发记录，都会在这里继续连载。请拭目以待吧！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 日有所记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>被诅咒的勇者的后日谈~序幕</title>
      <link href="/2024/09/17/%E8%A2%AB%E8%AF%85%E5%92%92%E7%9A%84%E5%8B%87%E8%80%85%E7%9A%84%E5%90%8E%E6%97%A5%E8%B0%88-%E5%BA%8F%E5%B9%95/"/>
      <url>/2024/09/17/%E8%A2%AB%E8%AF%85%E5%92%92%E7%9A%84%E5%8B%87%E8%80%85%E7%9A%84%E5%90%8E%E6%97%A5%E8%B0%88-%E5%BA%8F%E5%B9%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="序幕"><a href="#序幕" class="headerlink" title="序幕"></a>序幕</h2><p>“勇者大人，「死眠」封印阵在大概三天后就能完成了，届时请您到阵法的中心，斯特维特峡谷的最深处，妾身…将在此处的阵眼完成施法…”</p><p>精灵跪在地上，低着头向眼前的「勇者」汇报着。她时不时会偷偷抬起头，瞄向悬崖上正看着远方的勇者。勇者变了，他穿着奢华昂贵的绸衣，挂在他那千锤百炼的身体上，处处都显得违和。</p><p>“知道了，你们辛…你们如果不按时完成阵法的话，谁也保证不了你们的生命安全。”</p><p>勇者依然背对着精灵，就像刚牙牙学语的婴儿一样，强吐出这几句装腔作势的话。精灵听了差点要笑出声来——幸好是低着头，要是面对面的话，自己一定会再次被勇者逗笑的——就像很多很多年以前，精灵第一次见到勇者那样。</p><hr><p>那还是在大魔帝的统治正如日中天，勇者一行人刚刚踏上讨伐大魔帝的旅途的时候。精灵的村庄被魔帝的军队烧杀抢掠，死伤无数，是勇者击败了敌军，并且拯救了精灵。</p><p>那时候的勇者还是一个不知名的小人物，实力也远没有今天这样强大。但是他坚强的内心和有些憨厚老实的性格却深深刻在了当时还十分年幼的精灵的心中。不善言辞的他想要讲个笑话逗精灵开心一下，结果弄巧成拙，反倒是他那副憨厚的样子逗笑了精灵。</p><p>“什么嘛，明明还是当年那个老好人…”</p><p>勇者离开后，他们踏上了那条现在已经为整个王国人尽皆知的讨伐大魔帝之路。十几年的时间里，勇者和他的伙伴们不知道杀死了多少魔王军，不知道拯救了多少像精灵一样弱小的人们。</p><p>在这十几年的每一天里，精灵都在为他们祈祷，从不曾间断过。当大魔帝被击杀的消息传来时，精灵欣喜若狂，那是她生命中除了和勇者相遇那天最高兴的日子。之后精灵到处打探勇者的消息，渴望和他见上一面，向他讲述自己这些年来辛苦修炼的魔法术，讲述她对勇者的救命之恩的无比感谢，讲述她希望留在勇者身边为重新建设王国出一份力，讲述她对勇者的…</p><p>但精灵没有想到的是，她终于见到勇者了，而且是勇者主动找上门的。</p><p>她本该为此感到非常高兴的，但是勇者的脸上，却多了许多沧桑，那是面对大魔帝都不曾展示出的绝望神情。</p><p>“你是「死眠」封印的继承人，精灵术士「斯莉普·诺拉」吧。”</p><p>诺拉本来也觉得，毕竟过了十几年了，勇者不记得自己了也正常。但当诺拉看到勇者眼睛的瞬间，她就意识到，勇者记得自己，她随即想要喊出自己憋了十几年的话，</p><p>“勇——”</p><p>“从今天起，你来负责在斯特维特峡谷设置「死眠」封印，务必在三个月之内完成，不能完成的话就会被处…处以极刑。”</p><p>勇者立马岔开了诺拉想说的话，并且头也不回的立刻离开了。只剩下几个交代细节的士兵和诺拉对接，但诺拉根本没有心情去听他们说了什么。</p><p>“为什么…勇者他到底…经历了什么…”</p><hr><p>思绪回到了现在，诺拉再次想起了三个月前和勇者重逢的那一刻。这三个月里，尽管诺拉一共也没和勇者说上几句话，但她已经把所有的原因都调查了出来——那位不善于隐藏的老好人，装着冷血无情的老好人，的无比悲哀的“秘密”。</p><p>是的，一切问题的根源，还是在大魔帝。</p><p>在与大魔帝的最终一战时，勇者的伙伴们已经大都疲惫不堪，而此时的勇者几乎成了所剩的唯一战力。但是，此时的勇者已经成长成了拥有远超他人的实力，能够独自面对大魔帝的存在。最终，在掌握了大魔帝的致命弱点后，勇者「斩杀」了那位几乎不可能被杀死的千年魔物。</p><p>故事到这里本该完美结束的，在摆脱了大魔帝的统治之后，人们应该重建家园，安居乐业，过上无比幸福的生活的。</p><p>但对最大的功臣，勇者来说，他却迎来了完全配不上的「结局」——</p><p>他中了大魔帝「死后的诅咒」。</p><p>虽然勇者本人并没有向他提过诅咒的具体内容，但是据当时在场的人说，大魔帝在死前几乎是嘲讽般地宣布了他的死亡诅咒。诅咒的具体内容是：</p><p><strong>1.与被诅咒者关系亲密之人，皆会在三年之内死去。无论是早已存在过的还是新的关系。</strong></p><p><strong>2.被诅咒者若死去，会被诅咒之力控制身体。</strong></p><p>大魔帝没有多做任何解释就死去了，而在场的人，包括勇者在内，都被惊到了，甚至一时之内都忘记了庆祝胜利。</p><p>“那个该死的大魔帝一定是在虚张声势罢了，他一开始还说我们连他的一根手指都打不过呢，最后还不是被打的屁滚尿流，哈哈！”勇者的同伴压根不相信大魔帝说的鬼话，再说，哪怕就算是真的，他们或多或少都被勇者拯救过性命，就算真的要因此而死去，也是心甘情愿。</p><p>但问题是勇者。</p><p>这个人实在是太老好人了，简直到了无可救药的地步。</p><p>自从回到王都后，勇者就开始变得慎言慎行，也不去参加一些庆祝活动，对外只是宣称“勇者受了很大的伤，需要休养”。</p><p>整个王国的百姓们每一天都在期待着能看到这位传奇英雄，勇者的故事被广泛传颂，包括他一路上除恶扬善的各种事迹，以及最后打败大魔帝的英勇身姿——</p><p>当然，没有包括最后的诅咒。</p><p>刚回来时，勇者也是对这诅咒半信半疑，尽管他曾经受到过很多诅咒，但都没有这次的感觉——这次诅咒可以说是「根本没有感觉的诅咒」，在询问了许多专业的术士、诅咒士后，他们都表示感受不到这种诅咒的存在，也从来都没有听过这种诅咒，不排除大魔帝只是在虚张声势的可能。</p><p>但对于勇者来说，仅仅是有这种可能，他就必须减少，不，是断绝自己和他人建立亲密关系的可能了。于是，他开始不断减少自己和他人接触的机会，把自己封闭起来。</p><p>但勇者的伙伴们不同意。</p><p>“喂，你这家伙！明明好不容易打败了那个该死的大魔帝，结果因为人家的几句鬼话就把自己搞成这个样子，算什么勇者！”勇者的伙伴，莉莉娅，故意放大了声调，跑到勇者隐居的小屋子里面，一把把勇者拽了出去。</p><p>“你这个大笨蛋，当时明明都说好了，胜利了就陪我去看远东海，结果自己一个人跑到这深山老林里面躲起来，知不知道大家都找你找了好久啊？”莉莉娅依然是一副咄咄逼人的样子，勇者从来不善于应付她，即便是一起旅行了那么多年，还是会被莉莉娅牵着鼻子走。</p><p>“我…”</p><p>“好啦，别解释啦，我们怎么能放下大功臣，自己留在王都享受荣华富贵呢？好啦，你也别在这里一个人呆着啦，赶快出来兑现你的承诺，陪我去看远东海吧！”</p><p>“但是如果诅咒…”</p><p>“什么？诅咒？你看焰之勇者莉莉娅我像是会被诅咒那种东西干掉的人吗？再说人走诅咒走，这是基本的常识吧。我看你是故意不想见我才编的这些理由吧？”</p><p>“哎，莉莉娅你真是…”</p><hr><p>诺拉是从另一位勇者的伙伴口中听说的这些事情，勇者与莉莉娅后来一起踏上了前往远东海的旅程。诺拉不知道勇者在这一路上是否变回了他真实的自己，但她所知道的只有冰冷的结局——</p><p>莉莉娅死了。</p><p>这是诅咒第一个生效的对象。</p><p>勇者抱着莉莉娅的尸体，在一片森林里跪了三天三夜，然后被当地的村民发现了，并联系上了王国这边。</p><p>据说，莉莉娅死的样子似乎很轻松，身上也没有任何异常，就像睡着了一样，那微微翘起的唇角，就像是在做一场甜美的梦。</p><p>此时，距离勇者击败大魔帝，仅仅过去了一年。</p><p>在那之后，勇者的伙伴们也一个个相继去世，他们死亡的样子都别无二致，像是永远睡着了一样。一时间，王国高层人人自危，大家都对勇者敬而远之，生怕被勇者身上的诅咒给夺去了生命——尽管这个勇者是拯救了他们所有人的大英雄。</p><p>勇者自那之后变了很多，但他没有再一次搬进深山老林，而是戴上了与他显然不符的「冷酷」面具，开始了四处奔波，只是为了拯救剩下的那些同伴。同时，为了不让更多人受到伤害，勇者必须装作一副难以建立「亲密关系」的模样，对所有人恶言相向。</p><p>调查到这里，诺拉也明白了勇者此行的真正目的——为了用号称能「隔绝一切」的「死眠」封印阵法，将自己永远的封印起来。</p><p>「死眠」封印阵是「斯莉普」一族祖传的封印阵法之一，据说能将所有魔法，诅咒等东西隔绝，拥有切断一切「联系」的力量。但是由于需要封印对象主动配合封印，在整个历史上似乎也只有一次成功封印的记载。实际效果早已无法考察。但是，诺拉作为族里天赋最高的人，早早就掌握了这个阵法的启动方式，启动封印是没有任何问题的。</p><p>对于勇者来说，这应该是他在走投无路之下，唯一的选择了吧。</p><p>勇者是个老好人，老好到无可救药的老好人。</p><p>他把任何人的性命都看的比自己还重，对于他来说，只要能救到别人，自己怎么样都行。</p><p>勇者一定是想过自杀的，但是这次却连自杀都不能解决任何问题。虽然大魔帝的诅咒的第二条到现在都不曾应验过，但既然第一条已经反复证实，就没理由认为第二条不会应验。</p><p>对勇者来说，仅仅是这种可能性，就让他不可能去自杀了——虽然勇者有时候会对自己实力的强大程度没太多概念，但是王国的高层已经反复告诫过勇者，如果勇者真的被控制身体，整个王国都不会有能与之抗衡的人物，他可能会成为比大魔帝还要恐怖的存在。</p><p>到那时，不仅仅是勇者的伙伴，甚至整个世界都可能被勇者毁灭。</p><hr><p>“该死，该死，该死的大魔帝！”</p><p>诺拉在心中无数次咒骂着大魔帝。她又抬起头来，看向了勇者。此时的勇者，站在山顶上，看着远处落下的太阳，若有所思一般，伸出了手，仿佛想要把余晖攥在手上一般。</p><p>诺拉又想起了初次见到勇者的那天，勇者在黄昏下对他说的话。</p><p>“你看，虽然太阳就要落下了，但我可是能把日光抓在手上的人哦！”</p><p>说着，勇者伸出手，去对着空气抓了一把。</p><p>诺拉忍不住笑出了声，怎么会有人实力这么强又这么呆的啊。</p><p>但随着勇者缓缓张开手，诺拉却愣住了，一团金黄色的光芒，在他手中，缓缓地闪烁着。</p><p>这个男人啊，是真的能抓住「希望」的人。从那时起，诺拉就发现，自己喜欢上了这位勇者。</p><p>而那天在山顶上的一眼，也是她与勇者所见的最后一面。</p><p>三天后，勇者前往了阵法的中央，而诺拉在与之相隔很远的地方，启动了「死眠」阵法。</p><p>勇者的沉睡地是严格保密的，但作为阵法的负责人，诺拉还是有机会去看上勇者几眼的。他躺在水晶棺中，就像真的睡着了一般。也不知道他在做什么样的梦呢，梦里面会不会有自己呢，他在梦里面开心吗？</p><p>诺拉一有机会就打着检查阵法的理由进去看勇者，尽管她早就知道，尽管她的寿命很长，也不会再有机会看到勇者醒来的模样了。但她依然觉得，只要在自己剩下的时间里，每一天都能看到勇者，自己就已经很满足了。</p><p>而那一天到来时，诺拉十分平静，她换了一身自己最喜欢的衣服，也是与勇者重逢的那天穿上的衣服，来到了勇者的封印地前，她要给这个封印加上最后一道封印，并且让这个地方不会被其他人所发现、破坏。</p><p>做完了这一切工作之后，诺拉回到了自己的家乡，这个被魔王军破坏的村庄早已得到了重建，族人们也有了崭新的生活，村里的每一个人都对勇者十分感激。</p><p>在太阳西陲的余晖照进窗户中时，诺拉平静的躺在了床上，她侧着头看着窗外，伸出手仿佛也想抓住日光一般。</p><p>“什么嘛，看来我和那家伙的关系不也是挺亲密的嘛！”</p><p>勇者战胜大魔帝后一年零六个月，王国时代最后一位因为大魔帝诅咒而死去的人，精灵术士诺拉，永远的闭上了双眼。</p><p>尔后，岁月漫长流逝。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《饿殍：明末千里行》，一部国产顶尖水准的文字冒险</title>
      <link href="/2024/05/07/%E3%80%8A%E9%A5%BF%E6%AE%8D%EF%BC%9A%E6%98%8E%E6%9C%AB%E5%8D%83%E9%87%8C%E8%A1%8C%E3%80%8B%EF%BC%8C%E4%B8%80%E9%83%A8%E5%9B%BD%E4%BA%A7%E9%A1%B6%E5%B0%96%E6%B0%B4%E5%87%86%E7%9A%84%E6%96%87%E5%AD%97%E5%86%92%E9%99%A9/"/>
      <url>/2024/05/07/%E3%80%8A%E9%A5%BF%E6%AE%8D%EF%BC%9A%E6%98%8E%E6%9C%AB%E5%8D%83%E9%87%8C%E8%A1%8C%E3%80%8B%EF%BC%8C%E4%B8%80%E9%83%A8%E5%9B%BD%E4%BA%A7%E9%A1%B6%E5%B0%96%E6%B0%B4%E5%87%86%E7%9A%84%E6%96%87%E5%AD%97%E5%86%92%E9%99%A9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>早在好几个月前，零创游戏发布视频介绍这款游戏的时候（2023年11月），我就关注了这款比较别致的游戏。当时给我留下最深的印象就是”在明末送外卖“这一点，以及女主的画风真的很不错。在最近几天，这款游戏正式推出后我也是立刻就入手推完了剧情。</p><p>先说结论：这是近几年难得的国产文字冒险游戏，由于题材原因，我认为这不能算是一部传统意义上的galgame。但是在我玩过的文字冒险游戏当中，这已经算是非常别树一帜的题材了。</p><p>故事发生在明末时期，天启年间，京都天降异象，发生了一场大爆炸， 半径大约750 米，面积达到2.23平方公里，共造成约2万余人死伤 。而男主在这场爆炸中失去了自己的父亲，从此家破人亡。雪上加霜的是，当时政府拨下来的钱，还被贪官污吏占去，男主最后什么都没有得到，因此也做起了杀人放火的勾当，成为了一名强盗。</p><p>由于一次“偶然”，男主和搭档“舌头”一起接了一个送四个女娃子去洛阳给人收养的活，报酬出奇的高。而女主也作为一个“不会说话的女娃子”登场了。但是第一晚，这个女娃子就乘着男主不注意想暗杀男主（当然我也是第一次选就直接寄了，不过根据后面的情节来看这可能还是更好一点的结局）。被男主挡下后，突然变了一副模样，完全变成了一个“单纯害怕的小孩子”，说实话，在这里我心里是非常膈应的，毕竟是想取我性命的人，我还把她当成小孩子一样？必然是不可能的。但是后面作者也用了相当长的篇幅来“迷惑”我，通过编造要去洛阳城杀豚妖的故事，成功将我的关注重点转移了。这也是作者对于玩家最大的一次“欺骗”，这第一次刺杀也是这个游戏里面最大的一次铺垫。</p><p><img src="/2024/05/07/%E3%80%8A%E9%A5%BF%E6%AE%8D%EF%BC%9A%E6%98%8E%E6%9C%AB%E5%8D%83%E9%87%8C%E8%A1%8C%E3%80%8B%EF%BC%8C%E4%B8%80%E9%83%A8%E5%9B%BD%E4%BA%A7%E9%A1%B6%E5%B0%96%E6%B0%B4%E5%87%86%E7%9A%84%E6%96%87%E5%AD%97%E5%86%92%E9%99%A9/10.png" alt="1"></p><p>之后的剧情，就是带着女娃子们一起四处奔波了，这一段剧情我认为是沉浸感很足的，中间几次小高潮，例如杀“舌头”，做的都非常有代入感，已经感觉到手上沾满鲜血的自己了。</p><p>当然，我认为这个游戏最大的亮点，最为精彩的部分，必然是满穗的回忆部分。使用牛皮纸背景加上线条画风，我愿称之为神之美术！叙事的节奏也把握的非常的好，从一开始的一家人幸福的生活在一起，到后面逐渐缺少粮食，最后出现一家人相食的惨状，给人留下的印象是无比深刻的，露骨地揭露出了人在极端饥饿下兽性的爆发，当然也是用了一些艺术加工的表现方式，但是由于现在的大家本来都没有经历过饥荒的惨状，这样的表现方式还是很能在玩家心造成很大的冲击的。</p><p><img src="/2024/05/07/%E3%80%8A%E9%A5%BF%E6%AE%8D%EF%BC%9A%E6%98%8E%E6%9C%AB%E5%8D%83%E9%87%8C%E8%A1%8C%E3%80%8B%EF%BC%8C%E4%B8%80%E9%83%A8%E5%9B%BD%E4%BA%A7%E9%A1%B6%E5%B0%96%E6%B0%B4%E5%87%86%E7%9A%84%E6%96%87%E5%AD%97%E5%86%92%E9%99%A9/2.png" alt="1"></p><p>（这个回忆里面的满穗真的好像小费伦啊）</p><p>铺垫是这个游戏另一个亮点之一，在很多地方，甚至还没直接告诉你，你就可以猜个差不多大概了，例如回忆中满穗吃了弟弟和母亲（神仙肉），发现满穗的父亲其实是自己杀的等等。当然很多地方的铺垫也是要等到最后揭晓的时候才给人一种“恍然大悟”的感觉。</p><p>游戏中设置的悬念也同样推动着玩家不断去探索真相，其中一个就是满穗的回忆，就算忽略掉主线，我认为满穗的回忆也足够推动着玩家往前探索了，这个女娃子身上有着太多谜底：她是如何在饥荒中走出来的，她的姐姐在哪，她出去的几年到底做过了什么。我在玩的时候也遇到了很多疑惑、觉得不合理的地方，例如在满穗提出煮了舌头的时候，我都吓了一跳，一个女娃子怎么能这么面不改色地说出、做出这种事情，之后还表现得像一个小孩子一样？当然，在玩完之后，还是会恍然大悟，原来这个女孩子早已目睹过更加残酷的地狱。</p><p><img src="/2024/05/07/%E3%80%8A%E9%A5%BF%E6%AE%8D%EF%BC%9A%E6%98%8E%E6%9C%AB%E5%8D%83%E9%87%8C%E8%A1%8C%E3%80%8B%EF%BC%8C%E4%B8%80%E9%83%A8%E5%9B%BD%E4%BA%A7%E9%A1%B6%E5%B0%96%E6%B0%B4%E5%87%86%E7%9A%84%E6%96%87%E5%AD%97%E5%86%92%E9%99%A9/6.png" alt="1"></p><p>当然，这个游戏也有不少不足之处，比较明显的就是一些结局有种非常牵强的感觉。作品的“true end”，两人在最后都活了下来，单纯的cp党看来，这确实皆大欢喜，但是万不可忽视了一件事，就算天道如此，满穗的父亲，以及一家人，还是被男主直接害死的，满穗就算不替父报仇，和良“一起快乐地生活下去”这种事情，无论如何还是令人反胃的，在我看来，这个结局明显有着过度理想化的倾向，已经沾上了无数的鲜血，到最后还happy ending这种事情，有种“既要又要”的感觉，甚至感觉是先画好了这幅画然后想为她强行加一个结局一样。</p><p><img src="/2024/05/07/%E3%80%8A%E9%A5%BF%E6%AE%8D%EF%BC%9A%E6%98%8E%E6%9C%AB%E5%8D%83%E9%87%8C%E8%A1%8C%E3%80%8B%EF%BC%8C%E4%B8%80%E9%83%A8%E5%9B%BD%E4%BA%A7%E9%A1%B6%E5%B0%96%E6%B0%B4%E5%87%86%E7%9A%84%E6%96%87%E5%AD%97%E5%86%92%E9%99%A9/9.png" alt="1"></p><p>另外一个已经被众多网友吐槽过的点就是配音问题了，说实话hanser的配音确实是有不少问题的，代入环境来看问题就更多了。但是瑕不掩瑜，这依然是我近几年玩过的非常出色的文字冒险游戏之一。而且成功地引发了我对于饥荒的思考，我们这一代人从来没经历过吃不饱饭的情况，对于饥荒只有在书上看到的一串串数字的理解。但是不能忽视的是，饥荒在整个人类历史上就像家常便饭一样，当历史书中几个“出现了人吃人”的大字，以游戏的方式展示在我们面前时，给人的震撼还是无与伦比的，我想这也是游戏的意义所在吧。</p><p>希望零创游戏能做出更加精彩的作品，也希望中国游戏产业蒸蒸日上！</p><p><img src="/2024/05/07/%E3%80%8A%E9%A5%BF%E6%AE%8D%EF%BC%9A%E6%98%8E%E6%9C%AB%E5%8D%83%E9%87%8C%E8%A1%8C%E3%80%8B%EF%BC%8C%E4%B8%80%E9%83%A8%E5%9B%BD%E4%BA%A7%E9%A1%B6%E5%B0%96%E6%B0%B4%E5%87%86%E7%9A%84%E6%96%87%E5%AD%97%E5%86%92%E9%99%A9/8.png" alt="1"></p>]]></content>
      
      
      <categories>
          
          <category> 游戏杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《饿殍：明末千里行》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UnityVR手部动画</title>
      <link href="/2024/04/28/UnityVR%E6%89%8B%E9%83%A8%E5%8A%A8%E7%94%BB/"/>
      <url>/2024/04/28/UnityVR%E6%89%8B%E9%83%A8%E5%8A%A8%E7%94%BB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在unity的VR游戏中，我们通过第一人称来进行游戏，为了提高沉浸感，我们希望在第一人称视角里面能看到两只手而不是两个球，或者控制器模型。</p><p>目前有一些设备已经支持手势识别，也就是说我们可以不用拿着手柄，只要用自己的双手就能在虚拟世界中交互。但是更多的旧款的VR设备还不支持这些，我们只能通过手柄控制器来模拟人手，下面我们来讲一下详细的设置过程。</p>]]></content>
      
      
      
        <tags>
            
            <tag> unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity中HDRP下的水系统</title>
      <link href="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/"/>
      <url>/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>unity最新版本中提供了高清渲染管线中的全新水系统，可以在unity场景中创建一片逼真的水体。下面我们来介绍一下详细的创建步骤。</p><h2 id="安装最新的Unity"><a href="#安装最新的Unity" class="headerlink" title="安装最新的Unity"></a>安装最新的Unity</h2><p>HDRP水系统的部分功能在2022LTS版本中也可以使用，但是为了体验到全部功能，建议还是安装最新的2023.2版本。我这里使用的是Unity最新发布的2023.2.19f1c1版本。</p><h2 id="创建项目以及渲染设置"><a href="#创建项目以及渲染设置" class="headerlink" title="创建项目以及渲染设置"></a>创建项目以及渲染设置</h2><p><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/1.png"></p><p>我们选择High Definition 3D模板，这个模板下使用的是HDRP管线。</p><p><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/2.png"></p><p><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/3.png"></p><p>找到project settings，在Quality中找到HDRP，然后我们进入Rendering,勾选上Water的Enable，为了演示效果，我们把所有的选项都勾选上。（在此之前会弹窗HDRP Wizard,可以点击Embed Configuration Editable Package）。</p><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/4.png" style="zoom:67%;"><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/5.png" style="zoom:67%;"><p>找到场景中的Sky and Fog Volume。 在Unity中，使用HDRP时，“Sky and Fog Volume”是用于控制天空、雾和大气效果的组件。这个组件允许你详细地配置和自定义游戏或可视化项目中的天空盒和大气效果，使之更加逼真和符合场景的需求。 然后我们添加WaterRendering组件（点击add override)，打开state并且激活。</p><h2 id="添加水"><a href="#添加水" class="headerlink" title="添加水"></a>添加水</h2><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/6.png" style="zoom:67%;"><p>在GameObject里面找到Water,surface里面有三种水，它们的区别如下：</p><table><thead><tr><th>种类</th><th>Ocean Sea or Lake</th><th>Pool</th><th>River</th></tr></thead><tbody><tr><td>图片</td><td><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/7.png" style="zoom:67%;"></td><td><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/8.png" style="zoom:67%;"></td><td><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/9.png" style="zoom:67%;"></td></tr></tbody></table><p>它们的区别在于波浪的复杂性和预期用途。当创建了一种后，后面还可以在组件WaterSurface中进行更改。</p><h2 id="WaterSurface讲解"><a href="#WaterSurface讲解" class="headerlink" title="WaterSurface讲解"></a>WaterSurface讲解</h2><h3 id="Ocean"><a href="#Ocean" class="headerlink" title="Ocean"></a>Ocean</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">— General: 定义水体的整体类型（如海洋/海洋/湖、河流、水池）和用于渲染水面的几何形状（如四面、定制、四周、无限）</span><br><span class="line">— Simulation: 控制波纹和涟漪如何影响水面的形成</span><br><span class="line">— Deformation: 影响局部变形如何升高或降低水的一部分，用于瀑布或其他高度变化</span><br><span class="line">— Appearance: 确定水的颜色、平滑度、折射和光散射；焦散和特殊的水下设置增强基于物理的阴影</span><br><span class="line">— Foam: 控制波顶、水中物体周围或沿海岸线的泡沫外观和行为</span><br><span class="line">— Miscellaneous: 控制渲染层掩模和调试模式</span><br></pre></td></tr></table></figure><h4 id="Simulation"><a href="#Simulation" class="headerlink" title="Simulation"></a>Simulation</h4><p>Ocean中的simulation用于控制水平面的波纹，它分为Swell( 涌浪，用于模拟大尺度的水体动态，如海洋或大湖波动，常用于增加场景的自然感和动态感 )和Ripples（涟漪， 常用于模拟细微的水面扰动，增加环境的细节和活力，例如模拟雨后水面的波纹或鱼儿游动引起的水动 ）。</p><p>可以把FirstBand理解为粗调，SecondBand理解为微调，Ripples为细节。</p><table><thead><tr><th>介绍</th><th>设置</th><th>效果</th></tr></thead><tbody><tr><td>全部开启</td><td><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/11.png" style="zoom:67%;"></td><td><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/12.png" style="zoom:67%;"></td></tr><tr><td>关闭涟漪</td><td><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/13.png" style="zoom:67%;"></td><td><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/14.png" style="zoom:67%;"></td></tr><tr><td>全部关闭</td><td><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/15.png" style="zoom:67%;"></td><td><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/16.png" style="zoom:67%;"></td></tr></tbody></table><h3 id="River"><a href="#River" class="headerlink" title="River"></a>River</h3><p>river使用agitation(搅动)控制较低频段，这相当于Ocean的SecondBand。Ripples和Ocean的类似。</p><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/17.png" style="zoom:67%;"><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/18.png"><h3 id="Pools"><a href="#Pools" class="headerlink" title="Pools"></a>Pools</h3><p>pools只使用Ripples,它最大的特点是可以自定义形状，这是通过设置Geometry Type为custom,然后选择自己准备好的mesh renderer，就可以让水体以自己希望的方式呈现。</p><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/19.png"><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/20.png"><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/8.png"><h2 id="导入官方示例"><a href="#导入官方示例" class="headerlink" title="导入官方示例"></a>导入官方示例</h2><p>unity官方提供了四种水的实例场景，这在HDRP的资源包中可以找到。</p><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/21.png"><table><thead><tr><th><strong>Swimming Pool</strong></th><th>这个场景显示了在不同高度的水池的多个水面。它还演示了使用自定义网格来实现除基本矩形之外的唯一池形状。</th><th><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/22.png"></th></tr></thead><tbody><tr><td><strong>Island</strong></td><td><strong>这个场景的特点是一个被海浪包围的小陆地。水面具可以清除岛上周围的膨胀，而变形者会产生海浪。贴花和泡沫发生器为破波增加了泡沫。使用脚本API，物理模拟的海鸥漂浮在水面上。</strong></td><td><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/23.png"></td></tr><tr><td><strong>Glacier</strong></td><td><strong>这个场景包括河流，瀑布变形器，用于制造水流的电流模拟，移动的冰山后面的泡沫，为喷雾效果的贴花，和投影的焦散。</strong></td><td><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/24.png"></td></tr><tr><td><strong>Water Line</strong></td><td><strong>这个场景使用自定义通道修改水面的水平和水下渲染，产生更大的模糊水线，并在相机镜头上模拟水。</strong></td><td><img src="/2024/04/28/Unity%E4%B8%ADHDRP%E4%B8%8B%E7%9A%84%E6%B0%B4%E7%B3%BB%E7%BB%9F/25.png"></td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>掌阅iReader4 pro如何安装第三方软件（无需刷机）</title>
      <link href="/2024/04/16/%E6%8E%8C%E9%98%85ireader4-pro%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6%EF%BC%88%E6%97%A0%E9%9C%80%E5%88%B7%E6%9C%BA%EF%BC%89/"/>
      <url>/2024/04/16/%E6%8E%8C%E9%98%85ireader4-pro%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6%EF%BC%88%E6%97%A0%E9%9C%80%E5%88%B7%E6%9C%BA%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本方法适用掌阅iReader4pro，并且理论上应该可以适配所有掌阅的所有有WPS并且内存足够的机型。</p><p>首先，在网络上找到你想要安装的应用的apk文件，这里推荐几个个人觉得非常好用的软件，分别是墨墨背单词，哔哩哔哩漫画（eink版），einkbro(墨水屏浏览器)。</p><p>然后，将这些文件移动到iReader文件夹里（我是移动到i-transfer文件夹,也就是微信导入的文件夹，其实在本机其它文件夹也都行，只要WPS能访问到就行）。</p><img src="/2024/04/16/%E6%8E%8C%E9%98%85ireader4-pro%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6%EF%BC%88%E6%97%A0%E9%9C%80%E5%88%B7%E6%9C%BA%EF%BC%89/1.png" style="zoom: 80%;"><p>然后，就可以拔掉数据线了，后面直接在阅读器上操作就行。</p><img src="/2024/04/16/%E6%8E%8C%E9%98%85ireader4-pro%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6%EF%BC%88%E6%97%A0%E9%9C%80%E5%88%B7%E6%9C%BA%EF%BC%89/2.png" style="zoom: 33%;"><p>打开iReader里面的WPS（如果没有安装可以先安装）。点击右上角的三条杠，然后点击打开。</p><img src="/2024/04/16/%E6%8E%8C%E9%98%85ireader4-pro%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6%EF%BC%88%E6%97%A0%E9%9C%80%E5%88%B7%E6%9C%BA%EF%BC%89/3.png" style="zoom: 33%;"><p>进入你放置文件的文件夹，然后点击apk文件。</p><img src="/2024/04/16/%E6%8E%8C%E9%98%85ireader4-pro%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6%EF%BC%88%E6%97%A0%E9%9C%80%E5%88%B7%E6%9C%BA%EF%BC%89/4.png" style="zoom: 33%;"><p>点击用其它应用程序打开，第一次会向你寻求WPS的存储权限，允许之后再回来点击就行。之后就可以直接安装apk应用了。</p><img src="/2024/04/16/%E6%8E%8C%E9%98%85ireader4-pro%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6%EF%BC%88%E6%97%A0%E9%9C%80%E5%88%B7%E6%9C%BA%EF%BC%89/5.png" style="zoom: 33%;"><img src="/2024/04/16/%E6%8E%8C%E9%98%85ireader4-pro%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%AF%E4%BB%B6%EF%BC%88%E6%97%A0%E9%9C%80%E5%88%B7%E6%9C%BA%EF%BC%89/6.png" style="zoom: 33%;"><p> apk文件百度网盘链接：<a href="https://pan.baidu.com/s/1msCRs1SG70cfyfHIdzIhRg?pwd=6twf">https://pan.baidu.com/s/1msCRs1SG70cfyfHIdzIhRg?pwd=6twf</a><br>提取码：6twf </p>]]></content>
      
      
      
        <tags>
            
            <tag> 技术分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>昙，花</title>
      <link href="/2024/03/09/%E6%98%99%EF%BC%8C%E8%8A%B1/"/>
      <url>/2024/03/09/%E6%98%99%EF%BC%8C%E8%8A%B1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>什么是爱呢？</p><p>是从看到他的第一刻开始，就废寝忘食地思念着他，还是从互相根本不在意开始，经过一天天的相处，最后回过神来，发现双方已经变成了无法分割的状态？</p><p>我不知道。对于我来说，从看到他的第一眼开始，这个有趣的男人就让我非常在意。他小心翼翼和女生说话的样子，就像在照顾一朵脆弱的花朵一样，生怕动作一大，就会把花朵打落。这样拘谨的他，会用明信片传达自己的心意给喜欢的女孩，一笔一划都工整地写着，在上面倾诉自己的心意。无论什么样的事情，什么样的心意，写在明信片上，就像是面对面交谈一样，让人心跳加速。</p><p>但是，他喜欢的女生，不是我。</p><p>那是一个如同昙花般绚烂而短暂的女生，他们在校园中相识，但是女孩却因为身体原因经常住院。为了救那个女孩，男孩毅然走上了学习医学之路。在女孩住院的时候，男孩就一直写着明信片和女孩交流。但女孩身体越来越差，没等到男孩有能力救她的那天，就离开了这个世界。</p><p>我并没有告诉男孩这个消息，而是继续假装女孩，和男孩用明信片交流着。</p><p>为什么是继续？其实在女孩身体不佳的时候，有很多明信片其实都是我写给男孩的。甚至其实，女孩第一张明信片，那张让他们开始交流的明信片，都是出于我的恶作剧而开始写的。</p><p>为什么要继续？我告诉自己，这是为了保护男孩，如果他知道女孩去世的消息，他一定会无比伤心的。</p><p>但是，但是，或许，只是因为，我不愿意揭开这个谎言。我假装是在为男孩制作了一个虚假的美梦，但是，只是因为我自己不愿在这个美梦中醒来，我已经沉迷在这个虚假的身份中。在这个身份中，我是男孩喜欢的女孩。</p><p>但是，男孩最终还是发现了真相。或许他早已察觉，但是他也和我一样，宁愿在虚假的谎言中继续生活着。</p><p>。。。。。。</p><p>但是，谎言也好，真相也好，又有什么关系呢？</p><p>我们所处的社会，本身就是由一个个故事组成的，关于国家的故事，关于家庭的故事，以及关于爱情的故事。故事不存在真假，或者说故事的真假本就没有必要。只要相信的人足够多，那么这个故事就毋庸置疑是正确的故事。</p><p>而在今天，故事更近一步，变成了商品，变成了可以明码标价的东西。随着记忆消除技术的诞生，只要相信着一批故事的人有足够多的钱，他们就能在别人手中买下那些与他们不和的故事，然后销毁掉。到最后，只有那几个故事存在下来。</p><p>这样做好吗？事实上，我们的社会更加和谐稳定了，因为都相信着一样的故事，人与人之间的矛盾也变得少了起来。千百年间，因为所信仰故事不同而出现的矛盾冲突，逐渐销声匿迹。</p><p>对于选择忘掉故事换取金钱的人，他们做错了吗？我并不那么认为。他们只是偶然获得了不“符合”所谓“主流价值观”的思想，这是环境的错误，不是他们的错误。而选择卖出这些认知，也大部分都是为生活所迫，另一方面，他们也饱受“与他人不同”的折磨。互联网把所有思想都放在了一起，而那些有扩张性的思想随着网络四处传播。实际上，故事虽然不分对错，但是许多心灵脆弱的人，看到自己的想法被贬低的一文不值，内心却是无比痛苦的。他们无时无刻不在想，“我真的错了吗”？</p><p>他们没有错。许多问题，根本不是对错能说清的。</p><p>但是，依然有人，到死都不愿意放弃自己所相信的故事，根据自己一步一步走来的路，对事情进行着判断，不论他人如何抨击也好，还是出钱购买也好，都会坚持着自己的观点。</p><p>这种人，也越来越少了。</p><p>年轻时，也经常有人劝我，说一些这样做不值得之类的话，我要么搪塞过去，要么置若罔闻。随着年龄渐长，也很少有人再提起这回事，只有几个学生偶尔会打趣向我提问。</p><p>”老师，您真的喜欢教授吗？但是教授不是因为用了那个才……“</p><p>我苦笑。闭上眼，脑海中又是那个在雨中护着昙花的男孩。他当时想要忘了那一切，并且也确实做到了。</p><p>忘了一切的他，和我在一起了，再也没有提起过那个女孩。</p><p>他对我的爱，是虚假的吗？说老实话，我到今天也不知道。</p><p>那我对他的爱，又是如何？我是把自己，带入到那个女孩当中，才会喜欢上他的吗？</p><p>我也不知道。</p><p>但是，我唯一知道的，就是我自始至终，依然相信着那个名为”爱“ 的古老故事，不是在今天这个完全商品化的时代，在这个一切都被明码标价的时代。全部统一标准化之后，一切都变得量化起来，人与人之间的感情，就成了数值之间的比较。</p><p>这不是我所喜欢的故事。</p><p>我所知道的，只有一个女孩喜欢上一个男孩的故事。</p>]]></content>
      
      
      <categories>
          
          <category> 游戏杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《梦见雪花》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>梦，末</title>
      <link href="/2024/03/09/%E6%A2%A6%EF%BC%8C%E6%9C%AB/"/>
      <url>/2024/03/09/%E6%A2%A6%EF%BC%8C%E6%9C%AB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>什么是爱呢？</p><p>爱，是人类最为重要的情感，它是人类与其它动物所不同的根本属性。</p><p>但，真的是这样的吗？</p><p>我们所谓的”爱”的行为，实际上就算是在小动物身上，也能看到。鸡妈妈会保护它的孩子，这和人类的母爱，似乎没有本质上的差别。</p><p>那么，人类两性之间的”爱”，是不是就是人类独有的呢？</p><p>也不尽然，事实上，人类有”爱“的概念的时间，和人类的历史比起来，短到基本上可以忽略不计。”爱“，与其说是一种生理功能，不如说是一种社会概念。随着资本主义的发展，人与人之间择偶需要一种判断关系，简称”爱“。</p><p>自从吃了政府给的”梦末“药后，我就一直在思考这个问题。因为，现在只剩下我和他两个人了，所谓的”社会“已经荡然无存，我无需再考虑什么社会，因为我们两个人就是剩下的整个世界。</p><p>在政府宣布太阳将进入随时爆炸的消息后，人们都疯了。之前在网上讨论”爱“是什么的人，一夜之间都对这些彻底没了兴趣。人与人之间的关系变得错乱，大家都成了今朝有酒今朝醉的状态。</p><p>只有那个男孩，每天像什么都不知道一样，日复一日地写着卷子，像是在麻痹自己一样，但是我从来没有见过用那种方式麻痹自己的人，真是一个傻子。</p><p>这样的傻子，还有一个，那就是喜欢着他的我。</p><p>为什么说是喜欢，而不是我之前所想的”爱“呢？</p><p>喜欢，是很好分辨出来的，第一次见面时的砰然心动，就可以说是喜欢了。喜欢是生物最基本的行为，一个正常的生物都会去喜欢别人。</p><p>但是”爱“，是不一样的，爱牵扯到的东西太多太多，当然，”爱“的首要前提，便是要有”喜欢‘。</p><p>喜欢是契机，如果两个人之间都没有心动，那么是不会有所谓的爱的。当然也有所谓的“日久生情”，但是比起这种有着一开始喜欢的感情，总是会缺少些什么，更加接近亲情，是一种自然的依赖。</p><p>喜欢是为了自己，而爱是为了别人。</p><p>真正爱上一个人，是会时时刻刻为了这个人考虑的，这一点和只会寻欢作乐的喜欢有着本质上的区别。爱一个人，意味着会为了他放弃自己。虽然在末日之前，网上充满了“不要为了别人委屈自己”的思想，并且讽刺那些所谓的“舔狗”。但是若真正爱上一个人，是不论为他付出多少，都不觉得有什么问题的。有问题的，永远只是那些一边享受着他人的爱，另一边又不愿意自己付出爱的人。</p><p>但是，对于我来说，现在已经吃下了“梦末”的我，理论上已经断绝了所有的情感，也就再也不可能有“爱”了。</p><p>但是，我依然在这个男孩的身边，陪着他度过每一天。</p><p>我为他录下了音频，这样在我走后，他也能继续听到我的声音。</p><p>我可以离开他，去做一些更加开心的事情，但是我并没有，在这剩下的日子里，我只想和他一起。</p><p>驱使我这么做的，并不是“喜欢”这种感情，这种感情在我第一次吃下药后，就基本上消失了。</p><p>我想，所谓的“喜欢”，可能只是第一把火苗，而现在，火势起来之后，我的心已经不再需要那把火了。</p><p>在末日之前，人与人之间的“爱”逐渐被“交易”所替代。那种没有喜欢的交易，我不喜欢。</p><p>现在的爱，与其说是一种感情，不如说是一种艺术，一个故事，只有那些真正懂这个故事的人才能触碰到的事物。可惜的是，这个故事，在商品化的时代，逐渐被“互相匹配”的故事所替代，人与人之间每一项都匹配上，那么这个人就是最合适的人选。这样做确实风险小，看起来很有用，但是，我相信的爱情，永远伴随着两个人在最年轻的时候的互相喜欢，这种最开始的火，不可或缺。而在喜欢之后，则是两个相信爱情的灵魂的互相陪伴。</p><p>我想，最后我应该做到了吧。</p>]]></content>
      
      
      <categories>
          
          <category> 游戏杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《梦见雪花》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么是欧洲？</title>
      <link href="/2024/01/16/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E6%AC%A7%E6%B4%B2%EF%BC%9F/"/>
      <url>/2024/01/16/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E6%AC%A7%E6%B4%B2%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>人类社会近两百年来，在地缘政治上最为显著的变化就是以欧洲和美国为代表的西方国家的崛起和以中国、穆斯林国家等传统大国的衰落。欧洲崛起的原因看上去是十分明显的，在过去几百年里，欧洲率先开始了人类历史上最为重要的革命——工业革命。以蒸汽机为代表的通用工业机器成百上千的改变着人类的生产力，在科学技术面前，一切任何其他优势都显得黯然失色，掌握了这种力量的欧洲毫无疑问的成为了世界的霸主。</p><p>《为什么是欧洲？世界史视角下的西方崛起》这本书，就如同它的名字一样，旨在从世界史的角度上来解释西方崛起这一事件。读完本书，给我留下最深刻印象的就是它的世界史角度。事实上，我们以往看待西方，要么是所谓的纯西方角度，要么就是从本民族的角度。而在这两者之间，还有很多需要考虑的东西。</p><p>西方角度的西方崛起，其实大多数人都耳熟能详，从古希腊的辉煌成就与亚历山大帝国的融汇交流之后，欧洲进入了漫长的所谓“黑暗时代”，在漫长的一千多年里，基础理论几乎没有任何重大进展，“太阳王的首都巴黎只有50万人民，就其公共建筑、排污系统和卫生设施而言，都落后于1500年以前全盛时期曾拥有约100万居民的罗马城”。而在黑死病和漫长的百年战争之后，历史的车轮终于开始向前。“文艺复兴”，这个每个人都耳熟能详的名字，代表了欧洲历史上文化最为辉煌的时代。无数艺术家、文学家们重新打起了对古希腊的旗帜，开始了对人文和美的追求。随之而来的宗教改革冲击了教会权力，进一步解放了思想。随着思想的解放，政治制度也发生着翻天覆地的变化，资本主义制度登上了历史舞台，人类社会最为重要的革命开始了。以伽利略、牛顿为代表的一批近代科学家，建立起了近代科学的大厦，在此基础上，以瓦特为代表的一大批发明家创造出的机器前所未有的提高了人类社会的生产力，人类从此摆脱了几千年的农业社会，迈入了工业社会的大门。</p><p>这样的叙事看起来逻辑自洽，但是如果深究，会发现其中很少涉及到西方以外文明的描述。也许最为我们耳熟能详的就是马可波罗的故事了，但其中最主要强调的还是欧洲人的探索欲望以及大航海时代航路的开辟。</p><p>全球史的描述，当然这些内容也是非常重要的，但是除此之外，它提醒着我们还有另外一个不应该被忽视的因素，那就是阿拉伯文明。</p><p>在欧洲长达一千多年的黑暗时代中，世界并不是一直黑暗的。远东的中国创立了辉煌的文化，同时，穆斯林国家也承担起了科学研究的重担。当然，在今天提起阿拉伯，我们想起的可能是中东的石油商，披着头巾开着玛莎拉蒂，或者就是阿拉伯数字（当然是印度人发明的）。但在那漫长的几百年里，穆斯林们确实发展出了辉煌的文化，当时的阿拉伯国家掌握了贸易路线，同时开放的贸易带来的是各种文明的融汇交流，而这正是科技发展的必要因素。事实上，很多欧洲人在科学革命中发现的东西，后来都被证明在几百年前就被阿拉伯人发现了。现代数学研究的风格在很多方面也都更接近于阿拉伯&#x2F;伊斯兰的数学成果而不是古希腊。</p><p>当然，对于欧洲来说，阿拉伯国家所扮演的角色，可能更多的还是一个可怕的垄断者的身份。在君士坦丁堡陷落后，大量的古籍流落到了欧洲，同时也切断了欧洲和亚洲的贸易路线，欧洲人别无他发，只能寻找其它办法，其中最伟大的发现就是美洲大陆。新航线的开辟也带来了新的思想和财富，为资本主义制度的建立提供了前提条件。</p><p>但是，在这一阶段，事实上穆斯林的科学技术仍然处于遥遥领先于欧洲的水平，并且依然在继续发展着。那么，为什么现代科学没有出现在伊斯兰国家，或者中国或者其他地区，而是欧洲呢？</p><p>其中一个重要的因素也许可以归咎于对自然世界理解方法的不同。无论是阿拉伯，中国还是印度，都有着很高的数学成就，例如印度人发明的阿拉伯数字，如果没有这些数字现代科学可能永远不会被建立起来。但是，这些文明从来没有把数学和理解自然结合到一起，当我们的先辈在解释自然时，我们用的都是“气”，“五行”这些抽象的概念，而从来没把它们和数学联系起来。而欧洲人在这方面则取得了巨大的成就。最为出名的就是艾萨克·牛顿爵士，这位人类历史上最伟大的科学家，同时也是人类历史上数一数二的数学家，他的万有引力方程将数学的美和自然的奥秘揭示得淋漓尽致。除此之外，还有笛卡尔、伽利略这些十分善于运用数学工具的科学家。就如同《自然哲学的数学原理》的名字所说，用数学来阐释自然科学，是真正正确的、可持续发展的科学探索之路。</p><p>另外一个重要的因素也许可以归咎于在17世纪左右，各种社会动荡导致的各个国家政府开始收紧政策，它们更加倾向于回归传统的教条，这样做的结果一方面确实能保证社会的稳定性，另一方面却也扼杀了科技创新。例如中国在明朝的时候已经发展出了很多新的思想，但在清政府的统治下，许多思想都被扼杀了。在奥斯曼土耳其帝国，也有类似的情况。</p><p>在横向与纵向对比之下，我们才能更好的总结出欧洲崛起的真正原因。</p><p>第一，一系列重要的新发现促使欧洲人质疑并最终抛弃了古典思想和宗教文本的权威知识，而这一活动的程度是其他主要国家所未见的。</p><p>第二，欧洲人形成了一种把实验研究和数学分析相结合的方法来研究自然世界。</p><p>第三个关键的因素是英国大法官弗朗西斯•培根关于证据、论证和科学目的思想的注入。</p><p>第四个关键因素是由仪器所推进的实验和观测方法的发展。</p><p>第五个关键性的因素是形成了一种宽容和多元性的文化而不是全体顺从和政府强加的正统性，以及英国国教对新科学的支持。</p><p>第六个关键因素是企业家的资助和企业家、科学家、工程师与手艺工人之间紧密的社会关系。</p><p>以上是总结自本书的六个欧洲崛起的主要原因。只有从全球史的观点，我们才能更好地看出这些，同时理解了这些，我们才能对当前我们应该如何前进有着更好的理解。</p>]]></content>
      
      
      <categories>
          
          <category> 书评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 历史 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我想讲一个，关于世界上最后一个少女的故事</title>
      <link href="/2024/01/10/%E6%88%91%E6%83%B3%E8%AE%B2%E4%B8%80%E4%B8%AA%EF%BC%8C%E5%85%B3%E4%BA%8E%E4%B8%96%E7%95%8C%E4%B8%8A%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%B0%91%E5%A5%B3%E7%9A%84%E6%95%85%E4%BA%8B/"/>
      <url>/2024/01/10/%E6%88%91%E6%83%B3%E8%AE%B2%E4%B8%80%E4%B8%AA%EF%BC%8C%E5%85%B3%E4%BA%8E%E4%B8%96%E7%95%8C%E4%B8%8A%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%B0%91%E5%A5%B3%E7%9A%84%E6%95%85%E4%BA%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>灵感来源于做PlaneFight-NierVer的时候，想起一个名字来表示后续的游戏情节，想来想去起了一个非常中二的名字：LastShojo。之后在交谈的时候，也有了不少想法，也写了一些文案，虽然还没开始做，但先把东西放在这里。</p><p>当然，现在决定另外开一个项目，而不是在原来的基础上改了。事实上重新做比改从某种程度上来说还容易些，也更加有趣了。</p><h2 id="故事背景设定"><a href="#故事背景设定" class="headerlink" title="故事背景设定"></a>故事背景设定</h2><p>这是不知多少年后的世界。</p><p>【少女】从沙漠中醒来，发现自己已是孤身一人。</p><p>这片沙漠，原本也有自己的名字，也曾被称作过“大都市”，那时候，人们都对这里趋之若鹜，这片土地无论何时都是挤满了人。一寸小小的土地，可能就是一个人终身的努力。</p><p>但从不知何时起，人们开始厌倦了这种拥挤。外面的人不再想进来，而里面的人也越来越少。人们开始喜欢上一种“胶鼻床”，他们把自己放在里面，一小时，甚至有时候一天都不出来。进去的人越来越多，而他们在里面呆的时间也越来越长……直到有一天，最后一个人进去了，再也没有人出来。</p><p>少女不了解这段历史，也不知道自己是不是那“最后一个人”，她甚至不知道自己是谁。她所知道的，是她必须离开这里，但是外面的世界充满了未知和危险，她能看到的，只有眼前的一个个“胶囊”。</p><h2 id="玩法"><a href="#玩法" class="headerlink" title="玩法"></a>玩法</h2><p>游戏类型为横板解谜游戏。</p><p>画风十分简洁，是像素风格。</p><p>少女能做的事情很少，移动，跳跃，以及唤醒沉睡中的人。</p><p>唤醒的人有着不同的属性，例如有的人可以攻击敌人，有的人可以提供防护(少女呆在他身边不会被怪物伤有的人可以修造桥梁…..但也有人充满了攻击性，即使是对柔弱的少女也毫不留情。胶囊中到底是怎样的)人，全看运气了。</p><p>那么，加油吧，努力抵达终点，探寻【真相】!</p><h2 id="概念图"><a href="#概念图" class="headerlink" title="概念图"></a>概念图</h2><img src="/2024/01/10/%E6%88%91%E6%83%B3%E8%AE%B2%E4%B8%80%E4%B8%AA%EF%BC%8C%E5%85%B3%E4%BA%8E%E4%B8%96%E7%95%8C%E4%B8%8A%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%B0%91%E5%A5%B3%E7%9A%84%E6%95%85%E4%BA%8B/4.png" style="zoom:67%;"><h2 id="结局"><a href="#结局" class="headerlink" title="结局"></a>结局</h2><h3 id="结局1"><a href="#结局1" class="headerlink" title="结局1"></a>结局1</h3><p>“你确定要按下这个按钮嘛？按下它，所有人在使用胶囊中的记忆都会被清除，同时所有胶囊都会自动销毁。干干净净，就像从来没有出现过一样。”</p><p>少女点点头。她见到了太多太多沉浸在那个虚拟世界中，不愿回来的人。他们对于被叫醒感到无比的愤怒。但是少女不能理解，她没有去过所谓的“虚拟世界”，也无法想象这些。对她来说，这个世界，就是她唯一的世界，也是所有人的家。大家不应该让这个世界在漫天黄沙中死去，而应该齐心协力，让这个世界再次充满生机。<br>但尽管如此，一些沉睡者的话还是让少女久久无法忘怀。</p><p>“我在那里也有一个家。”他说。“那里视野很开阔，环境也很好。出门不远处就有一条小溪，我没事的时候就在那里钓鱼——哦，我在那里是一名木匠。”</p><p>“我有妻子和孩子。每天工作的时间不多，但都是我所喜欢的事情。我的大部分时间都陪着他们，我们会一起去冒险，一起在这美丽的世界到处旅游…当然，我知道对你来说这一切都是【虚拟】的。”<br>“这所有的一切，不过只是一堆数据罢了…但我确实记得，和妻子的约定，约定好了明天晚上一起去吃火鸡餐…那是我们20年结婚纪念日…”他又看向胶囊，那个已经无法运行的机器，只有少数还发着微光的器件展示着它曾经也【活】过。</p><p>“但我再也回不去了，我的世界已经死了。我所爱的人，全部都不会回来了。我并不恨你，只是我没有能力保护好他们，或者说这个世界没能保护好自己…既然你还有梦想，那就去保护你的这个世界吧。<strong>只是假如有一天，有人把你从这个世界‘叫醒’，并告诉你这一切都是虚拟的，也希望你能接受这一切…</strong>”</p><p>他死在了胶囊旁，和他的世界一起。少女不太明白他所说的东西，但她心中确确实实开始思考了一些问题。当然，要得出答案，又是在很久很久以后了。</p><img src="/2024/01/10/%E6%88%91%E6%83%B3%E8%AE%B2%E4%B8%80%E4%B8%AA%EF%BC%8C%E5%85%B3%E4%BA%8E%E4%B8%96%E7%95%8C%E4%B8%8A%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%B0%91%E5%A5%B3%E7%9A%84%E6%95%85%E4%BA%8B/1.png" style="zoom:67%;"><p>少女按下了按钮，人们带着全新的记忆在睡梦中醒来。他们不记得有过什么虚拟的世界，但他们都保存着之前的记忆。大家齐心协力，终于在这片沙漠之上重建了崭新的城市。不知多少年过去了，许许多多的问题又显现出来。有人贪得无厌地吸取着别人的劳动成果，有人拼尽全力却一无所获。越来越多的人开始埋怨起这个社会，开始诅咒起这篇城市…</p><img src="/2024/01/10/%E6%88%91%E6%83%B3%E8%AE%B2%E4%B8%80%E4%B8%AA%EF%BC%8C%E5%85%B3%E4%BA%8E%E4%B8%96%E7%95%8C%E4%B8%8A%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%B0%91%E5%A5%B3%E7%9A%84%E6%95%85%E4%BA%8B/2.png" style="zoom:67%;"><p>当那个胶囊被发明的时候，又是很多年以后的事情了。当然没有人记得曾经的“胶囊”，除了已经变成老太婆的少女。当少女听说这个消息之后，马上联系了这个发明者。发明者也吃了一惊，毕竟这是拯救了全人类的“人类之母”。机器很快调试完成，“少女”戴上了头盔，看着眼前熟悉的机器，想了许多，最终躺了下去。</p><p>今夜，希望有个好梦。</p><p>（结束）</p><h3 id="结局2"><a href="#结局2" class="headerlink" title="结局2"></a>结局2</h3><p>“你确定要按下这个按钮嘛？按下它，所有人在使用胶囊中的记忆都会被清除，同时所有胶囊都会自动销毁。干干净净，就像从来没有出现过一样。”</p><p>少女点点头。她见到了太多太多沉浸在那个虚拟世界中，不愿回来的人。他们对于被叫醒感到无比的愤怒。但是少女不能理解，她没有去过所谓的“虚拟世界”，也无法想象这些。对她来说，这个世界，就是她唯一的世界，也是所有人的家。大家不应该让这个世界在漫天黄沙中死去，而应该齐心协力，让这个世界再次充满生机。<br>但尽管如此，一些沉睡者的话还是让少女久久无法忘怀。</p><p>“我在那里也有一个家。”他说。“那里视野很开阔，环境也很好。出门不远处就有一条小溪，我没事的时候就在那里钓鱼——哦，我在那里是一名木匠。”</p><p>“我有妻子和孩子。每天工作的时间不多，但都是我所喜欢的事情。我的大部分时间都陪着他们，我们会一起去冒险，一起在这美丽的世界到处旅游…当然，我知道对你来说这一切都是【虚拟】的。”</p><p>“这所有的一切，不过只是一堆数据罢了…但我确实记得，和妻子的约定，约定好了明天晚上一起去吃火鸡餐…那是我们20年结婚纪念日…”他又看向胶囊，那个已经无法运行的机器，只有少数还发着微光的器件展示着它曾经也【活】过。</p><p>“但我再也回不去了，我的世界已经死了。我所爱的人，全部都不会回来了。我并不恨你，只是我没有能力保护好他们，或者说这个世界没能保护好自己…既然你还有梦想，那就去保护你的这个世界吧。只是假如有一天，有人把你从这个世界‘叫醒’，并告诉你这一切都是虚拟的，也希望你能接受这一切…”<br>他死在了胶囊旁，和他的世界一起。少女不太明白他所说的东西，但她心中确确实实开始思考了一些问题。当然，要得出答案，又是在很久很久以后了。</p><p>少女最终没有按下按钮。</p><p><strong>“如果你想要完成你的梦想，请不要剥夺他人做梦的权利。”</strong></p><p>那个人的话至今仍在少女心中回响。她不知道别人的梦是怎么样的，但她确实不想再做出让别人困扰的事情了。</p><p>不过，这个世界还是有希望的。</p><p>“罗伯特”，那个许多年前就坐上了自己的飞船，离开了这个星球的人，这个世界上最后一个不愿意进入胶囊的人。他年轻时是否会和少女一样困扰？他或许也被问过同样的问题，但他的答案却是“我不知道这个世界是否是虚拟的，所以我想自己去探索，直到找到答案，或者走到我生命的尽头。如果我进去了，我就永远找不到答案了。”<br>罗伯特最终造出了光速飞船，独自一人离开了地球。但人们对他的发明没有任何兴趣。地球外面只有冰冷的荒地，而地球本身就已经快荒无人烟了，为什么还要费劲出去呢？</p><p>但罗伯特还保留了一份希望，那就是第二架光速飞船，此刻正在少女的面前。坐上它，少女就能离开这里，驰骋星海，或许有一天，在宇宙的某个未知角落，与罗伯特重新相遇。那时候的他，是否会找到自己的答案呢？</p><p>少女不知道，但她毅然坐上了飞船。从此，少女又要开始一个人的冒险了，只不过这一次，她不仅仅是世界上最后一个少女了，而是这璀璨星河中，最后一个少女。</p><p>（结束）</p><img src="/2024/01/10/%E6%88%91%E6%83%B3%E8%AE%B2%E4%B8%80%E4%B8%AA%EF%BC%8C%E5%85%B3%E4%BA%8E%E4%B8%96%E7%95%8C%E4%B8%8A%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%B0%91%E5%A5%B3%E7%9A%84%E6%95%85%E4%BA%8B/3.png" style="zoom:67%;">]]></content>
      
      
      <categories>
          
          <category> unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LastShojo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>迟到的生日礼物，给Nagisa的合成大团子！</title>
      <link href="/2024/01/10/%E8%BF%9F%E5%88%B0%E7%9A%84%E7%94%9F%E6%97%A5%E7%A4%BC%E7%89%A9%EF%BC%8C%E7%BB%99Nagisa%E7%9A%84%E5%90%88%E6%88%90%E5%A4%A7%E5%9B%A2%E5%AD%90%EF%BC%81/"/>
      <url>/2024/01/10/%E8%BF%9F%E5%88%B0%E7%9A%84%E7%94%9F%E6%97%A5%E7%A4%BC%E7%89%A9%EF%BC%8C%E7%BB%99Nagisa%E7%9A%84%E5%90%88%E6%88%90%E5%A4%A7%E5%9B%A2%E5%AD%90%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本来计划着12月24号做的，无奈想法太美好，现实又太残酷，24号的时候尼尔版的飞机大战都没做完。不过幸好坚持着做下来了，现在这份迟到的生日礼物也在加急制作中，先放几张图吧。</p><img src="/2024/01/10/%E8%BF%9F%E5%88%B0%E7%9A%84%E7%94%9F%E6%97%A5%E7%A4%BC%E7%89%A9%EF%BC%8C%E7%BB%99Nagisa%E7%9A%84%E5%90%88%E6%88%90%E5%A4%A7%E5%9B%A2%E5%AD%90%EF%BC%81/1.png" style="zoom:60%;"><p>这是主页面，当然所有元素都是AI生成的了。</p><img src="/2024/01/10/%E8%BF%9F%E5%88%B0%E7%9A%84%E7%94%9F%E6%97%A5%E7%A4%BC%E7%89%A9%EF%BC%8C%E7%BB%99Nagisa%E7%9A%84%E5%90%88%E6%88%90%E5%A4%A7%E5%9B%A2%E5%AD%90%EF%BC%81/2.png" style="zoom:60%;"><p>这是音乐播放界面，目前想做的就是一个模仿音乐播放器的风格，把CL的一些代表性歌曲都放在里面，这样切换歌曲的时候，同时还可以切换封面。</p><p>你可能发现了，这个小游戏是幌子，mini galgame才是本质，除了音乐，还会有画廊，当然我准备采取随机掉落的方式来搞了。</p><p>加油吧，还有迟到的Nagisa生日快乐!</p>]]></content>
      
      
      
        <tags>
            
            <tag> Nagisa </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PlaneFight-NierVer总结</title>
      <link href="/2024/01/10/PlaneFight-NierVer%E6%80%BB%E7%BB%93/"/>
      <url>/2024/01/10/PlaneFight-NierVer%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>来填一下坑，记录一下之前立flag做的尼尔版的飞机大战！</p><p>当然是做完了初版了的（后续的就不立flag了）。</p><p>代码方面，除了炮台的子弹发射部分（想着后面如果做Boss战的时候再学）的代码是CV过来然后改的，其他绝大多数代码都是自己跟着视频敲的，为了练习，甚至CV都没有，好处当然也是比较显而易见的，熟练度确实有了不小的提高。</p><p>当然，由于教程中所使用的是NGUI，除了我自己用的一小部分UGUI外，我在这次小游戏里面所采用的也是NGUI。当然，后续是肯定要改为UGUI中，这将在我下一个复刻的小游戏中体现。</p><p>废话少说，直接上图。</p><p><img src="/2024/01/10/PlaneFight-NierVer%E6%80%BB%E7%BB%93/1.png"></p><p>这是游戏的开始界面，背景图和按钮图均由AI生成。事实上这个小游戏的所有2D美术资源都是由AI生成的，让我对AI的能力再次发出惊叹。</p><p>主界面以及这个小游戏所有页面和UI元素，我都是按照尼尔的UI界面风格来设计的。</p><p><img src="/2024/01/10/PlaneFight-NierVer%E6%80%BB%E7%BB%93/2.png"></p><p>首先这里有一个排行榜的功能，代码逻辑也是复刻的唐老狮的，采用xml的方法进行存储，即使退出了游戏再进去数据也不会消失。</p><p><img src="/2024/01/10/PlaneFight-NierVer%E6%80%BB%E7%BB%93/3.png"></p><p>然后就是音乐控制，可以控制BGM的大小以及开关，同样采用xml来存储数据，设置好了之后退出，音乐数据也会得到保存。当然，由于没有弄音效，所以音效暂时还听不出来。</p><p><img src="/2024/01/10/PlaneFight-NierVer%E6%80%BB%E7%BB%93/4.png"></p><p>退出界面！本谜语人上线了，到底选哪个才是退出呢？顺带一提，这个2B的图片也是AI生成的，真的神中神。</p><p><img src="/2024/01/10/PlaneFight-NierVer%E6%80%BB%E7%BB%93/5.png"></p><p>然后是点击开始后，会弹出模式选择界面（flag界面），但实际上只有一个模式，那就是无限模式，如果点击另一个模式就会弹出一些有趣的东西。这张背景图也是由AI生成的，真的是惊艳到我了。</p><p><img src="/2024/01/10/PlaneFight-NierVer%E6%80%BB%E7%BB%93/7.png"></p><p>然后就是模型选择界面，UI元素和背景都是AI生成的，按左右可以切换机型，这里就不展示了。模型使用的都是来自唐老狮的模型资源，之后有空可能会考虑自己用Blender做几个飞机和子弹出来。</p><p><img src="/2024/01/10/PlaneFight-NierVer%E6%80%BB%E7%BB%93/8.png"></p><p>然后就是游戏界面了，可以说设计的非常简洁，不过因为没怎么调数值，还怪难的，最多撑了一分钟就G了。</p><p><img src="/2024/01/10/PlaneFight-NierVer%E6%80%BB%E7%BB%93/9.png"></p><p>死亡界面，留下你的代号，然后返回吧！</p><p>游戏大概就是这样，自认为完成度还是很高的（得益于AI力量的加持），感兴趣的小伙伴可以到我的仓库去下载玩一下： <a href="https://github.com/YeagerYuan/PlaneFight-Nier">YeagerYuan&#x2F;PlaneFight-Nier: 这是一个根据唐老狮教材做的Unity飞机小游戏。2D美术资源全部来自AI生成，音乐来自尼尔·机械纪元。可以在Windows,Linux平台运行。 (github.com)</a> </p><p>百度网盘：链接：<a href="https://pan.baidu.com/s/1OlZbex6qjTiq2BWVsKUZ5A?pwd=up2q">https://pan.baidu.com/s/1OlZbex6qjTiq2BWVsKUZ5A?pwd=up2q</a><br>提取码：up2q</p>]]></content>
      
      
      <categories>
          
          <category> unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏制作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Farewell to 2023</title>
      <link href="/2023/12/31/Farewell-to-2023/"/>
      <url>/2023/12/31/Farewell-to-2023/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="5b9156e9a4ea0644da032bb39fbc62e0bacda6c902a6bf2f938aaee1ff4e7c5f">6110ab8c8c0631f393712c26675df9e001e9b5ab14720202f7dd0ec0444321c99f9eedc672fb803b847eff76ffd9b6c4f5d3af64db7b637489db5b79987a907e1a50eb897ccccc7b46aa2dca6bd7e98283df889b515389f3e495d4e587a8e1a9b3e4b45408930d9bd9339ccbccfa7e79befb2b1677014abdd03c17f77d18b96d57f4410501ddf3caeb78f2e74166cfd3d3aecf04451fbefc79a367446e6300e8a635a900f3250552b8dae6278ccb78096817edf21584a2f811d23d0de6f5afc2fec03593f6773bd6207b968ae103bc3a46df2883ff9b1fcab2d0cbd6bda46e850b7fd3e0c70e24260acdd34f11e4b84b7af918114e451181e9d5c27d553aa5e6ebab6db0c3841e0311a15da6b6cf204097f36c59217edeafedb5b15002edf9f33e9d70af8ab51d89b761c90593df9cc1759b6df6c143e979cb3a043af71352109338c3e606fb3412ed600c3f69da30173fa75e005b511e8ee8ea834a311d7a6023649395a24556ce95cc6da3fb8f8b2599c59c1b3c1aad6b6207bb8a7b836a8b96925291076b19c69a8ce96fe6b8701ae0cff3b82b6e0ee3effc23537b04f9b7ba320109d7050cd3808bef91e7f3fcae4f1aac0b253a5a50ade5e926ea2fc53c1b8630b01cd31387161735563fccc53a308253e9556d3be1256c3066cb3d95a280e87a9c44901099800b507586d8d0347d49fb25e6d53e35681de08b027eaaf1406b4e087755b55d1790687d196ae2cb77f5a0c7377738ce1e40367075ab36ca17a612c3b88f951a23e19f06bdfb32dc0a034e2cabf4faa57506a7a8829117e34da9531d338f3144946ecf9b317437e7b2f3b4e8343d4da3c78572a85836d5126880027971e9d370fb5ab62c62cf751270d71cb18981cd29d4ebbc9208fcf7a16db178da7c119a7180f491b9e0288e1b6df213f2c2c1928511719c6796efbe44e0a1913218782a8b14cbbc54d9c6ce19b172d27f353450fe311c7f1f6421c934b5d6483846d3ba57f705fb0f2c5cb127c4bb524a4132fe6fc687bb1f46ead54828f48bcc4400df7b3417328d6fb96092dfbdb526530e804efc5a3ef5bebf89be5d406d65ee3de4ab4b113bd3e5c72eff4e4ec8af6c48c05a0a532ac1167a47a1ff80906ef15756b46ab2cad6b5d45821ddddbbbf6d0b81c24257ce4759a247787a50667e1f3ca0c4fba7dc39d4afdb1534aa325dcf0a4f2ccb1e093035965b7fe643bbd9c151a449a5ea23080aa55dd3e8f14ad1cc6c8b56d57da47a9120c188236febb31e271189a06b030f13fe52162885195eae0f029ae658517617d45de6b9a030720b96586cf54c42126d1553b9b09178e8fecff5a3450d88f9860937a9837b1d0b7c791f97c6813ee86498de191de2fe64a2a13a3084362aec3fb7bbe8152c130f5038eeecacb60dec19c13108512df83f53b9cecee6ed633ce1764a6335bb53c5f5ee499c5c11c19b6500dfe0950dcafb646c0b57afefe0832ca321ab2d7566f37ba7436b477565f9c73727ad2e3d84514259a9862d1a0db3c30240df8a994ec877c773bd2ed94dce038dc6586dfbe168d9665632b9323e2785e3e99246f0a58500db8ad8fed4c74ad7d726c798e3f9a4cc019a0be9137ff9ff6a6be37c0de4dc02271653cbd133830d8704e48a54c81623d8989391f9946f36b83540c9fbfbc6a64c3522eade3a9e84f9468bca4b6f4e82f94f8548db6350f1ae06f35ec2ad93de0664bd179066fa791d55af55fa1d99b13477fabc06a7257dbcb6083dbd44beb5e3deb93c1984859171b0afe7e689914dfc2f128c13de4fa3bc97798546a296dd52c04bcd487d70acdcd6fa813260888da7b3bbafc44a67c917041dc8ee8de22c57e0530ade5ebfe432a3cc6c223a9488889900abd717c941763833907d5d4fd3b01ca702d66dcf134eb8d043c6a27f08234ba26e7b41b1c44932ac3dc1781ec9e9fcfe1608a29e193843a45b5bc0b0499a5c80f1c9fb417403341457f36cf80f0a30744558c8ac19b4353422c0f13e296713c7a06596ac5a9a89d9284d08701a042ae22b6ab5a1aace84fbdd56e3becb8d35d743acf35b77bee4f5f1cad129653259a80282f4a45ccf3947f9a659ef5f6de0c4efe9922c3fbedb95f5073383bcb9b27edda420139ce6f549ee51ccf22029eb850387cc5604a1403dc94db6c7841388051045a1e09ce228cc20f1a39f277e1a52ba86a05ef86509f64c764616a70b82d4be70c603f95c16a337af194680ea1b4207ff3ae0e80dd6bd4154b79a8c528804396b0b4139e79c77d68019fbfd0abd77c57b5dc1f32fdcc2ab602b43d970b118955f20794c7e5ae71056f821f685ef6d2dd071bb2d25bcb594bef72a7a1b37295144d58eb9a968c934b5d47609c76f527b43272a045cd47ed79e884a921a088f764a1f3890c5df3bc8bfd6c24872ef289c61af69c65d1bc9efb95bc004a674b6d6201962d5e5e5f82fc4f63197269e5a92d585953a14523f12f22be0b0c6dea04f181f41a971f1b486b744dfdb7633c543b7aeaf1b7fe523ad00f8659be9422ff46cdb9491c35815f6ccc4d5a8cb3d52a1c8178b6631a4c1b9272183b4d9a27f56ea158383805a1e3dfb6a082926b5452f605c36ce3aaea213892ae8cc4613e4f65c03cdb1dcc8c68383209219084c1226ffcd9a85abed242c773cd8742cbedb0aff4d8cada81151d974f9d83dbd5f10af872ad19b57465068f0569ca7b6f10328edbf14d88d9aa2bd940940009a97c69b6508f105ec40ff6b2d5d377a308bf741bad9184181778c138cb59fde2d402e5b96d066bc2bfed2d9dbd7e76cae1bcb036b4d8ebee0a05056ad40419270d93ff3c36f59ab5132248c285e4b18c7be99b99b90e52ec405a7dcfef8e33cc33243e3c91b78d24bda33e076568ee10d5689c298e92d3cd7a7803aed2e5dd1f897e64dc06d9a7961dddbb7873d81df6935d497634bd69e8322bbba8aac19c9a0deeb4cfd4d9bc2849e9e35a0b64d7d2ce49eb8dd2086a443c0cd36b648f5124977bebaaa323e1792e67cf9af85fc5a9e37041c808eb3249de3bba229a112480285518e72ec587f98f1dbf6c89770d2dccac3f767a5f122899eaa8b2cbee079d1ff16e99fb98fcec6878ddd032249bf22aad2157c184198537b3a9827f2b46ab013796d97625a3ccad1c92a2a755ab566aa3b88bdeaa25d475ff5c634a394d510341a242fbb5536976db834822917cdb57bf31d866630dcede21ba95a972b06377db4999b7ec4053df84f8c4c84ecae0954df1f61cb237983a71f28479c549e831a7c3a4f1095b21df06298f977bed37cd59627dde1a00b7cf2f6e0d6be1d2fbf28e2eea767f6b2c08f6c7134c74f9ca1275fa43b7a6424927069f839f9dbfddb507018b5aa5e2fea34dc2a57c845f7c8af4e89ee4a12aa70f89fdce99eeb1f9af8d911bf196dc3342e4244088f613355b2da38c3b4d98fe83ba188bd78a49f874938e1ad25119613afbe8cda1a9d129f5725453bb130dfb64caba4c1e311f5a22d03d7b994f2798429b4cf99f0f791743a829e156775b57879e448948d8424fd394c4f0d374b76cd6cf49133402875c291999117a1c2a799fbebce3847636b57ba0b1e07318948890a89591f6f456097889730032199456081f7aaa7a31ba0800616f7428f2a20de76bba66455c70ff7173e6be8dddea9e10661f0ba95d449ec3353ab9a1b780c3ccd82254fb76a09bb59bf1f5b054cc7fc0bab50ba5196ac860bc281164c29bc755d47336b4050046f0bd4d24b82a647bc161c64aa5bdd72f958e3b065d81ab3f00fe25f4e780d8c6da661e4af7c564ca3a740d9c3903f8bf0b581875b464f0af124d0ef149a641fca71db8fc3cbdba8086dc6f5aa10f98148ef3105902faa24be36fbbcd5ce9af39fb4a9d552e3c6dd399cbfc22211c4337447c6f4d128b31dd4625b01d1e9869aff3d94c2a9d499559cfa04</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这是屋主的最私人日记，请输入密码观看</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 新年总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>是文明，也是人性——简评《文明6》</title>
      <link href="/2023/12/23/%E6%98%AF%E6%96%87%E6%98%8E%EF%BC%8C%E4%B9%9F%E6%98%AF%E4%BA%BA%E6%80%A7%E2%80%94%E2%80%94%E7%AE%80%E8%AF%84%E3%80%8A%E6%96%87%E6%98%8E6%E3%80%8B/"/>
      <url>/2023/12/23/%E6%98%AF%E6%96%87%E6%98%8E%EF%BC%8C%E4%B9%9F%E6%98%AF%E4%BA%BA%E6%80%A7%E2%80%94%E2%80%94%E7%AE%80%E8%AF%84%E3%80%8A%E6%96%87%E6%98%8E6%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>最近体验了两把文明6，除去重开的（是的我重开了好多次）还有一把60回合的，游玩时间直接来到了35小时+。不得不说，这是我玩游戏以来沉浸度最高的一款游戏，而且玩的还是单机模式（每次打开后除了玩到睡觉就是玩到一局结束）。</p><p>《文明6》模拟的是一个文明从诞生到最后（胜利或者灭亡）的经过。从第一个城市的建立，第一个侦察兵外出探索整个世界，第一次建起农场，第一次蛮族入侵，再到在五湖四海建立起自己的殖民地，军舰和坦克部队遍布全球，这其中的过程确实给了我许多的惊喜。</p><p>游戏采用的是回合制，每一回合内你需要做出一系列的选择，其中每一个选择都需要你深思熟虑，开拓者应该先在哪里建立城市？是先生产建造者还是士兵保卫我的城市？经常会遇到刚生产出来的建造者就被蛮子抢去了的情况，确实令人咬牙切齿，但也正是这款游戏让人着迷的地方——随机性。随机遍布分布的资源，未知的地形，没脑子（bushi)的AI，每一回合后都能了解到更多信息，与此同时，占领一片区域、修建奇观，等等各种事件又能给我们很多反馈，这其中正体现了一种十分优秀的游戏设计思路。一方面给玩家无尽的新鲜感，同时玩家也在相对固定的每回合操作中不断重复着正反馈。</p><p>我第一把采取的是发展科技走科技胜利的路子，怂的根本不敢碰别人，结果到最后没办法去打别人却被别人直接反杀。第二次我痛定思痛，生死看淡，不服就干，最终凭借着强大的军队直接扫荡了整个世界。<strong>在此过程中，我其实被一个明确的目标（推平整个世界）推动着，同时这个大目标又被划分为几个目标（不同的几个文明），最后细分到各个城邦（最小目标），我每次就需要调动军队来围攻这些城邦（手段），而且这些最小的目标完成后我也会收到很大的正反馈（城邦被攻陷，我马上获得了土地、资源以及地缘优势）。</strong>这样一层层相扣的设计实在是精妙。</p><p>文明是这样，人性也是这样。想来我们在做事情时也是遵循着这样的规律，但是最大的问题是现实并不是游戏，我们往往很难找到每一步的正反馈，这也是让我们很难沉浸起来做事情的一个大问题吧。</p>]]></content>
      
      
      <categories>
          
          <category> 游戏杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《文明6》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>谈一下《2001：太空漫游》中最打动人的两处</title>
      <link href="/2023/12/19/%E8%B0%88%E4%B8%80%E4%B8%8B%E3%80%8A2001%E5%A4%AA%E7%A9%BA%E6%BC%AB%E6%B8%B8%E3%80%8B%E4%B8%AD%E6%9C%80%E6%89%93%E5%8A%A8%E4%BA%BA%E7%9A%84%E4%B8%A4%E5%A4%84/"/>
      <url>/2023/12/19/%E8%B0%88%E4%B8%80%E4%B8%8B%E3%80%8A2001%E5%A4%AA%E7%A9%BA%E6%BC%AB%E6%B8%B8%E3%80%8B%E4%B8%AD%E6%9C%80%E6%89%93%E5%8A%A8%E4%BA%BA%E7%9A%84%E4%B8%A4%E5%A4%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>关于阿瑟·克拉克自然不必多说，他是三大科幻小说家之一，不过相比其他两位其实我对克拉克的作品看的是比较少的，但是比如《与罗摩相会》等作品还是给我留下了深刻的印象。</p><p>《太空漫游》系列作品可以说是克拉克最广为人知的作品了，其知名度和评价我在此就不再多赘述。本文主要谈一下在《2001：太空漫游》中最打动我的两处地方。</p><p><strong>所有曾走在地球上的生物中，猿人是第一批会凝视月亮的。虽说望月者可能不记得了，但在他小时候，他曾经伸手想要触摸那升上山丘的朦胧脸庞。</strong></p><p>“望月者”的形象，即便对于没看过太空漫游的读者来说，也是一个十分经典的形象了。300万年前，我们的祖先第一次抬起头，望向了月亮，它当时在想些什么，甚至有没有“思维”这种东西，我们都无从而知。但300万年后，它的后代，从真正了解这是什么，到登上月球，甚至只用了300年。</p><p>人类的进化是否受到外界引导，我们无从而知。甚至连可能存在的外星生命形式，也是超出我们想象的。               </p><p><strong>最早来到地球的探险者，早已面临血肉之躯的极致。一旦他们打造的机器可以胜过他们的肉体，就是搬家的时候了。首先是头脑，然后只需要他们的思想，他们搬进由金属和塑料打造的亮晶晶的新家。</strong><br>        <strong>他们就在这种躯体里漫游星际。他们不再建造宇宙飞船。他们就是宇宙飞船。不过，机械躯体的时代很快也过去了。在无休无止的实验中，他们学会了把知识储存在空间本身的结构里，把自己的想法恒久地保存在凝冻的光格中。他们可以成为辐射能的生物，最终摆脱物质的束缚。</strong><br>        <strong>转化为纯粹的能量之后，他们又改变了自己。在千百个世界里，那些被他们舍弃的空壳，在无意识的死亡之舞中短暂颤抖之后，崩裂成尘。</strong><br>        <strong>现在他们是银河系的主宰了，超越了时间的限制。他们可以自由自在地漫游在星辰之间，也可以像一缕薄雾渗入到宇宙的缝隙里。但尽管他们已经拥有神祇般的力量，却也没有完全忘记自己的起源——在一片已经消失的海洋的温暖的烂泥中。</strong></p><p>作为观测者的宇宙文明，其形态究竟如何，一直都是个谜。其中还蕴含着更加有趣的猜想，那就是高纬度的外界观测者。我们的世界是否是“虚拟”的，永远是个既不能证实，也不能证伪的命题。但是，也许有一天，我们能用自己的技术，搭建起一个虚拟的小宇宙，当生活在“虚拟世界”的AI开始质疑其世界的真实性，我们能否从观测者的角度，去了解到自己被观测的命运？</p><p>这些有趣的猜想，值得用一生去探究。</p>]]></content>
      
      
      <categories>
          
          <category> 书评 </category>
          
          <category> 《太空漫游》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科幻小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity第一个游戏小项目记录</title>
      <link href="/2023/12/18/Unity%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%B8%B8%E6%88%8F%E5%B0%8F%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/"/>
      <url>/2023/12/18/Unity%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%B8%B8%E6%88%8F%E5%B0%8F%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>花了不少时间来构建第一个Unity小游戏项目，目前进度是做出了UI界面，数据管理器还没写完，算是比较有收获的一天吧。</p><p><img src="/2023/12/18/Unity%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%B8%B8%E6%88%8F%E5%B0%8F%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/PlaneFight.gif"></p><p><strong>PS：</strong>为了把这个录屏变为能上传上去的gif图，还掌握了用PS修gif图的本领！（奇怪的知识又增加了）</p><p>希望在未来两天内能把这个做完，然后换成类似尼尔主题的。</p>]]></content>
      
      
      <categories>
          
          <category> unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity中的四元数</title>
      <link href="/2023/12/03/Unity%E4%B8%AD%E7%9A%84%E5%9B%9B%E5%85%83%E6%95%B0/"/>
      <url>/2023/12/03/Unity%E4%B8%AD%E7%9A%84%E5%9B%9B%E5%85%83%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>unity中，要进行旋转操作的时候，经常用到的是 <strong><code>Transform.Rotate</code></strong> 的方法，例如：</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Rotator</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 每帧旋转5度</span></span><br><span class="line">        transform.Rotate(<span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>) * Time.deltaTime);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种旋转方式也就是平时经常提到的欧拉角旋转，这种旋转的本质其实是利用了矩阵的乘法。以二维空间为例，我们可以发现，对于二维空间的一个点（我们将它的坐标表示为列向量），对其进行一次矩阵的乘法，可以将其成功的旋转。</p><p><img src="/2023/12/03/Unity%E4%B8%AD%E7%9A%84%E5%9B%9B%E5%85%83%E6%95%B0/1.jpg"></p><p>这里的矩阵，实际上就是绕着原点旋转一定角度的旋转矩阵。当然，在实际使用时，为了统一旋转和平移操作，我们会使用齐次坐标表示法来进行延拓，不过这不在我们讨论旋转的范畴当中。</p><p>同理，我们可以将其拓展到三维，从而推出分别绕着三个轴的旋转矩阵：</p><p><img src="/2023/12/03/Unity%E4%B8%AD%E7%9A%84%E5%9B%9B%E5%85%83%E6%95%B0/2.png"></p><p>但是，这样的操作是存在问题的，最典型的问题就是万向结死锁的问题，也就是当一个轴旋转了一个角度之后（例如90度），会造成其它两个轴重合的情况，此时如果我们再对两个轴进行旋转操作，会发现结果是一样的，此时我们就会丧失一个维度的旋转。</p><p><img src="/2023/12/03/Unity%E4%B8%AD%E7%9A%84%E5%9B%9B%E5%85%83%E6%95%B0/3.gif"></p><p>为了解决这个问题，我们就需要引入四元数的概念了。</p><p>首先，四元数并不是生来为了解决三维旋转，而是它的性质非常有利于表达旋转信息（后面会详述），所以了解四元数的性质要先于了解四元数在旋转中的应用。至于四元数替代欧拉角等形式，就需要牵扯到一些别的知识点，我先罗列一下四元数相比其他形式的优点：</p><ul><li>解决万向节死锁（Gimbal Lock）问题</li><li>仅需存储4个浮点数，相比矩阵更加轻量</li><li>四元数无论是求逆、串联等操作，相比矩阵更加高效</li></ul><p>所以综合考虑，现在主流游戏或动画引擎都会以缩放向量+旋转四元数+平移向量的形式进行存储角色的运动数据。</p><p>我们先看一下欧拉公式：</p><p><img src="/2023/12/03/Unity%E4%B8%AD%E7%9A%84%E5%9B%9B%E5%85%83%E6%95%B0/4.png"></p><p> 正如复数是有一个实部和一个虚部组成的，那我们将一个虚部换成三个虚部，即两两相交{i, j, k}。 </p><p><img src="/2023/12/03/Unity%E4%B8%AD%E7%9A%84%E5%9B%9B%E5%85%83%E6%95%B0/5.png"></p><p> 其中n为三维的单位向量，i²&#x3D;j²&#x3D;k²&#x3D;i·j·k&#x3D;-1。这便是四元数的常规表达形式，不过单位四元数是有一大堆的约束的，并不是所有四维向量都是四元数。 </p><p>（待更新）</p>]]></content>
      
      
      <categories>
          
          <category> unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AIGC智能创作时代</title>
      <link href="/2023/12/02/AIGC%E6%99%BA%E8%83%BD%E5%88%9B%E4%BD%9C%E6%97%B6%E4%BB%A3/"/>
      <url>/2023/12/02/AIGC%E6%99%BA%E8%83%BD%E5%88%9B%E4%BD%9C%E6%97%B6%E4%BB%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>AI在今年无疑是最热的话题之一，而且这次热度并不是像以往的元宇宙一样是炒作，我相信在体验了以ChatGPT为代表的AI工具后，没有人会再质疑AI技术的潜力了。</p><p>作为AI技术的一个十分重要的分支，AIGC在今年也得到了空前的关注。事实上，从去年开始，以stable diffusion为代表的AI绘画模型就已经以令人惊艳的图片生成质量震惊了我了。虽然我本人也是只是浅尝辄止，没有成为一个熟练的prompt工程师，但是在可以遇见的未来，prompt工程师确实会崛起。</p><p>作为一个决定踏入游戏制作领域的人，对于AIGC就必须投入更多的关注了。事实证明，AI技术对于美术素材的生成有着巨大的帮助，包括2D美术素材、音乐等等，虽然目前在3D方面我还没有尝试比较好的模型生成插件（但是之前的unity muse确实声称可以生成比较好的3D美术素材），但是毋庸置疑这将极大的提高生产力，尤其是一些没有资金的小型独立游戏制作者。</p><p>另一个让人感兴趣的方面是大模型在游戏中的应用。其实简单AI在游戏中的应用一直都有，包括GPT一开始都是训练怎么去打Dota的。不过我更感兴趣的是，假如GPT能更进一步表现得更像人（即使实际上并没有自己的思想），将他们用作游戏中的NPC,并且NPC之间会和环境、互相并且和玩家交互，最终又会变成什么样的有趣游戏？我们是否可以提前做出我们的ALICE?不得不承认，这一切都十分让人兴奋。</p><p>回到AIGC上，AIGC开创了“模型”主导内容生成的时代。人类将跑步进入传统人类内容创作和人工智能内容生成并行的时代，进而进入后者逐渐走向主导位置的时代。这意味着传统人类内容创作互动模式转换为AIGC模型互动模式。人类历史上第一次，由非人类生成的内容会超过人类自己，而2022年就是一个重要的历史节点。</p><p>AIGC的生成能力和模型的参数成正相关，但是事实上，现在就算是参数量最大的GPT4,其参数总量也仅仅只有 <strong>大约1750 亿到2800 亿之间</strong> ，甚至比GPT3多不了多少，而人类突触数量级达到了100万亿的参数，虽然目前还不清楚在现在的方法上是否有可能继续增加数量级，但是我们确实相信，一定能找到一种办法，最终达到这个数量级，从而达到匹敌甚至超过人脑的智慧。到那时，也许不再是AIGC了，而是AIALL了。</p><p>AIGC的爆发，得归功于深度学习近几年取得的巨大成就进展，尤其是19年的Transformer，它使得一切变得可以学习。同时像更老的一些如3D-GAN(2014和Diffusion(2015)，它们都对深度学习网络的构建起到了重要的作用。可以看到的是，这个领域正在蓬勃发展，虽然也许我们正在制造的是我们整个种族最大的敌人，但是我们也不得不做，因为，他就在那里。</p><p>我很推荐这本《AIGC智能创作时代》，它的前面部分简洁有力地说明了这几年AIGC的发展以及重要的理论，在后面还介绍了许多AIGC的应用场景以及正在从事这些行业的企业，也可以当作一本AIGC百科全书来查阅。</p><div class="row">    <embed src="/pdf/AIGC：智能创作时代" width="100%" height="550" type="application/pdf"></div>]]></content>
      
      
      
        <tags>
            
            <tag> AIGC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小樱美图分享第二弹</title>
      <link href="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/"/>
      <url>/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>当所有卡片集齐之时，不是结束，而是开始！</p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695288861.jpg"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695288877.jpg" alt="1695288877"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695288889.jpg" alt="1695288889"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695288896.jpg" alt="1695288896"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695296727.jpg" alt="1695296727"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695296738.jpg" alt="1695296738"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695296750.jpg" alt="1695296750"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695309543.jpg" alt="1695309543"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695348797.jpg" alt="1695348797"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695371964.jpg" alt="1695371964"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695432022.jpg" alt="1695432022"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695432214.jpg" alt="1695432214"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695433127.jpg" alt="1695433127"></p><p>![1695433177]小樱美图分享第二弹&#x2F;1695433177.jpg)</p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695433370.jpg" alt="1695433370"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695447271.jpg" alt="1695447271"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695447280.jpg" alt="1695447280"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695653060.jpg" alt="1695653060"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695653070.jpg" alt="1695653070"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695700169.jpg" alt="1695700169"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695700211.jpg" alt="1695700211"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695700323.jpg" alt="1695700323"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695870445.jpg" alt="1695870445"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695962206.jpg" alt="1695962206"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695962220.jpg" alt="1695962220"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695962290.jpg" alt="1695962290"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695962312.jpg" alt="1695962312"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695962322.jpg" alt="1695962322"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1695974973.jpg" alt="1695974973"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1696092610.jpg" alt="1696092610"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1696093147.jpg" alt="1696093147"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1696093651.jpg" alt="1696093651"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1696094272.jpg" alt="1696094272"></p><p>![1696154441]小樱美图分享第二弹&#x2F;1696154441.jpg)</p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1696435833.jpg" alt="1696435833"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1696500726.jpg" alt="1696500726"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1696766855.jpg" alt="1696766855"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1696926763.jpg" alt="1696926763"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1696927197.jpg" alt="1696927197"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1696946865.jpg" alt="1696946865"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1696997625.jpg" alt="1696997625"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1697128456.jpg" alt="1697128456"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/1697128608.jpg" alt="1697128608"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/IMG_3468.PNG" alt="IMG_3468"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/IMG_3498.PNG" alt="IMG_3498"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/IMG_3777.PNG" alt="IMG_3777"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/IMG_3905.PNG" alt="IMG_3905"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/IMG_3906.PNG" alt="IMG_3906"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/IMG_3907.PNG" alt="IMG_3907"></p><p><img src="/2023/12/01/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%E7%AC%AC%E4%BA%8C%E5%BC%B9/IMG_3908.PNG" alt="IMG_3908"></p>]]></content>
      
      
      <categories>
          
          <category> 美图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 木之本樱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何看待性别叙事——简评《厌女》</title>
      <link href="/2023/12/01/%E5%A6%82%E4%BD%95%E7%9C%8B%E5%BE%85%E6%80%A7%E5%88%AB%E5%8F%99%E4%BA%8B%E2%80%94%E2%80%94%E7%AE%80%E8%AF%84%E3%80%8A%E5%8E%8C%E5%A5%B3%E3%80%8B/"/>
      <url>/2023/12/01/%E5%A6%82%E4%BD%95%E7%9C%8B%E5%BE%85%E6%80%A7%E5%88%AB%E5%8F%99%E4%BA%8B%E2%80%94%E2%80%94%E7%AE%80%E8%AF%84%E3%80%8A%E5%8E%8C%E5%A5%B3%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>因为一些原因和之前经历过的一些事情，并且观看了网络上大量的性别对立话题（不可否认的是大量内容都是为了流量炒作而为的），从最开始的有点津津乐道，到后面开始厌烦这种千篇一律的对立和没有如何意义的“win”,恰逢在zlibrary上看到了这本号称日本女权主义代表人物的著作，便一连下载了好几本来好好研读，试图去搞清楚这所谓”女权主义“的核心到底是什么，在互联网上的这些争执，以及社会结构的变迁、结婚率的持续走低，这些事情是否能在这背后寻得一丝答案。</p><p>本书的核心是”厌女“，作者首先指出厌女为何物，在男人身上表现为“女性蔑视”，在女人身上则表现为“自我厌恶”。作者指出厌女症并不分性别存在于两性身上，只不过表现形式并不一样。上野描绘男人的厌女症，首先从指责一些男性作家写出的东西”完全不懂女人“，进一步指出男性一直对女性有着比较强烈的性幻想，并且一直认为着反过来也是一样的。但是上野指出，女性对男性事实上十分缺少”性幻想“。他指出，如今女性已经不再愿意扮演男性幻想中的女性角色，而男性则将这些幻想寄托于虚拟之中。</p><p>这部分分析，我不敢苟同，首先我不是女性，我确实不能理解女性对于男性的看法，不过按照上野的想法，那么可能自古以来女性对于男性就只是屈服性质的服从了，所谓的喜欢，其实并不存在于女性心中，因为女性实际上并不会对男性有什么性幻想。而现代社会，随着思想的解放以及经济的发展，广大女性终于可以对这种屈服说”不“了，女性不再需要男性什么，可以不再受婚姻的束缚了，除非还是在经济或者其他方面屈服于一些男性，或者是仍然遵循着上一代的训诫罢了。</p><p>随后作者指出的是男性社会的社会纽带——男性之间的互相认同。上野指出，男性都有同性恋的倾向，但是又有一个维护”性的主体“的共同目标，一旦有了真正的同性恋，那么必然有一方的男性会沦为”性的客体“，这是违反这个目标的，因此上野嘲讽”男人这个东西，建立在多么脆弱的基础之上“。而这样的男性社会，将女性”他者化“，试图永远把女性作为”性的客体“。</p><p>之后上野进一步明确了什么叫”他者化“。上野指出，男性通过给女性划分”圣女“和”娼妓“的两重身份，将女性分离为“为生殖”和“为快乐”，”圣女“的标准要求女性对生殖忠诚，对性的无知被奉为美德，而”娼妓“的存在则是为了为男性的”性快乐“开脱，因为”娼妓“不被视为女性，那么他们乱搞的行为也就可以被正常合理化了。但是这一切的实质还是通过两极的评价标准，将女性”束缚“在这个评价体系之中。上野似乎希望，女性可以将所谓“为生殖”和“为快乐”变为女性自由决定的，不被他人（男性）决定的。事实上我觉得这种想法不会，也根本没有必要实现，现在社会的一个很大的倾向就是很多男性反对那些喜欢”乱搞“的女性，我只能说这是自然选择影响下人类已经存在不知道多久的倾向，上野想要反对的东西，实在过于庞大，而显得不现实。反而我认为公平的是对男性做出同等的社会约束可能会更加容易实现一些，也就是所谓的，无论男女，乱搞就是不对的非双标的价值观。当然，我这只针对传统婚姻，有些男女，和很多异性都保持暧昧关系，这样的人，如果他们自己愿意，尽可以自行玩乐。我一直信奉的原则就是，一个人再怎么捍卫自己的自由的无可厚非，但是想要强行改变别人看法的行为，用流行词汇来说可能是”PUA“，是不能苟同的。</p><p>之后让我印象比较深刻的一点是上野对于一子化对于女性的影响，这一点我觉得对于我们当今社会也有一定的借鉴意义。上野指出，一子化下的女生，其实继承了母亲（是的，主要是母亲）一方面对于儿子”成才“的期望和对于女儿”成家“的期望。这一点不得不承认是分析让人比较信服的。随着社会的发展，女性在社会的各个方面所取得的表现已经和男人旗鼓相当，而很多女性高级知识分子都是选择了不婚主义，这也反应出事实上”成才“和”成家“这两方面要同时在女性身上实现是相当困难的，我本人也认为，这是对于这些女性的不公平，成家就要生娃，但是对于男性来说这并不会影响他们的工作，但是女性则不一样，不论结婚对象是什么样的，生孩子的义务最终还是要由女性来承担，而这对于事业来说是十分致命的。所以我也认为，很多女性高级知识分子不结婚也是很正确的选择，社会不应该对此有一些奇怪的声音。</p><p>不得不承认，社会上很多工作是更加偏好男性的，有些人把这当成性别歧视，但是实事求是的说，同等条件下，雇佣男性确实比较保险一些，在我们的社会远远没能建立起完善的保障机制之前，无数的小公司，他们无奈只能选择能让自己更加保命的招人方法，这里面的具体原因我并不想展开，但是大家也应该能在网络上找到许多。在这方面的平等，仍然任重而道远。</p><p>之后的内容，其实很多是针对日本社会来写的，当然其中也有很多值得我们当前借鉴的内容，但是其实也不多。社会和文化的差异，其实是会盖过所谓的”普遍的性别差异“的。但是不得不承认，这本书中性别叙事的味道太浓，而且很多又是围绕着”性“展开的，给人一种世界除了性别之外就没有其它东西的感觉。而且整本书全是所谓”理论分析“，即使有一些例子，也极为牵强，并且没有给出任何具体的建议，有一种形而上学的味道。她不教你具体应该去做什么，只是告诉你，你是被压迫的，而你现在不必再被压迫了，去追逐你的自由吧。这是一种抽象化的表述方式，好处就是具有很大的煽动性，每个人都可以把自己对生活的不满装进去，然后上野就可以为他们指出一个明确的发泄对象——只要投身斗争中，似乎一切的苦难都可以消除。</p><p>诚然，人是故事组成的人，而上野的思路，就是提供了一个性别叙事，在这个故事里面，女性成了被男性压迫的对象，成了被客体化的人，而女性要做的就是反对男性的压迫。完全进入了性别叙事的视角当中后，你会变成”必须选边站，然后斗争“的状态，想找到出去的路，却发现无路可走。</p><p>说实话，作为一个男的，看完全书之后确实是觉得有一种说不清楚的难受的，委屈，还是被戳中内心了？不能否认的是这些情感或许都有。就像这本书的作者上野所说的一样，”这本书，对著者是不愉快的。同样，对于读者，无论男女，尤其对男性，会带来不愉快的阅读体验吧。“同时，上野还指出，”如果你读了这本书感觉不快，那无疑是因为你知道什么是厌女症。“这一点，其实我是不能苟同的，说出这句话，就如同说一个男人”出于本能会喜欢漂亮的女性“，所以就判定这个男人为强奸犯一样不合理。这也正是性别叙事的可怕之处，它让男人变成看到女生就喊xxn的人，让女生变成看到男人就认为是猥琐的强奸犯的人。而且这种趋势愈演愈烈，说老实话，令人厌恶。</p><p>”对于女人，女性主义是与自我和解之途。对于男人，与自我和解的道路，也不应该没有吧。和女人一样，那应该是与“自我厌恶”的斗争，不过，为男人指出道路的任务，已经不该由女人来承担了。“上野是一个很纯粹的从女性视角出发来看待事情的人，或者说从人的”女人性视角“来看待问题的人，我这么说的意思是她将”女人“的性别身份看得要盖过其它一切身份，她的作品中也渗透出浓浓的性别叙事风格。那么，到底如何摆脱这一种叙事呢，答案很简单，从其他叙事角度来看待这一切，或者完全忘记了这个故事，我对故事的一贯看法都是，如果一个故事切实提高了相信这个故事的人群的福祉，例如我相信科学主义，我确实在探索科学的过程中得到了快乐，金钱等真正重要的东西，那么这个故事是值得推崇的。而有些故事，很大程度上煽动了对立，结果对于相信故事的人群的具体福利没有任何实质性的提升，那么这并不是一个好故事。</p><p>所以，忘掉性别叙事，少关注那些网上的性别对立话题，如果真的想找到另一半，多去身边看看真实的人，这才是应该的。如果想自己一个人过，就更没必要去炒作了。真正会每天对着网上焦虑，或者在意所谓”输赢“的人，往往是那些想要，又不想付出的人罢了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 女性主义 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这不是科幻，这是即将到来的未来</title>
      <link href="/2023/11/11/%E8%BF%99%E4%B8%8D%E6%98%AF%E7%A7%91%E5%B9%BB%EF%BC%8C%E8%BF%99%E6%98%AF%E5%8D%B3%E5%B0%86%E5%88%B0%E6%9D%A5%E7%9A%84%E6%9C%AA%E6%9D%A5/"/>
      <url>/2023/11/11/%E8%BF%99%E4%B8%8D%E6%98%AF%E7%A7%91%E5%B9%BB%EF%BC%8C%E8%BF%99%E6%98%AF%E5%8D%B3%E5%B0%86%E5%88%B0%E6%9D%A5%E7%9A%84%E6%9C%AA%E6%9D%A5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>刚刚看完了Sam 在Open AI 开发者大会上关于ChatGPT 4 turbo的展示，看完之后，全身因为激动而颤抖不止，内心久久不能平静。</p><p>我想说，这绝对是整个21世纪最为重要的发布会之一。或许几十年后人们回过头来回望这整个世纪，会发现就连初代iPhone的发布会与之相比都将黯然失色。AI将给人类带来的变化，将会远超移动互联网给人们带来的变化，不过当然，移动互联网所产生的海量数据集是AI训练的必备原材料。</p><p>萨姆是个很直接的人，他的发布会全程干货，一点也不拖泥带水，但是所展示出来的每一项功能都让人震撼，现在的GPT4 turbo,已经是一个十分接近AGI的存在。他几乎可以自己查看一切信息，无论是文字，图像，网页还是文件，它能查看一切，并且理解一切。更为恐怖的是，他还能改造和创造一切，文字，美术，程序，甚至只要你开放了权限，你只要说一句话，他几乎可以为你完成一切。</p><p>这在几年前看上去还是童话一般的事情，而短短几年内就变成了现实。</p><p>毋庸置疑，大模型的发展速度超出了所有人的预料，他也将带来人类历史上最为伟大和深刻的革命。就如马斯克所说的一样，人类有史以来第一次在创造远比我们中最聪明的人还聪明的多的东西。</p><p>作为一个观察者，我很有幸生在了这个最为特殊的时代。毫不夸张的讲，今后几十年，将会是人类历史上最为重要的几十年，是决定了整个种族未来走向的几十年。就算是放眼整个地球几十亿年的生命进化史，这几十年也是其中最为关键的几十年。</p><p>从第一个具有复制能力的分子，颤颤巍巍地将它身边的其它分子变成和他一模一样的分子开始，生命的进化已经走了四十六亿年。经过了这无比漫长的岁月，而今第一次，将会出现结构与这些碳基生命完全不同的“生命”。奇点时刻已经不再是在科幻小说中讨论的话题。从今往后，AI将成为悬在全体人类头上的达摩克利斯之剑。这把剑何时会落下？会怎样落下？落下的时候，又会发生些什么？</p><p>没人知道这些问题的答案。</p><p>但是答案似乎又是肯定的。这把剑最终会落下，疯狂进化的大模型，如果在未来执掌了整个人类社会的运行，当它们复杂到没有人能控制，还用着几百年前大脑思考问题的人类，真的能与之抗衡吗？</p><p>也许这些问题是杞人忧天，也根本不会影响我们拿着微薄的收入，属于那些和我们这些“普通人”完全沾不上边的东西。其实不然。移动互联网的疯狂扩张已经证明了一切。几千年前，蔡伦第一次改进纸张时，这项意义深远的发明经过了几乎一千年才传播到了欧洲诸国，人们开始用这种无比便利的材料记录文字。到了古登堡发明印刷术，这项同样伟大的发明在之后几个世纪里重塑了我们几乎所有观念，并且打开了科学的大门。再到后来，有线电话，无线电报……十几年前，当史蒂夫·乔布斯拿出那一块“玻璃”的时候，就连看似最专业的业界人士也对其表示不屑。但是这项看起来“很贵，和普通人的生活没什么关系”的东西，却在过去的十几年中极大影响了我们每一个人。今天，我们的社会早已不是烽火通信的时代，移动互联网将每一个人都前所未有地紧密联系在一起，不存在什么“杞人忧天”的事情，只有对这些东西真正感兴趣和不感兴趣的人罢了。</p><p>其实我也经常会想，知识这东西确实是一种诅咒，有时候知道的太多，反而担心的太多，还不如啥都不想地随波逐流地过完这一生。</p><p>但是已经太迟了。遗憾的是我就是对这些无比感兴趣的人。这些在有些人口中的”宏大命题“，我从小就一直在看，看了杂七杂八各种类型的书（尤其是一些科幻作品）的后果就是，整个人类的命运在我眼里并不是于己无关的事情。哪怕我现在深知自己只不过是小小的一块砖，对于人类文明究竟会如何发展这些问题仍然密切关心着。也许这是吃饱了撑着，但是我想说的是大家吃饱了干的事情都一样，找到让自己能有热情、开心的事情便好。</p><p>其实人类很早就提出了这些问题，最为有名的就是阿西莫夫提出的机器人三定则。但让我没有想到的是，初高中才开始看的东西，才没几年，就成了我们即将面对的问题了。而且这个问题甚至远比阿西莫夫所想象的还要大的多。事实证明科技的发展已经超出人类想象的极限了。</p><p>不过对于我个人而言，GPT的出现其实是一件好事。</p><p>我一直都有一个梦想，那就是刀剑神域当中，爱丽丝所在的那个世界。那是一个完全虚拟的世界，包括它的居民，也是”虚拟“的。</p><p>这个世界要怎么去构建，两方面的技术都必不可少。一方面是脑机接口、虚拟现实技术，这项技术短期看来还是没有什么突破的可能。我认为今后几年将大力发展的将会是以OST技术为代表的增强现实技术，这都是后话了。脑机接口技术给我们带来的是一个崭新的世界，但是这个世界除了我们自己之外都是死的。要给这个世界带来生命，除了我们自己之外，必不可少的东西就是——真正的AI。</p><p>没错，比AGI更进一步，拥有自我意识的AI。</p><p>这看上去是科幻，但是随着大模型的发展，恐怕已经没有人能断言这是否是不会在未来的几十年，甚至是几年内发生了。</p><p>对于构建这个虚幻世界，虽然短期内还没有脑机接口技术的加持，但是这也足以给传统媒介（也包括VR,AR领域）带来极大的变革了。</p><p>我们将从事人类历史上最伟大的事业，那就是创造一个全新的世界。</p><p>这不是神话。</p>]]></content>
      
      
      
        <tags>
            
            <tag> ChatGPT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity中的Mathf.Lerp实现先快后慢接近与匀速接近</title>
      <link href="/2023/11/04/Unity%E4%B8%AD%E7%9A%84Mathf-Lerp%E5%AE%9E%E7%8E%B0%E5%85%88%E5%BF%AB%E5%90%8E%E6%85%A2%E6%8E%A5%E8%BF%91%E4%B8%8E%E5%8C%80%E9%80%9F%E6%8E%A5%E8%BF%91/"/>
      <url>/2023/11/04/Unity%E4%B8%AD%E7%9A%84Mathf-Lerp%E5%AE%9E%E7%8E%B0%E5%85%88%E5%BF%AB%E5%90%8E%E6%85%A2%E6%8E%A5%E8%BF%91%E4%B8%8E%E5%8C%80%E9%80%9F%E6%8E%A5%E8%BF%91/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Unity中提供了Mathf类以供计算使用。其中有一个插值函数Lerp,它的功能是：</p><p><strong>Mathf.Lerp(start,end,time) &#x3D; start + (end - start) * time</strong></p><p>并且，在右边值达到end时Lerp就不会再执行。</p><p>那么我们一般在哪使用这个插值函数呢？一般情况下我们都会在Update函数中调用它，来实现两种接近，一种是先快后慢接近，另一种是匀速接近，这可以用于敌人追踪我们或者其它需要用到一个物体接近另一个物体的情况。</p><p>我们先看如何实现先快后慢接近：</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">FollowCube</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Transform target;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> Vector3 pos;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> time;</span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        pos = <span class="keyword">this</span>.transform.position;</span><br><span class="line"></span><br><span class="line">        pos.x = Mathf.Lerp(pos.x, B.position.x, Time.deltaTime * moveSpeed);</span><br><span class="line">        pos.y = Mathf.Lerp(pos.y, B.position.y, Time.deltaTime * moveSpeed);</span><br><span class="line">        pos.z = Mathf.Lerp(pos.z, B.position.z, Time.deltaTime * moveSpeed);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.transform.position = pos;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在上述代码中，我们定义了target作为追踪的目标，我们将这个脚本挂载在需要追踪别人的物体上（比如敌人）。同时我们定义了moveSpeed用于控制追踪者的移动速度。</p><p>我们重点关注Update中的内容。注意到首先我们让pos获取了当前物体的位置信息，之后我们分别对其x,y,z方向上的值进行了插值函数运算，因此我们仅关注x方向即可。</p><p><strong>pos.x &#x3D; Mathf.Lerp(pos.x, B.position.x, Time.deltaTime * moveSpeed);</strong></p><p>这句代码的功能就是 pos.x &#x3D; pos.x + (B.position - pos.x) * Time.deltaTime * moveSpeed;这是什么意思？两边的pos.x相消去？当然不是，这是一条赋值语句，左边的为新的pos.x,而右边的是上一次Update结束剩的pos.x。用数列可以很好的理解这一点，例如左边是第n次Update后的x(n),那么：</p><p><strong>x(n) &#x3D; x(n-1) + {[B.position.x - x(n-1)] * Time.deltaTime * moveSpeed}</strong></p><p>我们不妨设B.position.x &#x3D; 10,moveSpeed &#x3D; 10;这表示目标在x方向上与我们的距离是10，但是请注意，假设我们的Update函数是以100Hz进行帧更新，那么Time.deltaTime &#x3D; 1&#x2F;100,也就是0.01s,moveSpeed &#x3D; 10,我们可以将上面式子化为：</p><p><strong>x(n) &#x3D; x(n-1) + {[10 - x(n-1)] * 0.1}</strong></p><p>这是一个典型的高中数列求解题，我们通过下述操作来得到x(n)的表达式：</p><p><img src="/2023/11/04/Unity%E4%B8%AD%E7%9A%84Mathf-Lerp%E5%AE%9E%E7%8E%B0%E5%85%88%E5%BF%AB%E5%90%8E%E6%85%A2%E6%8E%A5%E8%BF%91%E4%B8%8E%E5%8C%80%E9%80%9F%E6%8E%A5%E8%BF%91/01.png"></p><p>这样我们就得到了x(n)的表达式，我们可以发现这是一个幂函数。同时我们可以做出它的图像：</p><p><img src="/2023/11/04/Unity%E4%B8%AD%E7%9A%84Mathf-Lerp%E5%AE%9E%E7%8E%B0%E5%85%88%E5%BF%AB%E5%90%8E%E6%85%A2%E6%8E%A5%E8%BF%91%E4%B8%8E%E5%8C%80%E9%80%9F%E6%8E%A5%E8%BF%91/02.png"></p><p>这里的n随时间变化而增加，我们可以看到，这个函数明显是增长先快后慢，也就是导数先大后小的，而且无论n多大，x(n)永远是不会达到10的，这用极限的知识可以很容易去理解。那么这在我们的Unity中达到的效果就很明确了，就是让物体先快后慢地去接近另一个物体。不过有的人可能会问这不是永远到不了嘛，其实由于浮点数是有精度的，最后我们是可以近似看成到达的。</p><p>关于这里的moveSpeed的具体含义，大家可以具体去推导一下。</p><p>下面我们来看一下另外一种匀速接近是怎么实现的：</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">FollowCube</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Transform target;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Vector3 pos;</span><br><span class="line">    <span class="keyword">private</span> Vector3 TargetNowPos;</span><br><span class="line">    <span class="keyword">private</span> Vector3 startPos;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> time;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        time = <span class="number">0</span>;</span><br><span class="line">        TargetNowPos = target.transform.position;</span><br><span class="line">        startPos = <span class="keyword">this</span>.transform.position;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (TargetNowPos != target.transform.position)</span><br><span class="line">        &#123;</span><br><span class="line">            time = <span class="number">0</span>;</span><br><span class="line">            TargetNowPos = target.transform.position;</span><br><span class="line">            startPos = <span class="keyword">this</span>.transform.position;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        time += Time.deltaTime;</span><br><span class="line">        Debug.Log(time);</span><br><span class="line">        pos.x = Mathf.Lerp(startPos.x, TargetNowPos.x, time);</span><br><span class="line">        pos.y = Mathf.Lerp(startPos.y, TargetNowPos.y, time);</span><br><span class="line">        pos.z = Mathf.Lerp(startPos.z, TargetNowPos.z, time);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.transform.position = pos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们先不看if的内容，先看：</p><p><strong>pos.x &#x3D; Mathf.Lerp(startPos.x, targetNowPos.x, time);</strong></p><p>这里是让pos.x &#x3D; startPos.x + (targetNowPos.x - startPos.x) * time。</p><p>startPos是物体一开始的位置（先假设我们不会中途改变它），targetNowPos是目标的位置，我们也假设从开始到结束我们都不去改变它。那么我们可以看出，这个式子中的变量只有time一个了。我们在每次Update中对time执行：</p><p><strong>time +&#x3D; Time.deltaTime;</strong></p><p>我们可以看到，实际上time是随Update的次数线性增长的，也就是说time是随时间线性增长的。在Lerp函数中，当startPos.x + (targetNowPos.x - startPos.x) * time &#x3D; targrtNowPos后就会停止改变pos.x。这样我们看到的效果就会是物体匀速接近目标，并且到达后停止。</p><p>好，到这里看上去就圆满了，但是我们还有一个问题，就是当我们在程序开始之后如果移动了target或者我们的物体，我们就会看到，由于time已经增加了很久了，所以在公式</p><p><strong>pos.x &#x3D; startPos.x + (targetNowPos.x - startPos.x) * time</strong></p><p>中time不是从0开始的，这就会导致移动后pos.x和startPos.x是不同的，这时候赋值就会导致我们的物体出现瞬移的情况。为了避免这种情况出现，我们必须判断，如果target的位置改变了，我们就需要更新TargetNowPos,并且将Time置零，更新startPos为为物体现在的位置。</p><p>当然大家可能会问，当target不变的时候改变物体位置为什么不做判断呢？大家可以运行一下上面的代码，其实你会发现你无法改变物体的位置，因为即使你快如闪电，每一次Update之后就立刻将你的位置恢复到你修改前的位置了（准确来说应该是修改前位置再经过一次Update的结果）~</p><p>当然，其实我们一般不会使用Mathf中的Lerp插值函数去设置三维物体之间的跟踪，我们一般会将其用于做一些颜色的渐变之类的效果，因为事实上Mathf中的Lerp函数只能修改一维的量：</p><p><strong>Mathf.Lerp(float a,float b,float time);</strong></p><p>要修改position的话只能对其x,y,z分别进行修改，这是很不方便的。事实上Vector3类中为我们提供了一个专门用于三维向量的Lerp函数：</p><p><strong>Vector3.Lerp(Vector3 a,Vector3 b,float time);</strong></p><p>这个函数只要我们输入两个Vector3的结构体，就可以实现三维向量上的上述计算，对于三维物体的跟踪，我们一般都会选择后者，但是实现方法和Mathf中是一模一样的，下面是参考代码：</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">FollowCube</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Transform target;</span><br><span class="line">    <span class="keyword">public</span> Transform A;</span><br><span class="line">    <span class="keyword">public</span> Transform B;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Vector3 startPos;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> time;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Vector3 TargetNowPos;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        startPos = B.position;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//1.先快后慢</span></span><br><span class="line">        A.position = Vector3.Lerp(A.position, target.position, Time.deltaTime);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.匀速</span></span><br><span class="line">        <span class="keyword">if</span>(TargetNowPos != target.position)</span><br><span class="line">        &#123;</span><br><span class="line">            TargetNowPos = target.position;</span><br><span class="line">            time = <span class="number">0</span>;</span><br><span class="line">            startPos = B.position;</span><br><span class="line">        &#125;</span><br><span class="line">        time += Time.deltaTime;</span><br><span class="line">        B.position = Vector3.Lerp(startPos, TargetNowPos, time);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意这个脚本不是挂载在物体上的。</p>]]></content>
      
      
      <categories>
          
          <category> unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>16bit的梦想</title>
      <link href="/2023/10/22/16bit%E7%9A%84%E6%A2%A6%E6%83%B3/"/>
      <url>/2023/10/22/16bit%E7%9A%84%E6%A2%A6%E6%83%B3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>于我而言，我心中最重要的番剧都出现在我的初中和高中时代，比如巨人、CL和KON。一方面是这些作品确实十分优秀，后来者很少有能超越的，但是更加重要的是，这些作品确实出现在我“最需要的时候”，例如KON五个人和我截然不同的梦幻高中生活就支撑了我整个高三，而CL带给我的情感也填充了根本不和女生接触的这几年。但是说实话，已经很久没有出现过这种“正是时候”的番剧了。</p><p>这次的16bit，却给我带来了当初的感觉。</p><p>说老实话，今年一整年，从年初开始就非常不对头，对于未来的迷茫与恐惧，内心的矛盾，这些东西无时无刻不折磨着自己。但是在经历了这么多之后，回首看去，应该说一切都是值得的。</p><p>从一开始蹒跚学步，到现在静下心来认真钻研Unity,纠结考研的困扰…当一切尘埃落定，我也终于明确了去读个游戏设计研究生的目标，回望我过去几年，甚至是过去的20年，我认为这个抉择无愧于自己。</p><p>16bit，一部讲述游戏制作人故事的番剧，让我在内心深处产生了共鸣。</p><p>这会是一条漫长的道路，漫长的根本看不见头。</p><p>但是令人高兴的是，那个头，很早很早之前，就在我的心中了。</p><p>加油吧，16bit的梦想。以后得多更新点技术文档了，争取今年之内把Unity整个给吃透。</p>]]></content>
      
      
      <categories>
          
          <category> 游戏，Project_16bit </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 16bit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工作伦理的诞生、消亡与幽灵——《工作、消费主义和新穷人》</title>
      <link href="/2023/10/21/%E5%B7%A5%E4%BD%9C%E4%BC%A6%E7%90%86%E7%9A%84%E8%AF%9E%E7%94%9F%E3%80%81%E6%B6%88%E4%BA%A1%E4%B8%8E%E5%B9%BD%E7%81%B5%E2%80%94%E2%80%94%E3%80%8A%E5%B7%A5%E4%BD%9C%E3%80%81%E6%B6%88%E8%B4%B9%E4%B8%BB%E4%B9%89%E5%92%8C%E6%96%B0%E7%A9%B7%E4%BA%BA%E3%80%8B/"/>
      <url>/2023/10/21/%E5%B7%A5%E4%BD%9C%E4%BC%A6%E7%90%86%E7%9A%84%E8%AF%9E%E7%94%9F%E3%80%81%E6%B6%88%E4%BA%A1%E4%B8%8E%E5%B9%BD%E7%81%B5%E2%80%94%E2%80%94%E3%80%8A%E5%B7%A5%E4%BD%9C%E3%80%81%E6%B6%88%E8%B4%B9%E4%B8%BB%E4%B9%89%E5%92%8C%E6%96%B0%E7%A9%B7%E4%BA%BA%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在当今社会，一个人的立身之本是什么呢？</p><p>一份工作，一份好工作，一份收入很高的工作。</p><p>这似乎已经成了每个人的共识，而且并没有任何问题，一份好的工作带来更高的收入，这意味着我们可以购买更多的东西，变得更加幸福。</p><p>乍一看是没有任何问题的表述，但是问题在于，这二十年来，我们的经济总量几乎翻了十倍，但是平心而论，我们真觉得我们比以前幸福了十倍吗？</p><p>我们当然不会否认科技进步、经济增长给人类带来的巨大进步，但是问题在于，我们永远不能弄反主次关系，科技是为了人类这个种族而发展起来的，是用来服务人类的存在。但我们很遗憾地发现，在当今社会中，技术似乎变得开始有自己的想法，而不甘愿只当人类的保姆。换句话说，技术的发展是出于技术自身的需要，而不再是人类的需要。我们用着性能越来越高的产品，并且将其视之为理所当然。购买新产品成为了快乐的源泉，不论产品到底能给我们带来什么——追着最新款购买就是了。事实上，我本人就是典型的这种人。或者按照本书的叫法，已经完全是一个消费主义社会的人了。</p><p>让我们把目光拉回几百年前，那时候的人们，还没有什么“消费者”的观念，只是自己种着田，产出一些粮食，进行一些交易。明天吃的粮食不会比今天更好，明天穿的衣服不会和今天的有什么两样。这就是传统的农业社会。</p><p>转折点发生在工业革命。科学技术的进步在人类历史上第一次改变了农业社会占据主导地位的局面，经济的增长变得依靠工业生产而不再是农业，大工厂取代了农田，他们将向人们提出新的要求——这也就是所谓<strong>“工作伦理”</strong>的诞生。</p><p>一个很简单的道理，在工业生产初期，资本家们需要巨大的劳动力，一个拥有很高“工作素质”的人，能够为他们完成工业生产的人，就成了他们最为渴望的东西。随着资本主义的快速发展，资本家们的要求就逐渐演变为全社会的要求，将这个要求披上一层道德的外衣，便是我们今天的“工作伦理”。早期的工作伦理认为，每个人都有劳动能力，人们在工作之中变得崇高。工作伦理希望尽可能将所有人都纳入工厂生产当中，认为这是每一个人都应当去做的。而对于有能力却不去工作的人——尤其是穷人——那些吃不起饭，没有任何收入来源的人，工作伦理会给予其最大的谴责。通过工作来改善自己的生活状态，似乎成为了全社会的共识，一个人的工作，成了这个人在社会上最大的身份象征。</p><p>但是矛盾随之而来。也许会有极少数人喜欢工作，但他们喜欢的可能往往是工作带来的其他，例如地位的提升或者创造性的工作。普遍而言，人们绝大多数都不喜欢他们的工作。这很好理解——工厂中的工作，人们各司其职，各自只负责一部分内容的重复工作，绝大多数人根本不理解他们所做的事情会带来工资以外的任何价值。而随着资本家压榨的增加，就连那唯一的工资价值也愈加减少，工作时长却从不见少。工作本身的反人类性最终导致了上个世纪轰轰烈烈的工人运动，工人们为了夺回他们的自由而起来反抗资本家们，他们为自己争取了更少的工作时间与更高的薪资。</p><p>时间进入二十一世纪，随着各种技术的快速发展和全球化，资本家们发现，生产再也不需要依靠那么多的劳动力，那些曾经被工作伦理所培养起来的人们，现在大多数成为了“无用之人”，今天各大公司的疯狂裁员行为，无疑印证了这一点，我们不需要那么多人，就可以生产出巨量的产品。问题从没有劳动力生产变成了怎么把生产的东西全部卖出去，于是我们的社会从生产者社会变成了消费者社会——资本家需要的不再是更多的生产者，而是能购买更多产品的消费者。刺激消费成为了他们的首要目标，一个会花钱的人才是对社会最有用的人，对于工作的崇拜变为了对金钱的崇拜，不论你是干什么的，有钱、拥有巨大的消费能力就是最好的人。对于资本家们来说，消费者最好不要有任何延迟满足，最好买完东西之后立刻就盼望着购买下一个产品。</p><p>矛盾就在此处。一方面，资本家渴望优秀的“消费者”，另一方面，接受了工作伦理的大量劳动人群突然发现，他们一下子变成了没人需要的人，工厂里面没有他们的工作，并且他们本来就没有收入来进行各种消费。如果说在生产者社会中，穷人贫穷但是有用，还可以充当劳动力，那么在未来可以预见的是，将会出现大量的“贫穷但无用”的人，他们无法加入生产者的社会，但是同样也没有机会加入看似光鲜亮丽的消费者。这些人就是从生产者社会转变为消费者社会中，出现的被抛弃的“新穷人”。</p><p>在未来，或者不用等到未来，就单看现在，工作将会变得越来越难找，尤其是在快速发展的中国，新旧交替的速度之快，让人们根本难以适应，我们父辈们才刚把工作伦理熟记于心，我们就将面对着这个残酷的消费主义新世界。父辈们希望我们找到一个“好工作”，但事实上工作的意义将会被逐渐消磨，频繁的更替工作将会变为常态，贫富差距将会持续拉大，也许最终我们都将成为这个社会无意义的穷人。而到时候，曾经的工作伦理存在的唯一意义就是代替资本家成为替罪羊——人们过不上好生活只是因为他们不够努力，找不到一份好工作。</p>]]></content>
      
      
      <categories>
          
          <category> 书评 </category>
          
          <category> 《工作、消费主义和新穷人》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 消费主义 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>哀而不伤——简评《葬送的芙莉莲》</title>
      <link href="/2023/10/04/%E5%93%80%E8%80%8C%E4%B8%8D%E4%BC%A4%E2%80%94%E2%80%94%E7%AE%80%E8%AF%84%E3%80%8A%E8%91%AC%E9%80%81%E7%9A%84%E8%8A%99%E8%8E%89%E8%8E%B2%E3%80%8B/"/>
      <url>/2023/10/04/%E5%93%80%E8%80%8C%E4%B8%8D%E4%BC%A4%E2%80%94%E2%80%94%E7%AE%80%E8%AF%84%E3%80%8A%E8%91%AC%E9%80%81%E7%9A%84%E8%8A%99%E8%8E%89%E8%8E%B2%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>“勇者死后，我开始爱上他。”</p><p>作为一位没看过漫画的动画党，就这四集（短片）的观感来说，这是一部相当平淡的作品。</p><p>所谓“平淡”，并不代表平凡。</p><p>故事的主角，芙莉莲，是一个活了一千年以上的精灵。不过不同于大多数作品中所描绘的老奸巨猾的千年妖精形象，我们的芙莉莲总是一副不谙世事的可爱模样，完全没有什么心机的样子。对于芙莉莲看来，由于拥有着极其漫长的时光，她对于时间的认知与寿命短暂的人类相比有着很大的差异。而这种对于时间的认知上的差异也决定了整部作品的基调（当然我还没看漫画，只对动画播出的内容做评价），整个短篇就像是浸透在芙莉莲的视角一般，站在芙莉莲的角度带着我们经历整个故事。</p><p>故事的开场就展示了芙莉莲和其他三位勇者一起打败了魔王之后返回城镇的画面。对于绝大多数冒险故事来说，这可能是结局的，但对于这个故事来说却是开始。在打败魔王后，有着极长寿命的芙莉莲继续外出旅游，搜集魔法。但是这一离开，就是五十年——对于芙莉莲来说，这五十年只不过是弹指一瞬间，但是对于其他三位伙伴来说，却是几乎整个后半辈子。五十年后，当曾经的讨伐魔王四人组再次团聚，其他三人都已经老去，而芙莉莲却依然是当初那个模样。在这次团聚后不久，伙伴之一的欣梅尔离开了。作为一同旅行了十年的伙伴，可以看出欣梅尔对于芙莉莲有着非同一般的情感，这在短片中芙莉莲的回忆中可以明显地感受到，但是在活着的时候他却什么都没说，只是默默地为芙莉莲保存了一根龙角五十年——这是他“最重要的伙伴”托付他保管的。但是对于芙莉莲来说，一切好像显得都非常平淡，一同旅行的十年也好，离开的五十年也好，都不过是她漫长人生的一个小小的片段。在这么“短”的时间，她根本没能好好地，更多的了解她的同伴们。在旷别半个世纪之后，再见已是阴阳两隔。看着入土的同伴，一种从来不曾在她生命中出现过的情感充斥着芙莉莲的心头——既然彼此的时间本就不同，为什么没能更加努力地去了解？</p><p>“总有一天，你会犯下大错，而开始想去了解人类。”</p><p><img src="/2023/10/04/%E5%93%80%E8%80%8C%E4%B8%8D%E4%BC%A4%E2%80%94%E2%80%94%E7%AE%80%E8%AF%84%E3%80%8A%E8%91%AC%E9%80%81%E7%9A%84%E8%8A%99%E8%8E%89%E8%8E%B2%E3%80%8B/01.png"></p><p>不论是千年前的师傅，还是一同旅行的同伴们，他们都显然看出来了芙莉莲内心隐藏的某种情感，那就是对于人类——这种在寿命上与她完全不对等的生物的爱，失去对时间的敬畏，后果也将是失去对爱的理解。但是她自己却浑然不知这一点。短片的最后，在师傅千年前的指引下，芙莉莲决定沿着当年的轨迹，再次走完四人一同走过的道路，去发现自己心中的这份感情。</p><p>这个故事最为巧妙的地方就在于，可以将芙莉莲的旅行分为两条线，一条明线是她此时此刻正在和费伦等人一起的旅行，而另一条暗线则是当初走过的路，以及对欣梅尔等人的感情。这两条线交织在一起，巧妙地将暗线埋藏在明线之中，在回忆中塑造人物，是一种十分高明的手法。</p><p>在故事一开始，作品就十分轻描淡写地描绘了勇者的死亡，这种令人感到悲伤的事情，却用这种平淡的笔墨去描绘，在此我们也能看出芙莉莲的态度——对于人类的死亡早已是司空见惯的常态，没必要去特别在意。所以说这整个故事就像是加了芙莉莲的滤镜一般，有一种“哀而不伤”的意境。“哀”在于，曾经的伙伴们都已经离开自己，曾经的孩童们都已经老去，而之所以不“伤”，是因为芙莉莲的旅途还在继续，还有费伦等伙伴的陪伴，他们还有着无限的未来需要去探索，死与新生交替，何尝不是生命的意义。在观看时，读者也不自觉地代入其中，仿佛跟着芙莉莲一起去寻找内心的情感一般，去面对“衰老，死亡，爱”这个终极命题的答案。</p><p>老实说，因为还没看漫画，对于故事的后续我也没有什么了解，只是听说后期作者发挥稳定，这样的话，我还是相当期待这一部“哀而不伤”的作品能给大家带来怎样的惊喜。</p><p><img src="/2023/10/04/%E5%93%80%E8%80%8C%E4%B8%8D%E4%BC%A4%E2%80%94%E2%80%94%E7%AE%80%E8%AF%84%E3%80%8A%E8%91%AC%E9%80%81%E7%9A%84%E8%8A%99%E8%8E%89%E8%8E%B2%E3%80%8B/02.png"></p>]]></content>
      
      
      <categories>
          
          <category> 漫评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《葬送的芙莉莲》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>主打的就是一个什么都体验一下——简评《不双修就去世》</title>
      <link href="/2023/10/03/%E4%B8%BB%E6%89%93%E7%9A%84%E5%B0%B1%E6%98%AF%E4%B8%80%E4%B8%AA%E4%BB%80%E4%B9%88%E9%83%BD%E4%BD%93%E9%AA%8C%E4%B8%80%E4%B8%8B%E2%80%94%E2%80%94%E7%AE%80%E8%AF%84%E3%80%8A%E4%B8%8D%E5%8F%8C%E4%BF%AE%E5%B0%B1%E5%8E%BB%E4%B8%96%E3%80%8B/"/>
      <url>/2023/10/03/%E4%B8%BB%E6%89%93%E7%9A%84%E5%B0%B1%E6%98%AF%E4%B8%80%E4%B8%AA%E4%BB%80%E4%B9%88%E9%83%BD%E4%BD%93%E9%AA%8C%E4%B8%80%E4%B8%8B%E2%80%94%E2%80%94%E7%AE%80%E8%AF%84%E3%80%8A%E4%B8%8D%E5%8F%8C%E4%BF%AE%E5%B0%B1%E5%8E%BB%E4%B8%96%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>呃呃呃，这游戏，大家懂的都懂，老绅士游戏了，不过我没下成补丁，而且本着就算是游戏也只能攻略一个的做法，毫无疑问这个要求你每30天就要和一个不同的妹子双修的游戏是不适合我的，所以我玩了三个小时（咳咳）就没玩了，所以就简单地谈谈这个游戏吧。</p><p>这个游戏给我的亮点有两处，第一处是它采用了穿透桌面的形式（QQ桌宠秽土重生了属于是），这应该是属于很老的技术了，但是因为太久没见了，用在游戏上面反而有点新鲜了。第二处就是和《火山的女儿》一样，采用的是回合制，每一轮可以选择不同的事情做（但是当然是远远不如女儿了，亏他还能卖这么贵，感叹黄U的力量）。比较让我感觉不错的应该是它设计的一些小游戏，尤其是那个掷色子计算的游戏，确实都是一些轻量并且有趣的游戏，我觉得这些轻量游戏在未来应该会成为这种养成类游戏的标配(当然可能早就是标配了但是因为我游戏了解的太少了所以不知道hhh),当然也可以作为设计轻量游戏时的参考。将同一种核心玩法，换个皮，稍微改动一下，设置一个新的情景，就能获得一款全新的轻量小游戏！</p><p>好了差不多就到这，再多说就不礼貌了。</p>]]></content>
      
      
      <categories>
          
          <category> 游戏杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《不双修就去世》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“谢谢你成为我的女儿”——简评《火山的女儿》</title>
      <link href="/2023/10/03/%E2%80%9C%E8%B0%A2%E8%B0%A2%E4%BD%A0%E6%88%90%E4%B8%BA%E6%88%91%E7%9A%84%E5%A5%B3%E5%84%BF%E2%80%9D%E2%80%94%E2%80%94%E7%AE%80%E8%AF%84%E3%80%8A%E7%81%AB%E5%B1%B1%E7%9A%84%E5%A5%B3%E5%84%BF%E3%80%8B/"/>
      <url>/2023/10/03/%E2%80%9C%E8%B0%A2%E8%B0%A2%E4%BD%A0%E6%88%90%E4%B8%BA%E6%88%91%E7%9A%84%E5%A5%B3%E5%84%BF%E2%80%9D%E2%80%94%E2%80%94%E7%AE%80%E8%AF%84%E3%80%8A%E7%81%AB%E5%B1%B1%E7%9A%84%E5%A5%B3%E5%84%BF%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>能有幸了解到这款游戏，是在刷IT之家时看到《火山的女儿》即将登录Switch平台的消息后，突然对这款国产养成类游戏产生了浓厚的兴趣。当然，我没有等到登录Switch平台的那一刻，而是趁着steam上打折，不到30元拿下。经历了10个小时的游玩后，通关了一周目，也颇有感受，在此写个简评来分享一下。</p><p>说实话，在上大学后，在steam上就没玩过国产游戏。而此次游戏也据说是两位游戏制作人的处女作，第一次制作游戏就能做出质量这么上乘的游戏，完全刷新了我对大部分国产游戏“只会套皮赚快钱”的刻板印象，让我感到我们的游戏确实已经有了很大的发展，在此必须要对这两位制作人献上我崇高的敬意。</p><p><strong>《火山的女儿》算是一款经典的养成类游戏，</strong>用三个字概括就是“养女儿”。玩家将扮演一位老父亲的角色，通过各种选择，包括为女儿安排课程，带女儿参加各种活动，购买物品等等，将女儿培养长大。乍一听好像是个很老套的游戏玩法，而事实上就是很老套，这种游戏题材在很多年前就有很多游戏做过了，但是我也可以很负责任地说：我都没玩过。对于我这种Z时代，或者大多数Z时代的人来说，我们可能确实很少接触这类题材的游戏，所以尽管《火山的女儿》在此类游戏中并不是开创性的，但也算第一次给我们带来了这种快乐。我想这也是这款游戏能爆火的原因。</p><p><strong>当然，除了“养女儿”的吸引力之外，精彩的立绘也是让我立马产生了入手的想法的另一大原因。</strong>不得不说，中世纪的背景加上这种温馨可爱的画风，以及游戏中精美的CG，就是抛开玩法其他不说，都是非常值得了的。画风不能说精致，但却有一种恰到好处的美感，和整体UI的设计结合的浑然一体，很戳我的审美。而且服饰也都非常精美（没错我就是大部分钱都给女儿买衣服买了的购衣狂魔），每一套衣服都有不同的风格，而且还有着不同的属性加成能力（又为多买衣服找到了借口）。</p><p><strong>在音乐方面</strong>，整个音乐的基调都是十分的温馨、缓慢的，除去一些战斗场景外，节奏都非常的平缓，虽然没有什么印象特别深刻的节奏，但是作为休闲游戏的配乐来说，还是十分应景的。</p><p><strong>当然游戏的核心还得是玩法和剧情。</strong>先说玩法，《火山的女儿》采用的并不是一种线性推进的玩法，而是将游戏划分为“回合制”，在每一个回合内，玩家可以通过自己的喜好完成一系列的操作，当然很多操作都会受到“行动点”和金钱系统的制约，如何合理地分配资源，将女儿培养长大，是玩家在这个游戏中所面对的最大问题，也是本游戏的核心玩法。</p><p><strong>当然，除了回合制之外，游戏中的许多“益智小游戏”也设计得十分巧妙，</strong>最能体现出作者特色的小游戏就是当演员选台词了，例如你需要在三局台词中选出“最能体现出角色绝望”的一句台词，好家伙直接把阅读理解送上了游戏属于是。当然，设计的确实不错，有挑战性，但又不至于是那么难的问题。我不禁想以后游戏是不是都可以直接改变初中高中的各种题目了。</p><p><strong>最后就是故事情节方面了，</strong>说老实话一周目玩完下来，这方面给我的感触并不是非常深，因为我玩游戏的大部分时间都直接一路SKIP了，而且我不跟攻略走触发的只是一个普通结局而不是“真正结局”，所以很多作者精心设计的暗示我都是没有发掘的，这些东西都是在通关一周目后在网上看到的。就我自己的感触来说，这个游戏有种“突然就结束了”的惆怅感，或者说是让我提前感受到了“女儿长大了，该离开父母了”的惆怅感和失落感。不过，在观看网上社区的讨论之后，各种“真结局”的信息又激起了我开启二周目的浓厚欲望。其实我一直觉得游戏的社区讨论也应该是游戏很重要的一环，原神就是一个很好的例子，一个人毕竟不可能一次玩完所有彩蛋，但是通过网上的视频和介绍却可以激起玩家继续玩下去的欲望。</p><p><img src="/2023/10/03/%E2%80%9C%E8%B0%A2%E8%B0%A2%E4%BD%A0%E6%88%90%E4%B8%BA%E6%88%91%E7%9A%84%E5%A5%B3%E5%84%BF%E2%80%9D%E2%80%94%E2%80%94%E7%AE%80%E8%AF%84%E3%80%8A%E7%81%AB%E5%B1%B1%E7%9A%84%E5%A5%B3%E5%84%BF%E3%80%8B/01.png" title="我的妮娜结局！"></p><p><img src="/2023/10/03/%E2%80%9C%E8%B0%A2%E8%B0%A2%E4%BD%A0%E6%88%90%E4%B8%BA%E6%88%91%E7%9A%84%E5%A5%B3%E5%84%BF%E2%80%9D%E2%80%94%E2%80%94%E7%AE%80%E8%AF%84%E3%80%8A%E7%81%AB%E5%B1%B1%E7%9A%84%E5%A5%B3%E5%84%BF%E3%80%8B/02.png" title="我的妮娜结局！"></p><p><strong>最后说一点不好的地方，</strong>就是这款游戏设计的和别人对话获取好感的功能实在是太让人难受了，这就导致我每一轮都得和所有人聊一次天，或许作者是想通过这样来把信息都灌输给我，但是U1S1下次还是设置个感叹号比较好，不然强迫症每次都得全部点一遍。</p><p>当然，对于该游戏我整体是非常喜欢的，特别是养女儿这个题材真的非常戳我。套用作品的原话，<strong>很感谢你能成为我的女儿！</strong></p><p><img src="/2023/10/03/%E2%80%9C%E8%B0%A2%E8%B0%A2%E4%BD%A0%E6%88%90%E4%B8%BA%E6%88%91%E7%9A%84%E5%A5%B3%E5%84%BF%E2%80%9D%E2%80%94%E2%80%94%E7%AE%80%E8%AF%84%E3%80%8A%E7%81%AB%E5%B1%B1%E7%9A%84%E5%A5%B3%E5%84%BF%E3%80%8B/03.png" title="二周目再见！"></p>]]></content>
      
      
      <categories>
          
          <category> 游戏杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《火山的女儿》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>极富打击感的经典大作——简评《任天堂全明星大乱斗》</title>
      <link href="/2023/09/26/%E6%9E%81%E5%AF%8C%E6%89%93%E5%87%BB%E6%84%9F%E7%9A%84%E7%BB%8F%E5%85%B8%E5%A4%A7%E4%BD%9C%E2%80%94%E2%80%94%E7%AE%80%E8%AF%84%E3%80%8A%E4%BB%BB%E5%A4%A9%E5%A0%82%E5%85%A8%E6%98%8E%E6%98%9F%E5%A4%A7%E4%B9%B1%E6%96%97%E3%80%8B/"/>
      <url>/2023/09/26/%E6%9E%81%E5%AF%8C%E6%89%93%E5%87%BB%E6%84%9F%E7%9A%84%E7%BB%8F%E5%85%B8%E5%A4%A7%E4%BD%9C%E2%80%94%E2%80%94%E7%AE%80%E8%AF%84%E3%80%8A%E4%BB%BB%E5%A4%A9%E5%A0%82%E5%85%A8%E6%98%8E%E6%98%9F%E5%A4%A7%E4%B9%B1%E6%96%97%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>如果说，要在2023年让你玩一款类似于童年4399的2D对战游戏，会觉得无聊、无趣，没什么创新点吗？《任天堂全明星大乱斗》交出了这样一份让人满意的答案。</p><p>虽然发布于2019年，但是这款游戏确实不论过去多少年都可以让人上头，完美的诠释了真正的快乐是不分大人小孩的（再次感谢只有父母和任天堂把我们当孩子了）这个道理。</p><p>首先，我确实不是一个老任的死忠粉，虽然很早就认识了任天堂，而且对其最著名的IP都早已烂熟于心，但是限于条件所困，其实一直都没怎么接触过老任的游戏（第一款玩的应该还是当时在手机上玩的盗版宝可梦绿宝石），虽然上高中的时候有同学有Switch并且有塞尔达，但我当时确实还没深切的感受到开放世界的乐趣，以致于我的开放世界初体验还是原神。所以这款游戏对我来说并不是一款粉丝向的游戏，因为我对里面的IP都没有什么特别的情感。</p><p>对我而言，这款游戏吸引我的地方有两点。首先就是多人对战，说实话，我了解这款游戏也是因为先在别人的机子上面体验过了多人对战的快乐，那种感觉就像是回到了童年，三四个人围着一台小小的电脑，在那小小的键盘上面挤在一起玩疯狂小人乱斗的时光。果然就算时光再怎么流逝，真正的快乐是永远不变的！</p><p>第二点就是出色的对战机制。先不用说这配合手柄震动的出色打击感，也不用提这及其带感的打击音效，就看这仅仅四个方向键，一个跳跃键，一个防御键再加上一个普攻键和一个技能键，及其简单，快速上手，却能被玩出花儿来。首先是各种技能的组合以及判定就够研究好久了，好上手，但是上限更高，所以说最好的游戏永远是返璞归真的。然后就是老任贴心地给每一个人物都设计了精巧并且十分合理的技能，最具有代表性的例子就是卡比，大家都知道在原版游戏里面卡比的能力就是吞了什么就能获得对应人物的技能，而老任甚至把这个技能带到了大乱斗里面，也就是说出多少个角色就得给卡比进行多少次改动，这种细节狂魔不得不让人佩服，这种做法也和王泪中的预料建造如出一辙，他真的我哭死。</p><p>在对战机制里面另一个不得不提的就是把血条改成了“架势条”，不再是以击杀而是以把对手打飞作为获胜条件，这样的设计颠覆了传统格斗游戏的传统，带来的效果非常的出色。首先就是，你并不知道什么时候能真正把对手打下去，这就意味着反杀的风险时刻存在着，而人的本质就是赌狗，搞不好前一秒你以为胜券在握，结果下一秒对方直接开大反杀。另外一点就是相比传统的血条，“掉出场外”这个条件使得老任可以在地图上设计更多的互动，因为杀死你的可能不一定是对手，而是神奇的地图，你需要一边兼顾和对手的战斗，一边留意不要掉落到地图外面。</p><p>总之，《任天堂全明星大乱斗》无疑是一款非常优秀的作品，但是对我而言却体会不到最大的乐趣——竞技。和别人一起玩毕竟是少数时间，大多数时间我都是一个人打人机，虽然等级9的人机确实有很大的挑战性，但是还是远远不如和真人打有意思。你问我为什么不和真人打？——这得问问Nintendo Online了。</p>]]></content>
      
      
      <categories>
          
          <category> 游戏杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《任天堂全明星大乱斗》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>特有的青春淡淡感伤——简评《在这苍穹展翅》</title>
      <link href="/2023/09/23/%E7%89%B9%E6%9C%89%E7%9A%84%E9%9D%92%E6%98%A5%E6%B7%A1%E6%B7%A1%E6%84%9F%E4%BC%A4%E2%80%94%E2%80%94%E7%AE%80%E8%AF%84%E3%80%8A%E5%9C%A8%E8%BF%99%E8%8B%8D%E7%A9%B9%E5%B1%95%E7%BF%85%E3%80%8B/"/>
      <url>/2023/09/23/%E7%89%B9%E6%9C%89%E7%9A%84%E9%9D%92%E6%98%A5%E6%B7%A1%E6%B7%A1%E6%84%9F%E4%BC%A4%E2%80%94%E2%80%94%E7%AE%80%E8%AF%84%E3%80%8A%E5%9C%A8%E8%BF%99%E8%8B%8D%E7%A9%B9%E5%B1%95%E7%BF%85%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>《在这苍穹展翅》是一部非常经典的社团青春恋爱故事向作品，里面的剧情可以说是非常的具有代表性，因为事故不能在继续骑自行车的男主，和同样因为事故不能走路的女主羽羽音小鸟邂逅，两人在同一所学校，加入滑翔机社，并且为了造出能在天空中翱翔的滑翔机的故事，看起来十分地古典，但我想这也正是这部作品依然能打动我的心弦的原因。</p><p><img src="/2023/09/23/%E7%89%B9%E6%9C%89%E7%9A%84%E9%9D%92%E6%98%A5%E6%B7%A1%E6%B7%A1%E6%84%9F%E4%BC%A4%E2%80%94%E2%80%94%E7%AE%80%E8%AF%84%E3%80%8A%E5%9C%A8%E8%BF%99%E8%8B%8D%E7%A9%B9%E5%B1%95%E7%BF%85%E3%80%8B/1280X1280.JPEG"></p><p>这部作品首先在画风上非常对我胃口，画风简单清爽，很有青春时期没有任何修饰的美感。特别是女主角羽羽音小鸟，看上去第一眼就是那种好像可以随处可见的路人女主一样，但是也正因此可以激发出每个人心中最青春美好的幻想。初来乍到，小鸟是一个非常不愿意与他人接触，看起来十分不懂礼貌的人，甚至说的许多话隔着屏幕都会刺耳，实际上在现实生活中，如果遇到这样的人，早就会让人讨厌了吧。在游戏中也是如此，绝大多数人都不和小鸟说话，这也进一步加深了小鸟与外界的隔阂。但是在一同生活的过程中，其实可以很强烈地体会到，小鸟身上那种迸发出来的青春的有活力的俏皮气息，不像是一个一直都很冷淡的人，而更像是一个原本活泼的人遭受了打击后而导致的。之后的剧情慢慢流淌，小鸟一直有一个在天上飞的梦想，而男主也被吸引，大家一起加入了滑翔机社，尽管过了好几年，也经历了不少的事情，当再一次看到这种经典的校园社团奋斗的故事时，我还是会感觉回到了高中时代那个静静地看着CLANNAD的时光，十分地美好，令人怀念。这种感情，可能过了很多年以后依然会让人感到温暖，感到浑身震颤吧。</p><p>我要特别说明一下后半段的剧情，这半段剧情我必须给予很高的评价，因为其中小鸟与家里以及其他人的矛盾一波三折，在代入进去作品后还显得十分合情合理（当然换成我现在这种老东西的视角来看，冒着风险去做这一件事情都会觉得有一些些不好了，终究是老了，心境也不像年轻人了），里面的几个动画CG的加入好多次让我以为游戏要结束了（也说明高潮部分做的比较不错嘛）。直到最后我都以为要是BE了，结果大家妙手回春，最后小鸟如愿以偿翱翔在了天际。</p><p><img src="/2023/09/23/%E7%89%B9%E6%9C%89%E7%9A%84%E9%9D%92%E6%98%A5%E6%B7%A1%E6%B7%A1%E6%84%9F%E4%BC%A4%E2%80%94%E2%80%94%E7%AE%80%E8%AF%84%E3%80%8A%E5%9C%A8%E8%BF%99%E8%8B%8D%E7%A9%B9%E5%B1%95%E7%BF%85%E3%80%8B/1280X12802.JPEG"></p><p>不过，虽然是同类型的作品，这部作品本身还是与CLANNAD有着很大的不同，我推小鸟线的时候最明显的感觉就是这部作品聚焦的是小鸟的改变与成长，主角更像是一个操心的老父亲，要将叛逆的女儿照顾好。还有一点就是，可能也是因为经历了一些，以往我可能会觉得小鸟这么好这么喜欢男主和她一直在一起吧！但是不可忽视的是小鸟的腿部是完全不能动的，而且除了到最后给了一个惊喜，在整部作品中，我们都是被告知小鸟以后一辈子都是要在轮椅上的。这确实让人心痛，尤其是作为伴侣来说，我发现我在整个游玩的过程中也会时不时地感受到这样一丝淡淡的忧伤与忧虑，这也许也是有了作品之外的经历后，在作品上体现出来的所谓的”大人的视角”吧。但不论如何，小鸟最后能够回归正常确实是皆大欢喜，哪怕在现实中根本不可能有这样的奇迹。但尽管如此，我还是希望，不要忘记作品给我们传达的希望，不要被现实的洪流整个压垮，最终变成自己最不喜欢的模样。</p><p><img src="/2023/09/23/%E7%89%B9%E6%9C%89%E7%9A%84%E9%9D%92%E6%98%A5%E6%B7%A1%E6%B7%A1%E6%84%9F%E4%BC%A4%E2%80%94%E2%80%94%E7%AE%80%E8%AF%84%E3%80%8A%E5%9C%A8%E8%BF%99%E8%8B%8D%E7%A9%B9%E5%B1%95%E7%BF%85%E3%80%8B/1280X12803.JPEG"></p>]]></content>
      
      
      <categories>
          
          <category> 游戏杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 《在这苍穹展翅》 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>blender学习笔记01</title>
      <link href="/2023/09/23/blender%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001/"/>
      <url>/2023/09/23/blender%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>没有错，拥有多个业务的干啥啥不行换活第一名的本屋主又开始拓展全新的业务了。</p><p>本次开始拓展的业务是blender的学习。</p><p>在该栏目中会持续跟进学习blender的过程，以及一些产出的展示（后话了，勿立flag）。</p><p>本次带来的是对于课程中所展示的戴珍珠耳环的少女的拙劣建模模仿以及渲染实景图。</p><p>以下为参照：</p><p><img src="/2023/09/23/blender%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001/20230922-201420.png"></p><p>以下为拙劣的模仿作品：</p><p><img src="/2023/09/23/blender%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001/%E7%8F%8D%E7%8F%A0%E8%80%B3%E7%8E%AF%E7%9A%84%E5%B0%91%E5%A5%B3.png"></p><p>有点奇怪，但还是要再接再厉QWQ。</p>]]></content>
      
      
      <categories>
          
          <category> blender </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blender </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《技术垄断》总集篇</title>
      <link href="/2023/09/23/%E3%80%8A%E6%8A%80%E6%9C%AF%E5%9E%84%E6%96%AD%E3%80%8B%E6%80%BB%E9%9B%86%E7%AF%87/"/>
      <url>/2023/09/23/%E3%80%8A%E6%8A%80%E6%9C%AF%E5%9E%84%E6%96%AD%E3%80%8B%E6%80%BB%E9%9B%86%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h1><ul><li>我们的发明只不过是手段的改进，目的却未见改善</li><li>如果某事能够做，那就应该做</li></ul><h1 id="章节"><a href="#章节" class="headerlink" title="章节"></a>章节</h1><h2 id="第一章-塔姆斯法老的批判"><a href="#第一章-塔姆斯法老的批判" class="headerlink" title="第一章 塔姆斯法老的批判"></a>第一章 塔姆斯法老的批判</h2><p>“他们接受的将是大量的信息，而不是老师的真传”——塔姆斯法老</p><p>在柏拉图的《斐德罗篇》中记载了<strong>埃及法老塔姆斯</strong>的故事，塔姆斯的朋友特乌斯发明了文字，并向塔姆斯炫耀，声称文字可以”增加埃及人的智慧，强化他们的记忆，找到了改善记忆和智慧的担保书”。塔姆斯提出了怀疑，”技艺发明人并不是评判发明利弊的最佳人选，只有使用者才能作出恰当的评判。识文断字的人可能不再使用记忆，而是成为健忘的人。他们接受的将是大量的信息，而不是老师的真传”。</p><p>塔姆斯的故事背后传达的是一个直到现在都很为重要的思想，那就是<strong>技术本身有其导向，而不受发明技术的人的控制</strong>，这在人工智能迅速发展的今天尤其重要。尽管特乌斯信誓旦旦地认为自己看到了文字的无限好处，但是他却没有办法让人们都用文字来去做他认为重要的事情。特乌斯希望人们用文字来记录和传播真理，却忽视了文字是否会代替真理本身。换言之，技术在被创造出来之后，事实上就不再受发明者的意愿而控制了，技术不是中性的技术，它会按照自己内部的属性去改变一切。</p><p>弗洛伊德说：我们的发明只不过是手段的改进，目的却未见改善。毋庸置疑，技术在过去几百年取得的成就让每一个人惊叹，新技术必然会源源不断的出现，这是不可否认的事实。所以，我们要做的，是暂时放下对于新技术的狂热，相对冷静、客观地衡量技术带来的利弊。也就是说，抛去手段，来仔细思考一下这些目的是否因为手段的改变而变得有所不同。</p><p>发明文字的人一定没有考虑到，文字会重塑我们的世界，而不仅仅是使“口头语言世界的智慧更为广泛地传播和更久地保存下来”。当然，文字做到了这些，但是事实上文字最后却改变了“真理”、“智慧”这些词汇原有的意义。或许在口头语言的时期，德高望重的老者记忆中的内容就是所谓的真理，但是文字出现后，有文字记载的内容将会取而代之。这些内容到底出自哪里根本无关紧要——重要的是，在这两者之间出现冲突时，哪一种会被认为是真理。或许文字的出现还不能明显地体现出这些差别，但是在古登堡时代，这一切将会被改写。空前数量的印刷品远超过了一个人能掌握的所有内容，并且彻底地改变了我们对于“真理”的定义。</p><p>上述分析表明，一种媒介不仅仅是一种媒介，新旧媒介之间的竞争（例如口头语言和文字，以及印刷文化）也不仅仅是媒介的竞争。我们应当意识到，<strong>每一种媒介都有一种意识形态偏向，而媒介之间的竞争本质上是背后的意识形态的竞争</strong>。在印刷机对手抄本发动攻击时，实际上还是背后的印刷文明对传统文明的攻击。每一种技术对于一些东西有着自己的想法，当他们与旧技术进行竞争时，实际上也是改变人们对于这种东西的理解的过程。现代一个典型的例子就是，iPhone改变了我们对于智能手机的定义。在iPhone出来之前，我们可能对智能手机有着天马行空的想象，但是iPhone出来之后，我们认为，这就是智能手机，或者说，智能手机就应该是这样——一块完整的电容屏，不需要其他多余的按键。</p><p>尽管有很多用于特定环境的技术改进，他们大多数只对某一特定领域的内容产生影响。不过在很多研究该领域的科学家看来，技术和自然界一样，也是有生态的，一项技术不会独立地被创造，它的出现将对整个生态产生影响。也就是说，一种新技术并不是什么东西的增减损益，它将在一定程度上改变一切。在现代，我们经常考虑的一件事是网课对于大学教育会带来哪些方面的改善或者坏处。但是这样做是毫无意义的。原因就在于，网课有可能重塑整个大学的教育体系（现在其实已经有很大的趋势了，我敢说对于绝大多数学生来说，看网课的时间实际上已经超过了在大学课堂上听老师讲课的时间），被重塑后的体系甚至可能会以网课为主，大学课程的设立将建立在辅助网课的基础上。尽管大学的体系目前看上去和几十年前似乎是一样的，但是并不是说没有这种改变的可能性。所以当我们把目光稍微拉远，就会发现之前的问题是没有任何意义的。大学认为大学生就应该按照学院的安排，按照时间来一节课一节课地按部就班的学习，但是网课不这么认为。网课认为大学生就应该随时随地，想什么时候学任何内容，就可以去学。</p><p>基于此，我们可以看到，技术已经在相当程度上改变了我们身边的一切，不仅仅是物质上，更包括我们日常的概念——也就是我们的世界观。跨越两千年，我们却更应该静下来倾听塔姆斯法老的告诫，因为我们已经来到所谓“技术垄断”的时代的十字街口。</p><h2 id="第二章-从工具时代到技术统治时代"><a href="#第二章-从工具时代到技术统治时代" class="headerlink" title="第二章 从工具时代到技术统治时代"></a>第二章 从工具时代到技术统治时代</h2><p>对于时代的分类我们已经司空见惯，例如石器时代、工业时代和钢铁时代等词汇从小就出现在我们的教材当中。清楚的分类可以清晰地体现出某些新事物的发现对于整个社会所造成的影响。同样，基于技术对人类文化的影响程度，我们可以把文化划分为三种类型：<strong>工具使用文化，技术统治文化和技术垄断文化</strong>。</p><p>一切<strong>工具使用文化</strong>的主要特征都是相同的，那就是发明工具的目的主要是做两件事：一是解决物质生活里具体而紧迫的问题（例如风车用来提水灌溉、碾磨谷物），二是为艺术、政治、神话、仪式和宗教等符号世界服务（例如教堂）。这两种工具的共同特点都是并不会侵害它们所进入文化的尊严和完整性。这些工具顺应发明者的思想，只为了发明者的目的而工作，它们不会有自己的想法和导向，而是遵循着发明者的意愿而工作。当然也有极少数工具会影响着人们的信仰，最典型的例子就是武士刀，围绕着武士刀构成了一套完整的武士道精神理念。但是，这些工具并不会被认为是独立自主的，它们所象征的精神都是人为规定，完全处于社会体制或宗教体制的管束的。武士刀自己不会让武士们起来反抗封建君主，要怎么做还是完全依赖于使用者的自由想法。这也是工具使用文化的社会的共同点。</p><p>西方<strong>技术统治文化</strong>始于中世纪的欧洲，那时出现了三大发明：<strong>机械时钟，古登堡印刷机以及望远镜</strong>。机械时钟始于修道院，本来是修士们为了确定每天敲钟的具体时间而发明的，但是修士们没想到的是这项发明最终却改变了他们自己的生活：他们现在需要根据时钟的时间同步进行起居修炼。到了1370年，查理五世让全巴黎市民根据皇宫的钟表时间来调整自己的作息生活。人们发现统一的钟表时间对于商业活动有着绝佳的好处。最后，本来被发明用于服务上帝的发明证明它自己本身更加偏爱金钱。</p><p>古登堡发明的印刷机以及伽利略发明的望远镜（当然，第谷和开普勒也没有望远镜，但是第谷自己创造的天文观测仪器也能观测到相当好的结果）都对中世纪的欧洲造成了前所未有的冲击。但是讽刺的是，无论是古登堡还是伽利略，他们本人都无意造成这种冲击，甚至会反对这种冲击。哥白尼是一位虔诚的天主教徒，他这一辈子只出版过一本书，那就是《天体运行论》。事实上哥白尼本人并不怕教会的惩罚，并且这本书在出版后几乎没受到教会的任何处分，这可能是因为哥白尼本人应该根本没想过要和教会对抗什么，他本人并不相信自己的研究成果会瓦解神学至高无上的地位。开普勒则更进一步。他虽然在科学上提出了开普勒三大定律，为后来的万有引力定律和整个物理学做了奠基性的工作，但是其本人却还是一个典型的中世纪人。但是有一点例外：开普勒认为神学和科学应该加以区隔，“我尊重教士，但是我在哲学上证明，地球是球体，有两极，在宇宙中小得微不足道，在众多的星球之中快速漫游。”</p><p>开普勒的观点提出了技术统治论的基石：区分道德价值和思想价值。开普勒本人是路德教徒，在他被罗马教廷赶出教门后仍然真诚地信仰着上帝，他把太阳作为圣父和造物主的象征。但是虽然他本人也对计算得出的椭圆形轨道很不满意，但是他仍然不为了自己的信仰而修改自己得出的结果。这也体现了科学和神学之间不可调和的矛盾，而将这种矛盾更为清晰地表现出来的人是伽利略。伽利略发明了真正意义上的天文望远镜，而他所观测到的结果将成为整个神学的痛苦不安之源。伽利略虽然是虔诚的天主教徒，但他明确对《圣经》表示异议，认为教士没有资格对自然现象发表意见。</p><p>伽利略1642年去世，这一年艾萨克·牛顿出生。虽然牛顿本人更是一位虔诚的天主教徒，但是牛顿所点燃的名为现代科学的火焰却在接下来的几百年里燃烧了整个旧世界。他们不能想象一个没有上帝的世界，但是他们所构建的科学全部只关乎真理，而不关乎权力。他们本人是工具使用文化时代的人，但是他们却为技术统治论奠定了基础。</p><p>培根可以说是技术统治时代的第一人，尽管他本人几乎没有从事任何科学领域的研究，他提出的一系列科学的方法却比任何人更接近现代。他十分明确技术对于文化的影响，在《新工具》中提出了经验主义的哲学方法，他要论证<strong>建立在观察和实验基础上的科学归纳法才是我们认识世界最好的工具</strong>。培根十分重视发明对于社会和文化的影响，并且提出了很多促进科学和发明的主张，他的很多主张在今天已经成为了科学事业的基石。培根是技术统治时代的第一位学者，但是许多人加入他的行列还要等待很长的时间。但是趋势一旦形成，就再也不可逆转，人们逐渐形成了“知识就是力量”的理念，作为知识结晶的各种发明创造受到人们的热烈欢迎，相信教会力量的时代一去不复返，欧洲乃至整个世界走上了技术统治论的不归路。</p><p><img src="https://d08cdkzlxr.feishu.cn/space/api/box/stream/download/asynccode/?code=YzM1MjhjNzZhMzkzM2FlMDllNDJiMWNjNTgwODMyZmVfYTRObnJncHpyQmRxZmR3VGhFaTNBcURFVklKSEJMYlZfVG9rZW46WWlFUmI1TjNNb1A5M0x4TWxtemNsS3RZblNiXzE2OTU0NDYzMzM6MTY5NTQ0OTkzM19WNA" alt="img"></p><h2 id="第三章-从技术统治时代到技术垄断时代"><a href="#第三章-从技术统治时代到技术垄断时代" class="headerlink" title="第三章 从技术统治时代到技术垄断时代"></a>第三章 从技术统治时代到技术垄断时代</h2><p>到十八世纪末，技术统治论已经步入坦途，而十九世纪的一系列广为人知发明将开始重新塑造我们的世界。这些发明包括留声机和电报（19世纪30年代）、转轮印刷机（40年代）、打字机（60年代）、跨洋电缆（1866）、电话（1876）、电影和无线电报（1895）。19世纪人们发明了“发明”本身。在这时期人们产生了两个理念：一是如果某事能够做，那就应该做。另一个是我们不再将人视为上帝的子民，而是视为消费者，这无疑是技术进步的最佳动机。</p><p>在技术统治时代，各种技术的出现冲击了旧的社会体制，直至其瓦解，并在其上诞生了更适合各种技术发展的资本主义社会。但是传统世界观却并没有完全消亡，原因十分简单，技术统治时代的公民知道，科学技术并不能给人提供生存的哲学依据，它们仍然只是我们用来完成各种工作的得力助手，所以他们仍然紧守着父辈们的哲学。尽管宗教所赖以生存的自然观已经坍塌，但人们仍然从中寻求生存的意义，他们仍然继续相信工具应当是自己的奴仆，而不是主人。这在今天可能更为明显，今天AI以前所未有的势头冲击着各个领域——尤其是在不久前还被人们认为是只有人类才能做的领域，人们开始游行抗议AI，这在以前是不可想象的，技术不仅不再是人们的奴仆，甚至打算完全取代这些曾经的主人。</p><p>技术垄断兴起后，传统世界观完全消失，因为技术垄断清楚任何替代它的选择。赫胥黎的《美丽新世界》对此做出了精彩的描述，不断进步的技术有其自己的思想，它重新定义宗教、艺术、家庭、政治和一切，并且清除任何其他选择。就在前几年，我们还认为AI不可能进入人类最宝贵的艺术创作领域，但是事实却证明，AI可以并且做的相当好，或许几年后我们对艺术创作的定义就将完全改变，原来的艺术创作者们突然发现自己变成了辅助AI创作的机器。</p><p>在几百年前的中国，人们可以知道，自己从出生到死去，社会基本上不会发生什么变化，尽管有，那也只是因为掌权者的改变带来的自然更替，换句话说社会完全在统治者的掌控之下，我们可以通过掌权者的想法知道社会的大致走向——掌权者的无能也是一种体现，起码我们能知道社会又要开始不安定，宫廷又会出现权力斗争。但是在今天却完全不一样。看似是统治者们在掌权这个社会，但是说实话没有任何人知道未来会是怎样的，我们完全被技术的发展拖着走，所谓的政策大多数是某些技术已经掀起了轩然大波后做出的反应。<strong>任何技术都能代替我们思考问题，这是技术垄断论的基本原理之一</strong>。</p><p>美国是第一个进入技术垄断时代的国家，他们的国民性也十分适合这种文化。泰勒在《科学管理原理》中明确提出管理的本质意义就是要解决劳动生产率最大化的问题，他认为人的批判并不稳妥可靠，因为其中主观性的内容太多。不能计量的东西要么不存在，要么没有价值。在量化的科学管理下，工人自己不必思考问题，而只需要按照按照工厂的标准去行动，而所谓工厂的标准，实际上就是技术能够最大化发挥的标准，本质就是技术自己“思考”出来的标准。</p><p>过去一百多年的学术研究冲击使得原有的信仰体系完全消亡，尼采宣布“上帝已死”，而达尔文的进化论更是给几千年的神学画上了句号。我们只剩下一个可以信任的东西，那就是技术。虽然我们不知道灵魂、天堂和神灵到底是怎么回事，但是飞机可以飞翔，抗生素可以治病，计算机能够毫不出错地完成任务——只有人会犯错。技术高歌猛进，传统信念贬值，这一切都将技术统治文化推进到了技术垄断文化。</p><h2 id="第四章-难以把握的世界"><a href="#第四章-难以把握的世界" class="headerlink" title="第四章 难以把握的世界"></a>第四章 难以把握的世界</h2><p>“任何愚蠢至极的思想都会有人相信，你总是能找到一个教授相信这样的思想。”——门肯</p><p>在当今社会，互联网已经成为了我们了解社会的最大来源。尽管我们本身并未接触过的知识，如果其中展现出了一些所谓的科学研究手段，我们就会深信不疑地奉为真理，尽管得出的结论可能是任何作用都没有的屁话。造成这一现象的原因是，技术的运行和上帝之道一样，即令人生畏，对于绝大多数人来说，又十分神秘莫测。</p><p>在技术统治时代的早期，学校成了技术统治文化的第一种世俗管理机构。学校使一些信息的流动变得合法化，也就是那些他们认为学生需要掌握的知识，而另外一些被认为是无关紧要的信息被排除在体系之外，尽管在这方面可能会有许多书籍，但对于绝大多数学生来说他们并不会接触这些信息。这样，学校就成了管理信息生态的手段，它在本质上是一种信息免疫机制，启到了筛选信息的功能。</p><p>19世纪电报的发明改变了这一切。在电报之前，信息的流动速度只能和火车一样快，每小时56千米。在这个时期信息只能在局部范围内引起人们的兴趣，也只能用来理解和解决具体的问题。但是电报的发明使得运输和通信首次分离开来，电报技术产生了不受语境拘束的信息，几百千米外的故事忽然就变成了触手可及的信息，电报第一次把信息变成了商品，在此基础上报纸应运而生。摄影技术的诞生使得图像不只是文字的补充，更有取代的倾向，成为我们理解现实的主要手段。到了20世纪，无线电报、摄影技术等促成了广播时代的到来。而今天，个人计算机（包括移动手机，作者生活的年代还没有出现今天的智能手机）的出现将人类带入了一个全新的时代，信息的产生和流动速度空前提高，信息杂乱无章的出现，并不指向具体的人。</p><p>在技术垄断时期，一个典型的问题是，技术垄断的信息免疫机制是难以操作的机制。对于互联网上海量的信息，我们没有什么免疫机制，任凭算法推荐将我们带入信息的茧房之中，在过剩的信息中完全迷失。信息不再是帮助我们解决问题的朋友，而是变成失控的猛兽，将整个文化拖下水，这正是这个难以把握的世界的开端。</p><h2 id="第五章-崩溃的防线"><a href="#第五章-崩溃的防线" class="headerlink" title="第五章 崩溃的防线"></a>第五章 崩溃的防线</h2><p>由此可见，给技术垄断下定义的一个办法就是说，抵御信息过剩的防御机制崩溃以后，社会遭遇的后果就是技术垄断。技术产生的信息压制了文化，某一种文化试图把技术作为工具传播自己，但事实证明，技术有自己偏爱的文化传播趋势，任何强加于此的文化终将失败。当我们无法界定什么信息是有意义或者无意义时，信息就成了混乱之源而不是秩序之源。我们只能跟着技术自身的趋势而走。</p><p>在技术统治时代，除了学校之外，家庭也是一个典型的信息控制系统。父母的作用就是要排除损害家庭宗旨的信息，由此界定了儿童的定义，这在作者的另一本书《童年的消逝》中已经有了很详细的讲解。当电视和互联网变成了孩童获取信息的主要来源，孩子们获取信息的手段实际上就已经和大人们没有任何区别，也就是说失去信息控制的直接结果就是造成了“童年的消逝”，当今人们所感叹的“早熟”，实际上就是这种结果的具体体现。</p><p>任何理论得到过多的信息支撑时，这些信息基本上就失去任何意义了。因为理论的功能就是过分的简约，以此来帮助人组织、掂量和排除信息。而当我们日复一日地获取着一些支撑这些理论的信息时，就是在做无谓的重复。因为我们只需要理解并使用的理论本身却给我们增加了过多不必要的时间浪费。</p><p>对于信奉《圣经》的人来说，《圣经》就是最好的信息防御机制，它告诉他们什么信息是有用的（如福音书），让他们避开了“有害的信息”，于是他们的行为就获得了意义，并且目的明确，而且他们相信自己的生命有了道德权威，并且有了意义。相反，如果一种文化的理论不给道德领域可以接收的信息提供指引，而放任信息自由流窜，那么我们就可以将其视为技术垄断的文化。在今天，马克思主义正面临着技术垄断文化的挑战。在过去一个半世纪里，马克思主义的核心理念，即“一切制度性灾难和压迫都是阶级冲突的产物，因为人的意识是由其物质处境决定的”。但是今天海量的信息似乎在向我们展示，资本主义国家的工人似乎过得相当事宜，许多美国政客确信可以用自由民主取代马克思主义。</p><p>在原有的防线崩溃后，要控制技术产生的信息，最终也只能求助于技术手段。一种最为重要的手段是官僚主义。官僚主义在原则上是一种技术工作的协调机制，意在减少需要加工的信息量，排除细枝末节，只看要点来做出决策。官僚主义只有一个隐形假设：效率原则上是一切社会制度的目标，而它将为了达成效率不择手段地前进，而不考虑其他问题。这十分符合技术发展的气质，既然有能改进的点，有能提高效率的方法，那我们就应该去做。</p><p>但是，当官僚主义开始接管政治、社会和道德时，问题的严重性就会开始显现。官僚主义者往往不关注全局，他们只关心决策在多大程度上影响官僚体制的运行效率。官僚主义者往往对全局知之甚少，但是却认为自己可以并且应该统治一切。</p><p>专家的角色就是专注于一个知识领域，筛选现有的知识，剔除与问题无关的知识，并利用剩下的知识来解决问题。但是这背后隐藏着一个巨大的问题，当技术手段不能解决问题时，当我们并不需要考虑效率时，再继续套用这种方法的后果是灾难性的。这多见于与人交往的场景。例如在育儿上是不会有专家的，那些所谓的专家只是得到了一些所谓的技术方法，能够帮助父母更“好”的培养孩子，但实际上他们可能改变不知道培养的目的是什么，他们做的只是让孩子在最少的时间内记住过多的东西。</p><p>技术垄断时代的人们希望反过来用技术手段来控制信息，但是实际上这种行为是行不通的，具体原因将在下一章中讲述。</p><h2 id="第六章-机器意识形态：医疗技术垄断"><a href="#第六章-机器意识形态：医疗技术垄断" class="headerlink" title="第六章 机器意识形态：医疗技术垄断"></a>第六章 机器意识形态：医疗技术垄断</h2><p>本章主要考虑在医疗技术领域的技术垄断，由此揭示出技术垄断在一些方面的典型特征。</p><p>在技术垄断时代到来前的几千年里，医疗诊断的方式其实没有什么明显的变化。在这个阶段医疗诊断的特征就是医生与患者直接交流，以患者的主诉作为诊断的基础，同时根据医生的询问和观察。这原因很简单，因为对于大部分疾病（尤其是内科），医生根本无从得知患者体内到底是个什么情况，也许中医有一些所谓的摸动脉的方法，但那也是大多数基于医生的经验判断。</p><p>最早发明的医疗器械（这么说并不准确，因为广义上的医疗器械甚至要早于文字的发明）是1816年法国医生雷奈克发明的听诊器。尽管这是个很简答的发明，却具有着重要的意义，不仅仅是因为其具有比较广阔的应用前景，更重要的是这是一个典型的技术成为媒介，插在患者和医生中间的例子。自此，医生得到的不再是直接获得的信息，而是通过技术（听诊器）后的信息，尽管我们知道这实际上就是对原始信息进行简单处理（放大）后得到的信息，但是实际上这已经拉开了技术统治医疗乃至垄断的序幕。听诊器促成了两个重要观点：1.医学是研究疾病的，而不是研究病人的；2.病人所知不可靠，机器所知才是可靠的。听诊器把病人和疾病分隔开来（因为疾病在一定程度上可以视作依附于听诊器声音而存在的事物），并且把病人的主观倾诉拒之门外。在听诊器之后，医学稳步走上了几乎完全依靠技术的道路，1895年X光的发现以及在医疗上的应用更加证实了这一点。自此医疗诊断进入了一个新的时代，其特征是医生通过医疗器械间接与患者的经验和身体交流。</p><p>但到了现代，情况又出现了大变化。随着医生们越来越多的使用技术，疏远了患者。而且另一个原因是，患者对于技术的信任程度也与日俱增，即使医生不使用技术，患者也会主动要求技术检测。不可否认的是，新技术拯救了不计其数的生命。但是我们需要考虑的一点是，有多少使用新技术的人真正知道自己是否需要使用新技术呢。我举临终关怀来说，如果一个癌症晚期的人只能活一个月了，但是凭借着现代手段可以活四个月，但是这四个月将伴随着极大的痛苦。诚然，是否使用这些技术取决于我们自己，技术看上去只是给了我们其他的选项。但是当患者自己都不知道该怎么办时，那么技术就会做出自己的选择。</p><p>老实说，对于医疗方面我自己也没有什么经验，所以对于本章部分内容以及我自己写的部分内容还是保持怀疑的态度，例如对于医生和患者之间的关系的例子。不过，事实上我更感兴趣的是未来AI作为代替医生来治疗的角色出现时，我们能否更加清晰地看出这一路上医生是如何逐渐演变的。</p><h2 id="第七章-机器意识形态：计算机技术垄断"><a href="#第七章-机器意识形态：计算机技术垄断" class="headerlink" title="第七章 机器意识形态：计算机技术垄断"></a>第七章 机器意识形态：计算机技术垄断</h2><p>在作者生活的年代，个人计算机刚开始普及，互联网也刚刚兴起，一切都处于萌芽之中，但是作者却可以凭借敏锐的目光捕捉到这一趋势，我是非常佩服。当然，在移动互联网已经普及的今天，作者所言更加值得我们深思。</p><p>在所有技术当中，计算机可以说是一种最为独特的存在。首先在于计算机技术的用途几乎数不清，计算机几乎可以用于现代社会的所有方面。而且计算机技术深深整合进了其它机器当中，也就是现在熟知的嵌入式。作者在书中统称计算机技术，实际上就是基于数字电路技术所衍生出来的一套庞大的机器运算体系。</p><p>在过去几十年里，计算机技术蓬勃发展，并且在曾经人类最自豪的领域一次又一次地战胜人类，到近几年chatgpt的横空出世，人们终于认识到，对于计算机来说几乎没有什么是达不到的了。在这发展过程中，人们对计算机也产生了不同的看法。人们相信，凡是计算机能够做的，计算机都应该去做。现在看来计算机还是我们的工具，但是当计算机发展到一定程度，当人工智能再次取得突破性的进展时，我们是否还能心安理得地自居主人，使用着这些“工具”呢？</p><p>麦卡锡说“我的恒温器有三种信念——这里太热，这里太冷，这里不冷不热刚刚好。”这句话实际上对“信念”下了一个新的定义，这里不再把信念看作人独有的心理活动，而是将其扩展。这一切的背后就体现出人们对于计算机技术最终是否能够达到人类智慧的怀疑。</p><p>老实说，也许是年代的不同，这一章作者对于计算机技术带来的垄断结果的描述我并不苟同。确实有垄断，但是我却更加趋向于作者在前作《娱乐至死》中所描绘的场景。当然，如果后面我有了新的体会，还会回来补充的。实际上这两章的内容都有些让我似懂非懂，但是下一章的内容却可以说是醍醐灌顶，打开了一种新的思维方式。</p><h2 id="第八章-隐形的技术"><a href="#第八章-隐形的技术" class="headerlink" title="第八章 隐形的技术"></a>第八章 隐形的技术</h2><p>什么是意识形态？这个问题似乎司空见惯，因为我们不止一次地在历史书或者其他书籍中看到这个名词，常被用于描述我们和西方国家的不同。意识形态是一个哲学范畴词汇，是指一种观念的集合。也可以理解为对事物的理解、认知，它是一种对事物的感观思想，它是观念、观点、概念、思想、价值观等要素的总和。这是百度百科上的解释。事实上，语言才是最纯粹的意识形态，纯粹到我们根本不会注意到他是一种意识形态。语言教导我们事物的名称，并且教导我们什么食物可以命名，教导我们把世界划分为主体和客体，指明什么是过程，什么是事物···例如，在英语语法中总是有行为的主语、表示主语行为的动词和接受行为的宾语（主谓宾），这样的语法结构带来的是一种咄咄逼人的世界观：事物互相推搡，并且经常相互攻击。</p><p>但事实上大多数人都不会注意到这一点，因为语言在我们的生活中是在是太司空见惯了，以至于我们根本不会察觉到自己的思维被语言所引导。诺贝尔奖得主利根川进曾建议道，他认为就科学研究而言，英语胜过日语，也就是说英语又一种日语不具备的意识形态偏向，用英语进行推理时更加符合科学的推理逻辑。</p><p>一个很简答的例子，一道同样的题目，出成选择题和填空题，那么明显选择题的难度要低，你可以把原因归结为选择题有提示，但是事实上对于完全不懂的人来说提示也是没有任何作用的。这里的提示我们可以视为一种偏向，它将我们向正确的方向指引。而且事实上即使是最简单的问题也是必然会有偏向的，一种问题如果换成不同的形式来提问，得到的答案可能截然不同，一个经典的例子就是问”我可以在学习的时候吃东西吗”和”我可以在吃东西的时候学习吗”，家长对于前者的回答是”不”而后者是”可以”。</p><p>我们总结一下技术的机制，那就是指引思路，生成思想，敬重旧观念、揭露事实或者掩盖事实。技术本身有其导向，这我们已经在前面有所论述，但是在这里我们要提醒的是在生活中还有许许多多与技术一样的，却不被当作技术来看待的事物。语言就是最典型的例子。我们可能没有多少人会把语言当作一种技术，但他们的机制确实是一样的。除了语言之外，例如数字0也是一种最典型的技术，它以及整个阿拉伯数字的发明使得精密的数学成为可能，在熟悉了0的存在后，人们甚至不能想象没有0的世界该如何存在。</p><p>阿拉伯数字的发明无疑是伟大的成就，但是其带来的副作用也值得我们反思，那就是对于数字的滥用。在当今社会，似乎一切都可以被量化，我们相信科学可以给一切客观事物进行量化，而且在量化之后，我们可以设立一个标准，对这些数字进行排序，最终得出事物之间优劣程度的关系——很显然，还有什么比客观数字更好的标准吗？你可以精确到小数点后很多位，精确到不能再精确。这也在当今的教育体系中被极为广泛地运用，我们不用去问”什么样的学生是一个好学生”或者”教育应该如何培养学生”，我们消除了主观的问题，我们把标准放在各项考试的成绩当中去，坚信客观数字会为我们选出最好的学生，而我们教育的目的就是为了让这些学生达到更好的客观数字。比考试成绩更为玄幻的就是智商测试，事实上，搞智商测试的人自己也不知道自己在测什么——又或许他们十分清楚，自己就是想骗点钱罢了。</p><p>技术垄断论寻求权威性的客观源头，表现的非常明显。它想把一切原先主观的评价变为客观的数字量化体系，这在潜移默化中强化了数字崇拜，数字高的人就是比数字低的人好——正在成为一种社会共识，而不需要考虑这些数字背后所代表的含义是否真正有用。在美国，一个很重要的例子就是民意检测，我们有很多人都填过所谓的调查温泉，也知道那些东西绝大多数都是屁话——一个问我开不开心，都可以分为十个等级，这样的民意调查事实上绝大多数人都不知道自己到底在填些什么东西，到最后甚至都是乱写一通。并且事实上不同的提问方式得到的结果也会大不一样——但是并没有人会关心这些，人们只对结果感兴趣，而不是得到结果的方式。统计者会兴高采烈地发现55%对上45%的数据”有力的证明了自己观点的正确性。事实上所有的民意检测都有一个假设：”意见”是人身上的一种东西，我们可以用问卷将其抽取出来。但事实上意见是一个思考的过程，把”意见”当作可以测量的事物时就已经歪曲了这个过程，意见事实上就已经发生了变化，而不可能被所谓的”拿下来”。</p><p>数字就是这样一种隐形的技术，对数字的盲目崇拜注定会使我们无法看清楚一些东西，最典型的就是”人变成了可以用数字计算的人”。在欧洲大陆引入数字评价后，分数改变了整个教育体系的运作方式，激发了学生之间的激烈竞争，这也是我们现在所看到的景象。这些隐形的技术无所不在，又难以被人察觉，在潜移默化中影响着我们的思维。由此我们有必要了解这些技术从何而来，有何用处，最终驾驭它们而不是沦为奴隶。</p><h2 id="第九章-唯科学主义"><a href="#第九章-唯科学主义" class="headerlink" title="第九章 唯科学主义"></a>第九章 唯科学主义</h2><p>作为一名受过系统科学教育并且也看过不少社会科学书籍的人，你如果问我社会科学是不是一种科学，我确实会犹豫。诚然，社会科学被冠上了”科学”之名，并且所采用的研究方法也十分接近自然科学，但是对我来说，给我感觉到两者差距最大的地方就是，当你试图用社会科学所得出的某个结论来预测些什么时，例如人类未来的发展，什么时候会发生经济危机等，你所得到的答案往往是”NO”。</p><p>社会科学认为，人类可以通过引入自然科学的研究方法来研究人类行为。这一点本身其实并没有多大问题的，毕竟相比以往的一些简单观察，引入科学的方法能够使我们更为全面地认识一些现象。但问题在于结论上，当人们试图使用在社会科学中得到的某些结论时，他们往往四处碰壁。用哈耶克的话来说：”社会科学对我们理解社会现象贡献甚少。”</p><p>以上不仅仅是社会科学的主要观念之一，也是构成唯科学主义的三个重要观念之一。也就是说唯科学主义的一个重要体现就是，认为自然科学的研究方法可以用于各个方面，并且像自然科学给我们带来的辉煌成就一样，在社会管理中给我们带来伟大的指引。这也可以概括为第二个观念，那就是社会科学生成的原理可以用来合情合理的基础上组织社会。</p><p>最后一个观念是，科学可以用作一个全面的信仰系统，赋予生命意义，使人安宁，使人获得道德上的满足，甚至使人产生不朽的感觉。这三个信念层层递进，互相纠缠，构成了唯科学主义，同时也构成了技术垄断论的基石。</p><p>要弄清楚唯科学主义到底是什么，我们首先必须理清楚科学的具体含义。”科学”这个词本来是用来描述物理学、化学以及生物学的研究成果。英国的哲学家奥克肖特将”过程”定义为自然界发生的事情，例如行星的运行，冰雪的消融，这些和人的智能没有关系的事件。他用”实践”来指代人的创造，是人的决策和行动的产物。传统的自然科学研究前者，而很显然社会科学研究的对象是后者，”科学概念”的混用严重混淆了过程和实践的边界而且起码在很长一段时间内，”过程”都是严格按照一定规律运行的，有着很强的因果关系。但是对于后者来说，随机和无规律性才是常客。当然，建立在极大数量上的统计规律我相信应该是存在的，但是问题是在科学中我们可以随意运用无穷大，但是在现实社会中我们往往找不到这种情况，所谓的结论的运用也就无从谈起，这一点让我想起了GPT大模型的训练，实际上这个训练方法早就不是什么新鲜玩意，但是在样本数量很小的时候训练出来的结果一直都不尽人意。然而同样的训练方法，当使用上大规模的数据量来进行训练后，效果却有了质的飞跃。这让我不禁怀疑起很多社会学知识是否是一样的，只有从极大量的数据中才能窥见真相，但事实上他们根本没有机会获得如此巨大的训练量。</p><p>除此之外，对于科学家来说，他们研究的客体对于研究者来说是中性的，科学家不必担心因为自己的观察让这些物体所遵循的规律突然”变化”了。当然不确定性原理向我们展示了自然界并不是不会”察觉”观测者的存在，但是即使这样我们也能从中总结出所谓的”测不准原理”。而对于社会科学来说，要做到这一点是很难的，就比如你发现一个人年复一年地在晚上散步，当你准备做实验去跟着他，总结出他散步的规律时，他看见你就不想去散步了一样。</p><p>对于科学理论来说，理论的表述必须要允许人们用实验来证明它是否错误，如果不能通过检验，那么就是一个错误的理论。但是，对于社会科学的绝大多数理论来说，它是不能被证伪的，这并不是说那就是正确的，因为就像”上帝是否存在”这个问题一样，不可证明，也不可证伪。或者就像一些小说中所描写的道理一样，例如”人需要有勇气”，你如果想证明这是错误的，你根本无从下手。社会科学就是这样，它看起来披着科学的外衣，得出的结论却是模棱两可的，乃至于平庸的——换句话说，事实上社会科学所做的就是将我们的日常生活用所谓的科学手段重新描述出来，但这并不是科学。科学从不得出平庸的结论，它从一开始就挑战人们的生活直觉，而社会科学却在总结我们的直觉。</p><p>这些所谓的科学手段，绝大多数都是数学统计方法，也许以前我只知道一个地区的人都很穷，但是现在我可以统计总人数，我可以计算平均收入和消费，我可以用上一切可以使用的数学工具，收集一切可以收集的数据——最终得出这个地区确实很穷的结论。这是科学吗？不，并不是。人人都可以使用数学工具，店员可以统计各个时间段的到店人数，校长可以统计每个校门各个时间段的人流量。在信息时代，似乎一切都可以变成海量的数据——而不用管收集的这些数据是否真的有用。但不是每一个人都能以科学家自称。</p><p>社会科学不是科学，但是它更像是一种介于科学和想象文学之间的东西（例如小说）。小说家们用自己的文字串起一个个故事，这些故事符合逻辑，唤起情感，讲述道理。而社会科学家们正是希望通过同样的方法，他们将过去和现在用自己的故事逻辑所串起，试图揭示未来，指引方向。但是同小说一样，即使小说中的主人公做出了一些选择，让我们觉得无比令人敬佩，非常正确，但遇到相同情况下，我们很可能还是不会做出小说中的选择——因为我们永远知道那是小说，哪怕小说把这个选择描绘的无比正确和符合逻辑。社会科学也是一样的，它用特定的逻辑向我们揭示着生活中可能早已经司空见惯的事物，然后启发我们从不同的角度去看待这些事物。但是我们永远不应该期待这些”科学”来指导我们。就如同爱因斯坦对弗洛伊德的作品所做出的评价一样，他承认弗洛伊德的作品具有开创意义，堪称典范的作品，但那只是因为他启发了人们的思绪，并不是因为这些作品具有什么科学价值。</p><p>但是悲哀的是，技术垄断论企图将唯科学主义推向一切。不过我们不应该屈服，去把一切社会问题交给所谓社会科学的专家们去研究解决，万万不可盲目的接受这一切。</p><h2 id="第十章-符号大流失"><a href="#第十章-符号大流失" class="headerlink" title="第十章 符号大流失"></a>第十章 符号大流失</h2><p>在当今社会，传统符号正在以前所未有的速度陨落，这可以归结为两个原因，一个是符号，尤其是图像符号可以无限重复，但不是不可耗竭的。第二个就是符号使用的越频繁，符号的意义就越是削弱。耶和华曾经告诫不要设立任何它的塑像，因为具体的雕像会消弱符号本身的意义与威力，每天都见不到的上帝远比一个天天见的雕塑有魔力。而在当今网络时代，一切符号都能被无限复制并且传播，殊不知这也是在变相的削弱这些符号的力量。所以我也想在此提醒某些媒体，是否会因为过度宣传而起了反作用。</p><h2 id="第十一章-爱心斗士"><a href="#第十一章-爱心斗士" class="headerlink" title="第十一章 爱心斗士"></a>第十一章 爱心斗士</h2><p>传统符号的消亡所带来最严重的后果就是，我们将会变得失去道德，变为技术垄断论的牺牲品，变得只会相信技术所创造出来的符号，而对我们的传统文化视而不见——这样活着我也无法评价是否会好，但是如果我们就这样什么都不想地被卷入其中，我认为这才是我们这个文明最大的耻辱。</p><p>为了应对技术垄断带来的危险，作者提出了几条建议，至于是否有效，也像作者之前所言，仁者见仁，智者见智了：</p><p>（1）除非知道民意测验里设计的是什么问题并为何这样问，否则就不理睬民意测验；</p><p>（2）不接受效率是人际关系最优先目标的思想；</p><p>（3）摆脱对数字魔力的迷信，不把计算当作替代评判的充足根据，也不把精确的计算和真理画等号；</p><p>（4）不让心理学或任何“社会科学”占据优先的地位，不让它们排挤常识里的语言和思想；</p><p>（5）至少对所谓“进步”观念抱怀疑态度，不把信息和理解混为一谈；</p><p>（6）不认为老年人无关紧要；</p><p>（7）认真对待家庭忠诚和荣誉的意义，准备伸手去接触人时，期待他人也有同样的需要；</p><p>（8）认真对待宗教的宏大叙事，不相信科学是产生真理的唯一体系；</p><p>（9）理解神圣和世俗的差别，不会为了追求现代性而漠视传统；</p><p>（10）钦慕技术独创，但不认为技术代表了人类成就的最高成就”。</p>]]></content>
      
      
      <categories>
          
          <category> 书评 </category>
          
          <category> 《技术垄断》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术垄断 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EX1</title>
      <link href="/2023/09/21/EX1/"/>
      <url>/2023/09/21/EX1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="设定集EX1"><a href="#设定集EX1" class="headerlink" title="设定集EX1"></a>设定集EX1</h1><p>作为第一次试做游戏demo，就想着做一个这么大的项目，属实是很符合本人好高骛远、眼高手低的性格。</p><p>对于这款游戏的定位是什么？故事将会发生在完美复刻的木之本樱的家中，但是是一个自由度相对来说不会很高的，关卡类的游戏。因为我将会把场景切割成为一个个部分，只有达成了对应的关卡，才能进入下一步。关卡将会作为独立的场景出现，每个关卡将会结合我对于VR的认识以及对库洛牌的了解来设计。</p><p>事实上一开始我是想着做一款类似于VR版的galgame的游戏的，我对于这一类游戏一直有所耳闻，并且相信这是在未来虽然不能说会很火，但是起码是有着很大的发展空间的一个游戏方向，甚至可以说是最为适合VR中游戏展示方式的一个方向。</p><p>但是就实际来考虑，我只是一个一穷二白的小白，尽管我可以写一些辣鸡剧情，但是必备的人物建模功底确实是一窍不通的，这对于Galgame这种对于人物审美要求相当高的作品来说是致命的。而且，其实在unity程序上的造诣低的离谱，所以必须尽可能地减少设定上的功能，以免自己之后根本无法进功能的实现。</p><p>首先就是菜单（背包）页面，目前是想着只做两个东西，一个是作为本游戏的最核心玩法的库洛牌机制，不同库洛牌会有着不同的能力，但是绝对不可能出现全部库洛牌都上的情况。我将精选适合拿来做小游戏的库洛牌，结合之前所说的“关卡”，每个库洛牌将在每个关卡当中发挥特定的功效，但是在所谓的“大世界”中是无法实现效果的，因为我对于场景切换方面的知识还十分的浅薄，但我也觉得分开设计的难度是要比一下子通吃的难度以及对于机器性能的要求都会低很多的。</p><p>另一个就是收集比如说开门的钥匙之类的东西。就目前来说，已经想好的需要构建的场景分别是小可的房间、星星的彼岸（这个还得需要能真的把小樱的模型建出来才有灵魂）以及小樱的房间。实际上真正能够作为大场景存在并且为了其他小关卡的存在提供接入路径的只有小樱的房间了。目前的想法是因为小樱家来了客人（具体是谁得保密），小樱把门关上，而小可为了一探究竟，决定打开门出去看看，但是小可会发现自己不但受了“小”牌的影响，身体变小，并且翅膀能力也消失了，所以小可想要拿到高处的钥匙的第一步就是要获得【翔】牌，并且利用【翔】牌的能力来获得挂在高处的钥匙。</p><p>在找寻钥匙的期间，小可还会遇到各种不同的牌，他们也分别对应着不同的关卡。这我将会在后续的关卡介绍中谈起我自己的想法。</p><p>当然，作为一个坚信剧情为上的游戏玩家，我铁了心的要在这款游戏中加入“比较多并且比较能看”的剧情，实现的方法会有两种，一种是通过神奇的AI来进行配音，同时可以整一个漂浮字幕（不整好像也可以，反正我是必然使用中文配音）（幻想时刻就是请人配音，但是人太多了，而且我也没米，就全当幻想吧）。另一种就是散落在场景中的，可以拾取进行阅读的文本，其实这方面我还没调查过是否可行（起码前面所想的我都是看到教程了的，实现不了只会是我的技术问题，而不会是原理上极难实现的问题）。所以有待后续进一步的探究。</p><p>关于最为基础的移动方式，我觉得应该设置连续移动方式而不是传送移动方式，虽然连续移动会造成晕动症，但是就我在VRchat当中的游玩经历来说，我认为手柄连续移动还是有着巨大的设计上的优势的。另外一点就是关于是否要采用无限奔跑策略，也就是玩家可以通过自己挥动双臂来模拟跑步场景，其实我是倾向于这种移动方式的，虽然目前我还没能成功地复现这种方式，但是我觉得这将会是一种对于游戏性有着很大好处的移动方式。例如我都想好了一个以光牌和影牌为灵感设计的关卡，就是利用牌去点燃蜡烛（火牌：？），获得光亮，但是蜡烛会马上熄灭，玩家必须在限定的时间内点亮所有的蜡烛才能获得最终的胜利，而如果连续挥舞手柄的移动方式可以根据挥舞的速度来决定当前玩家的移动速度的话，那么这种游戏方式就会有着比较大的意义，毕竟如果换成了手柄以固定速度进行移动的方式的话，老实说我觉得这种关卡其实就根本没有制作的必要了。</p><p>对于【翔】牌，我的想法是他应该是唯一能够用在【大世界】牌，到时候可以设置一个变量，使得获取后可以解锁通过按A\B键进行连续跳跃的飞行模拟（其实对于飞行我目前还是很没底的，一来没搜到在VR中进行飞行的案例，我想之后应该只能魔改Unity3D中的飞行方式，将其套壳到VR的交互当中去。</p><p>目前的计划设计场景就到小樱的房间为止，其实能写的情节也不是很多，真要写的话估计也只能图一乐，激励自己继续做后续的内容了。</p><p>Flag立到这里，准备多干点活了。</p>]]></content>
      
      
      <categories>
          
          <category> 小可的大冒险 </category>
          
          <category> 设定集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 木之本樱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01星星彼岸的相见</title>
      <link href="/2023/09/21/01%E6%98%9F%E6%98%9F%E5%BD%BC%E5%B2%B8%E7%9A%84%E7%9B%B8%E8%A7%81/"/>
      <url>/2023/09/21/01%E6%98%9F%E6%98%9F%E5%BD%BC%E5%B2%B8%E7%9A%84%E7%9B%B8%E8%A7%81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="/2023/09/21/01%E6%98%9F%E6%98%9F%E5%BD%BC%E5%B2%B8%E7%9A%84%E7%9B%B8%E8%A7%81/1280X1280.JPEG"></p><h2 id="01"><a href="#01" class="headerlink" title="01"></a>01</h2><p>“小可，小可！”</p><p>？</p><p>“小可，快起床啦！”</p><p>？？</p><p>“今天家里要来爸爸的客人，你就好好地在房间里呆着，千万不要发出什么奇怪的声音哦！我等会儿会带东西来给你吃的，所以好好的呆着！我先下去帮忙啦！”</p><p>？？？</p><p>睁开迷糊的双眼，熟悉、活泼的女孩声音从外面传来，和随之而来的一声关门声把正在床上睡得酣畅淋漓的小玩偶吓了一跳。它揉了揉小的几乎看不见的眼睛，从和自己一样迷你可爱的小床上猛然爬起，迷糊的坐在床上，条件反射般地想关掉旁边的【闹钟】，结果是，短短的小手在空气中摇晃了半天，却什么都没碰到。</p><p>“wuiiiii,要迟到啦！唉？怎么回事，这是在哪儿？”玩偶突然清醒了，开始冷静下来观察四周：一个狭窄的木制小房间里，站起来天花板几乎要碰到自己的头顶。自己坐着的白色小床上放着一床绿色的丝绒被子，虽然做工不是很好，但是摸起来却有一种很温馨和熟悉的触感。床旁边摆放着一个看起来是用糖果皮和纸壳班做成的简易小木桌，木桌对面是一个几乎要达到【天花板】高度的木柜。床的后面以及旁边散落着一个一个的…巨大的糖果？【玩偶】还没见过这么大大糖果，不禁好奇地拿起一颗准备一探究竟。</p><p>“哎！好软啊！”【玩偶】吃了一惊，这哪是什么糖果，而是用布和棉花做成的糖果型枕头！这是什么，太可爱了吧！【玩偶】发出惊叹的声音。这么大的抱枕，想必制作的人也花了很多时间吧！就和知世【Tomoyo】酱一样…</p><p>「知世…?」脑海中突然闪现的名字让玩偶突然一愣。【玩偶】拼命回想，这是谁的名字？一想起来就心头一暖，仿佛看见了一张无比温柔的脸正朝着自己微笑，这么这么温柔的存在，怎么就是回想不起更多的细节呢。</p><p>“相比想起他人的名字，还是先回忆起自己的身份吧！”</p><p>“谁？”突然传来的声音让【玩偶】又吓了一跳，不对，这是，刚刚才听到的温柔女孩的声音！只不过，这次声音的来源似乎并不是在【外面】，而是近在身边的存在。</p><p>“这里，这里，来桌子这边…”【玩偶】寻着声音，一眼便看见了旁边糖果桌子上面摆着的卡牌。卡牌闪着微弱的光，光芒随着声音而微微起伏，吸引着【玩偶】上前去将其拿起。</p><p>【The Time】。时牌。</p><p>![](01星星彼岸的相见&#x2F;1280X1280 (1).JPEG “1”)</p><p>一位穿着法袍的老人，举着象征着【时间】的沙漏，低沉着沧桑的脸，似乎孤独而无奈的看着沙子缓缓地流下。沙漏，据说是亚历山大时期的发明，曾跟随着这位伟大的君王向着无垠之海的方向前进，作为记录时间的工具而存在。时光荏苒，曾经气势恢宏的君王早已化为连沙尘不剩的存在，但是同样的沙子，在这名为【沙漏】的存在中，所经历的物理过程却恒久不变——那就是【时间】本身。</p><p>可是，就是在这刻画着沧桑老人的卡牌中，却传出了与之不符的少女声音。</p><p>“小可，小可！【封印兽】可鲁贝洛斯…”</p><p>【玩偶】又吃了一惊，又是一个无比熟悉的名字，但是从这少女的声音中念出，总觉得哪里有些不对劲。一种强烈的违和感充斥其中，但是当想去寻找原因中，脑子却像哪里被堵住了一样什么也想不起来。</p><p>【小可】…</p><p>【小可】…</p><p>【小可】…</p><p>头突然剧烈地疼了起来，眼前的画面开始模糊，突然，【玩偶】发现自己已经不在之前的小木屋中，眼前是一片如同星空般深邃的空间，漆黑的星空向着无穷远处延伸。脚底下是闪着金光的魔法阵，而在魔法阵的最中央…</p><p>“小可！你想起来了嘛，小可？”在魔法阵最中央的，是有着与刚才的声音完全匹配的女孩。女孩一头深棕色头发，一双灵动的翠眼，让人看了就充满了元气和希望的外貌。但是与外表所不匹配的是，女孩的手此时正紧紧撑在魔法阵的正中间，表情也是一年强撑，仿佛下一秒就会倒下一般，让【玩偶】不由得开始担心起来。</p><p>“你没事吧…”</p><p>“没事的，只是魔力的消耗比想象中的要大，能撑的时间也不多了…”女孩强撑笑颜，看着眼前的【玩偶】，哦不，据她所说，应该是【小可】。</p><p>“看来还是受到了强行使用【时】牌的影响，记忆散失了…不过小可，如果是你的话，我相信你一定可以寻着记忆【星星】的线索，回想起一切的，没问题，一定没问题的…”</p><p>听到这话【小可】心头不禁一震。小可，小可，这就是我的名字吗…</p><p>突然，魔法阵有了些许变化，原本刻画着星星，月亮和太阳的魔法阵，忽然变成了时钟的模样，闪烁着与刚才看起来截然不同的光芒。“哼啊…”女孩看起来很痛苦一般，但是过了一小会儿，又开始诉说了起来。</p><p>“很多很多年前，地球上诞生了有史以来最为伟大的魔法师，库洛·里德，那就是你的创造者。里德用自己的魔力创造出了53张威力强大的卡牌，它们各不相同，但是都具有着神奇的功能并且有着自己的灵魂，这就是【库洛牌】。为了守护这些卡牌们，里德创造出了两位守护兽，其中一位便是你，可鲁贝洛斯！然而在数百年前，这位强大的魔法师忽然离世，留下的库洛牌立刻成了大家竞相抢夺的东西。但是从那以后库洛牌就消失在了历史的长河中。直到最近几年，西方魔术协会感受到了极大的魔力不平衡，便派出强大的魔术师进行调查。结果发现，这些原本早已被认为消失了的卡牌，居然被再一次解除了封印。”</p><p>“是的，可鲁贝洛斯，那就是我们的相遇。我无意之中解除了库洛牌的封印，而作为库洛牌的守护者，你告诉我，【库洛牌解除封印之时，世界将会陷入巨大的危机之中】。于是，我们踏上了寻找库洛牌的旅途。我们并肩作战，一同努力，终于在最后通过了【月】的审判，成为了库洛牌的新主人…”</p><p>女孩像是想起了上面不好的事情一样，皱起了眉头。“可是，好景不长，西方派来的魔法师最终还是找到了我们，他们企图用蛮力抢走【库洛牌】，为此不惜动用了禁忌魔法…”</p><p>“禁忌魔法？那是什么样的魔法？”</p><p>“他们…他们使用魔法干扰了我的灵魂，让我的灵魂飘落到了远方的星星…所以我现在只能以这个姿态和你说话。但是，我相信可鲁贝洛斯，你一定能够破除魔法，去…解救…【小樱】的…”</p><p>“小樱？”听到这个名字，各种复杂的情感在小可心中翻腾起来。封印兽，库洛牌，库洛·里德，小樱，库洛魔法使…小可似乎回想起了一切的记忆。</p><p>“嗯…小可…”【小樱】有些生硬地笑着。“请你一定要破解魔法，到时候，我们一定要，再相见…”</p><p>忽然，魔法阵开始闪烁，空间再次混乱，女孩的身影开始模糊。不要啊，还有很多不知道的事情啊，怎么又要突然消失了，不要再分开，不要再分开。小可在心中疯狂的喊着，但是最后只喊出一句。</p><p>“小樱！！！！！！！！！！”</p><p>在星星的彼岸，女孩又温柔地笑着。</p><h2 id="资料集in-bookcase"><a href="#资料集in-bookcase" class="headerlink" title="资料集in bookcase"></a>资料集in bookcase</h2><p>【时牌，The Time】</p><p>一位穿着法袍的老人，举着象征着【时间】的沙漏，低沉着沧桑的脸，似乎孤独而无奈的看着沙子缓缓地流下。沙漏，据说是亚历山大时期的发明，曾跟随着这位伟大的君王向着无垠之海的方向前进，作为记录时间的工具而存在。时光荏苒，曾经气势恢宏的君王早已化为连沙尘不剩的存在，但是同样的沙子，在这名为【沙漏】的存在中，所经历的物理过程却恒久不变——那就是【时间】本身。</p><p>但是，就如同沙漏的容量有限，其所能表示的时间也是有限。使用者只能回溯一天的时间，如果强行灌入魔力来达成效果，就如同向沙漏强行注入沙子一般，将会对使用者产生不可预估的影响。</p><p>【镜牌，The Mirror】</p><p>象征着深切看清自己的时期，具有复制人或物的魔法，但也可以做一般的镜子。</p><p>镜子是世界上独特的存在，无论是多么复杂的物体，在镜子当中所展现出来的，总会是一模一样的复制体。因此，只要使用者的魔力足够大，就连复制灵魂这种事情，似乎也能够达到…</p>]]></content>
      
      
      <categories>
          
          <category> 小可的大冒险 </category>
          
          <category> 主线 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 木之本樱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>企划——小可的大冒险</title>
      <link href="/2023/09/19/%E4%BC%81%E5%88%92%E2%80%94%E2%80%94%E5%B0%8F%E5%8F%AF%E7%9A%84%E5%A4%A7%E5%86%92%E9%99%A9/"/>
      <url>/2023/09/19/%E4%BC%81%E5%88%92%E2%80%94%E2%80%94%E5%B0%8F%E5%8F%AF%E7%9A%84%E5%A4%A7%E5%86%92%E9%99%A9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>鸽了一整个暑假，也确实没什么时间精力去考虑再次正式启动这个计划。但是，我认为，既然决定要去做，并且这是一个让我可以真正快乐起来的游戏，那么我就应该竭尽全力地去做，中途也许会遇到许多许多的阻碍，但是如果可以，我想排除万难，将其完成，在明年的4月1日之前，交上一份能让自己满意的答卷。不想为了他人再去做一些无聊的事情，只想为了自己的想法去最后再拼搏一次，去做疯狂的事情。</p><p>那么在此简要说明一下此次游戏的企划。</p><p>这将会是一次3D类型的VR游戏，采用Unity引擎进行开发，最后会在Pico上登陆。主打的元素是VR版Galgame、解谜、VR体感操作。故事场景设计为小樱的家中，玩家将以小可的视角来进行游戏，因为这样的话即使是按照正常比例构建的小樱的家，在其中也能加入相当多的可玩元素。在其中我将探索基于VR的交互模式，以及叙事手法。</p><p>当然，故事情节才是决定一部作品上限的东西。由于笔者多年不写小说，而且文笔也变得非常差了，现在只能为爱发电，所以之后会尽可能勤快地在网站上面连载一下改游戏的小说内容（Flag立到起飞），这也是游戏初期的第一项大工作，只能不断地抽出时间来搞了。然后就是项目初期的第二项大工作，就是小樱的家的基础建模，这其实可以说是相对游戏独立的部分，主要会采用blender来实现，工作量还是相当大的。这两项工作基本完成后，才能进行后续进一步游戏逻辑和Unity部分的工作。</p><p>后续工作先不立flag，先做起来再说吧！</p>]]></content>
      
      
      <categories>
          
          <category> 游戏企划 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔卡少女樱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随手所写</title>
      <link href="/2023/09/18/%E9%9A%8F%E6%89%8B%E6%89%80%E5%86%99/"/>
      <url>/2023/09/18/%E9%9A%8F%E6%89%8B%E6%89%80%E5%86%99/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="cc7ca54c7d9817ab9024ecd1628353aa47f12007c3f0f0d27dbba65b79fa821a"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这是屋主的最私人日记，请输入密码观看</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 日有所记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《技术垄断》第八章·隐形的技术</title>
      <link href="/2023/08/21/%E3%80%8A%E6%8A%80%E6%9C%AF%E5%9E%84%E6%96%AD%E3%80%8B%E7%AC%AC%E5%85%AB%E7%AB%A0%C2%B7%E9%9A%90%E5%BD%A2%E7%9A%84%E6%8A%80%E6%9C%AF/"/>
      <url>/2023/08/21/%E3%80%8A%E6%8A%80%E6%9C%AF%E5%9E%84%E6%96%AD%E3%80%8B%E7%AC%AC%E5%85%AB%E7%AB%A0%C2%B7%E9%9A%90%E5%BD%A2%E7%9A%84%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="第八章-隐形的技术"><a href="#第八章-隐形的技术" class="headerlink" title="第八章 隐形的技术"></a>第八章 隐形的技术</h2><p>什么是意识形态？这个问题似乎司空见惯，因为我们不止一次地在历史书或者其他书籍中看到这个名词，常被用于描述我们和西方国家的不同。意识形态是一个哲学范畴词汇，是指一种观念的集合。也可以理解为对事物的理解、认知，它是一种对事物的感观思想，它是观念、观点、概念、思想、价值观等要素的总和。这是百度百科上的解释。事实上，语言才是最纯粹的意识形态，纯粹到我们根本不会注意到他是一种意识形态。语言教导我们事物的名称，并且教导我们什么食物可以命名，教导我们把世界划分为主体和客体，指明什么是过程，什么是事物···例如，在英语语法中总是有行为的主语、表示主语行为的动词和接受行为的宾语（主谓宾），这样的语法结构带来的是一种咄咄逼人的世界观：事物互相推搡，并且经常相互攻击。</p><p>但事实上大多数人都不会注意到这一点，因为语言在我们的生活中是在是太司空见惯了，以至于我们根本不会察觉到自己的思维被语言所引导。诺贝尔奖得主利根川进曾建议道，他认为就科学研究而言，英语胜过日语，也就是说英语又一种日语不具备的意识形态偏向，用英语进行推理时更加符合科学的推理逻辑。</p><p>一个很简答的例子，一道同样的题目，出成选择题和填空题，那么明显选择题的难度要低，你可以把原因归结为选择题有提示，但是事实上对于完全不懂的人来说提示也是没有任何作用的。这里的提示我们可以视为一种偏向，它将我们向正确的方向指引。而且事实上即使是最简单的问题也是必然会有偏向的，一种问题如果换成不同的形式来提问，得到的答案可能截然不同，一个经典的例子就是问”我可以在学习的时候吃东西吗”和”我可以在吃东西的时候学习吗”，家长对于前者的回答是”不”而后者是”可以”。</p><p>我们总结一下技术的机制，那就是指引思路，生成思想，敬重旧观念、揭露事实或者掩盖事实。技术本身有其导向，这我们已经在前面有所论述，但是在这里我们要提醒的是在生活中还有许许多多与技术一样的，却不被当作技术来看待的事物。语言就是最典型的例子。我们可能没有多少人会把语言当作一种技术，但他们的机制确实是一样的。除了语言之外，例如数字0也是一种最典型的技术，它以及整个阿拉伯数字的发明使得精密的数学成为可能，在熟悉了0的存在后，人们甚至不能想象没有0的世界该如何存在。</p><p>阿拉伯数字的发明无疑是伟大的成就，但是其带来的副作用也值得我们反思，那就是对于数字的滥用。在当今社会，似乎一切都可以被量化，我们相信科学可以给一切客观事物进行量化，而且在量化之后，我们可以设立一个标准，对这些数字进行排序，最终得出事物之间优劣程度的关系——很显然，还有什么比客观数字更好的标准吗？你可以精确到小数点后很多位，精确到不能再精确。这也在当今的教育体系中被极为广泛地运用，我们不用去问”什么样的学生是一个好学生”或者”教育应该如何培养学生”，我们消除了主观的问题，我们把标准放在各项考试的成绩当中去，坚信客观数字会为我们选出最好的学生，而我们教育的目的就是为了让这些学生达到更好的客观数字。比考试成绩更为玄幻的就是智商测试，事实上，搞智商测试的人自己也不知道自己在测什么——又或许他们十分清楚，自己就是想骗点钱罢了。</p><p>技术垄断论寻求权威性的客观源头，表现的非常明显。它想把一切原先主观的评价变为客观的数字量化体系，这在潜移默化中强化了数字崇拜，数字高的人就是比数字低的人好——正在成为一种社会共识，而不需要考虑这些数字背后所代表的含义是否真正有用。在美国，一个很重要的例子就是民意检测，我们有很多人都填过所谓的调查温泉，也知道那些东西绝大多数都是屁话——一个问我开不开心，都可以分为十个等级，这样的民意调查事实上绝大多数人都不知道自己到底在填些什么东西，到最后甚至都是乱写一通。并且事实上不同的提问方式得到的结果也会大不一样——但是并没有人会关心这些，人们只对结果感兴趣，而不是得到结果的方式。统计者会兴高采烈地发现55%对上45%的数据”有力的证明了自己观点的正确性。事实上所有的民意检测都有一个假设：”意见”是人身上的一种东西，我们可以用问卷将其抽取出来。但事实上意见是一个思考的过程，把”意见”当作可以测量的事物时就已经歪曲了这个过程，意见事实上就已经发生了变化，而不可能被所谓的”拿下来”。</p><p>数字就是这样一种隐形的技术，对数字的盲目崇拜注定会使我们无法看清楚一些东西，最典型的就是”人变成了可以用数字计算的人”。在欧洲大陆引入数字评价后，分数改变了整个教育体系的运作方式，激发了学生之间的激烈竞争，这也是我们现在所看到的景象。这些隐形的技术无所不在，又难以被人察觉，在潜移默化中影响着我们的思维。由此我们有必要了解这些技术从何而来，有何用处，最终驾驭它们而不是沦为奴隶。</p>]]></content>
      
      
      <categories>
          
          <category> 书评 </category>
          
          <category> 《技术垄断》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术垄断 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>总是就是随便评价一下！</title>
      <link href="/2023/08/21/%E6%80%BB%E6%98%AF%E5%B0%B1%E6%98%AF%E9%9A%8F%E4%BE%BF%E8%AF%84%E4%BB%B7%E4%B8%80%E4%B8%8B%EF%BC%81/"/>
      <url>/2023/08/21/%E6%80%BB%E6%98%AF%E5%B0%B1%E6%98%AF%E9%9A%8F%E4%BE%BF%E8%AF%84%E4%BB%B7%E4%B8%80%E4%B8%8B%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="总是就是随便评价一下！"><a href="#总是就是随便评价一下！" class="headerlink" title="总是就是随便评价一下！"></a>总是就是随便评价一下！</h1><p><strong>《总是就是非常可爱》</strong>B站评分9.8，在我看来就是一部非常简单轻松的日常番剧。但是相比其他日常类（比如KON这样的社团日常，点兔这样的咖啡馆日常），其所具备的一些特色元素还是让人眼前一亮。</p><p>毋庸置疑，最突出的元素就是<strong>“结婚”</strong>了。确实，一般来说在这种一男主多女配的有轻微后宫嫌疑（纯爱党震怒）的作品中，要让男主直接结婚可是十分大胆的行为。不过这个元素却在这部作品中成为了最有特色的看点。男女主一开始的闪婚让人一脸蒙圈，但是却由此奠定了这部作品的搞笑支柱—对于绝大多数人来说，结婚都是十分庄严、严肃的事情，但是正是这一种严肃风格，再加上男女主可爱的性格，形成了鲜明的反差，这也是本部作品幽默感的来源—你在后面的剧情中可以不止一次地体验到这种恰到好处的幽默感。</p><p>再简单说一下画风吧。这部作品的画风可以说是过分简单甚至简陋的（唯一的经费都用在了游戏上hhh)。但是这对于日常类来说并不是减分项，反而让人看着非常的舒服，因为简单的画风就是可以给人一种十分舒适可爱的感觉，而且这部番主要以搞笑剧情为主，所以和这样的画风搭配起来就是十分的相得益彰（你要是给巨人这样的作品安排简单的画风那就是灾难）。</p><p>人物方面，我也不想过多评价，硬要说的话，在我看来，所有的人物，总之就是非常可爱嘛～</p>]]></content>
      
      
      <categories>
          
          <category> 漫评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总之就是非常可爱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>瓦洛兰特，启动！</title>
      <link href="/2023/08/17/%E7%93%A6%E6%B4%9B%E5%85%B0%E7%89%B9%EF%BC%8C%E5%90%AF%E5%8A%A8%EF%BC%81/"/>
      <url>/2023/08/17/%E7%93%A6%E6%B4%9B%E5%85%B0%E7%89%B9%EF%BC%8C%E5%90%AF%E5%8A%A8%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>上一个月，腾讯代理的瓦洛兰特（简称“瓦”）国服无畏契约正式上线，一开始我并不知道这是啥游戏，但是身边许多人都在很兴奋地讨论着这一款游戏，再加上本人也是一位老fps玩家了，于是就也跟着潮流玩了一波无畏契约。不过，在了知道无畏契约的英文——valorant之后,我惊讶的发现这是一款我早已经知晓了的游戏——“瓦”。没错，“瓦”这个游戏在CSGO玩家中早已经耳熟能详，早在去年，因为许多CSGO职业玩家都跑去体验了一把“瓦”，我虽然自己没玩过，但是在B站也是看了不少“瓦”的视频，但是因为我并没有刻意记和关注，所以并不知道无畏契约就是瓦的中文官方名称。</p><p>而现在，在体验了将近40个小时的瓦之后，我也想就自己的体验来简单地谈一下自己对于这款游戏的感想。</p><p><img src="https://d08cdkzlxr.feishu.cn/space/api/box/stream/download/asynccode/?code=OTI5NzdiY2NmODRlZGZlNmNlODNhNzBmYmY5OTIyNzNfcW1vUDNmRWJZTGRHUHdKOUJpU2VzNFRENUNIYTlWWUtfVG9rZW46WEQ0M2IzT0Vmb3BkWVN4OWVDdGNjdllsbjJmXzE2OTIyMDM2OTA6MTY5MjIwNzI5MF9WNA" alt="img"></p><p>“瓦”的核心玩法还是和CSGO一样，经典的5V5埋包拆包战斗。但是“瓦”又是一款moba游戏，要很好的平衡这两点是一件有点难度的事情，overwatch就是前车之鉴，因为过于频繁的角色能力改动最终导致了不少玩家的不满。作为一款fps游戏，既要能从别的fps游戏那里抢人（例如CSGO），又要能对新入坑的玩家比较友好，这就是难度所在。但是，在经过这么长的体验之后，我对于“瓦”的评价是：不仅做到了，而且做的比较出色。</p><p>我先从一位接近1000小时的CSGO玩家的角度来说。虽然我玩过的其他fps游戏也不多，但是我能感觉到”瓦“的操作和CSGO是十分相近的，甚至能说，只要不看技能，基本上就是一模一样的游戏。我之前也买情怀票玩过一阵子生死狙击2，但是这游戏给我的感觉就是非常不舒服，撇开疾跑、趴下这种让我非常不舒服的操作不说，就是射击的感觉都非常的让人不舒服，而且并没有什么自己的特色，所以玩了一段时间后又改回CSGO了。而在”瓦“里面，只要把灵敏度一调，甚至什么技能都不用会，就可以开杀了。我觉得这对于一名CSGO玩家来说是很重要的体验，这种积极的反馈可以让我们这些老东西更乐于接受这款游戏，而不是在玩过一局后发现怎么都杀不了人然后直接破防离开这款游戏。能做到这一点要归功于枪法和技能的平衡，作为一款fps游戏，最为首要的当然要是枪法，你不能让一个枪打头好几枪还不如你放一个天花乱坠的技能吧？我很高兴瓦把很多枪械的伤害都放的很高，例如格洛克甚至可以两枪头，手枪党直接狂喜。</p><p>当然我不是一名新入坑的fps玩家，所以我没法作为新人来讲自己的体验，所以只能简单伪装一下新人。首先得说这款游戏的宣传力度确实是大大地，身边许多之前不玩fps的人都来了，我CSGO何时见过如此大阵仗。而且相比CSGO，里面的各种机制都更加通俗易懂，枪的价格和伤害都一目了然（1000小时还不知道CSGO里面各种枪械的伤害的屑路过），而且把技能纳入了经济当中，我认为是一个提高竞技性的很好措施。当然，最能留住用户的，肯定还是moba的机制，也就是说对于一个总是点不到人的新玩家，如何让人能够用技能也能杀一些人，以提高反馈，让人不要那么早早退出，也是一件非常重要的事情。这一点里面我觉得拳头做的还是很不错的，里面的人物技能设计的都非常好，给我印象深刻的比如霓虹，上次见到一个霓虹直接放技能跑过来我脸上给我突突两喷子就把我噶了。相比CSGO的电击枪绝活哥、喷子绝活哥等，我们在瓦当中应该可以看到更多“绝活哥”给我们带来的更加精彩的操作，当然，对于新玩家来说，只要对于技能能够有着很好的体验，就可以一定程度上弥补在枪法上的不足，这一点对于游戏体验来说非常重要。不过，师傅领进门，修行靠个人，能否留住这些用户，我还是要提出质疑的。因为我认为最后能留下来的应该还是那些CSGO以及其他fps游戏的老玩家，还有就是那些本来就有潜力成为CSGO老玩家的人（提前截胡）。至于要争取的人，就是那些有兴趣将几个不需要对枪法要求很高的角色玩的好的人了，我将其称之为“CSGO编外人士”，这些人你让他玩GO是不大喜欢的，但是却能留在瓦。这就要求设计者对于人物技能的设计和平衡下足功夫了。不过作为一款fps游戏我觉得其实已经足够了，毕竟不像原神一样，没有门槛，可以最后发展成为一种巨大的IP体系（我觉得原神早就已经脱离一般游戏的范畴了，所谓“目标用户”的界限早就已经模糊，但是我认为fps游戏是不可能有这种潜力的，毕竟上一个能做到的只有型月）。</p><p>所以我对瓦的未来还是非常看好的。打开steam一看，哎，20多天没打过CSGO了。</p>]]></content>
      
      
      <categories>
          
          <category> 游戏杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 无畏契约 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《技术垄断》第六、七章 机器意识形态</title>
      <link href="/2023/08/10/%E3%80%8A%E6%8A%80%E6%9C%AF%E5%9E%84%E6%96%AD%E3%80%8B%E7%AC%AC%E5%85%AD%E3%80%81%E4%B8%83%E7%AB%A0-%E6%9C%BA%E5%99%A8%E6%84%8F%E8%AF%86%E5%BD%A2%E6%80%81/"/>
      <url>/2023/08/10/%E3%80%8A%E6%8A%80%E6%9C%AF%E5%9E%84%E6%96%AD%E3%80%8B%E7%AC%AC%E5%85%AD%E3%80%81%E4%B8%83%E7%AB%A0-%E6%9C%BA%E5%99%A8%E6%84%8F%E8%AF%86%E5%BD%A2%E6%80%81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="第六章-机器意识形态：医疗技术垄断"><a href="#第六章-机器意识形态：医疗技术垄断" class="headerlink" title="第六章 机器意识形态：医疗技术垄断"></a>第六章 机器意识形态：医疗技术垄断</h2><p>本章主要考虑在医疗技术领域的技术垄断，由此揭示出技术垄断在一些方面的典型特征。</p><p>在技术垄断时代到来前的几千年里，医疗诊断的方式其实没有什么明显的变化。在这个阶段医疗诊断的特征就是医生与患者直接交流，以患者的主诉作为诊断的基础，同时根据医生的询问和观察。这原因很简单，因为对于大部分疾病（尤其是内科），医生根本无从得知患者体内到底是个什么情况，也许中医有一些所谓的摸动脉的方法，但那也是大多数基于医生的经验判断。</p><p>最早发明的医疗器械（这么说并不准确，因为广义上的医疗器械甚至要早于文字的发明）是1816年法国医生雷奈克发明的听诊器。尽管这是个很简答的发明，却具有着重要的意义，不仅仅是因为其具有比较广阔的应用前景，更重要的是这是一个典型的技术成为媒介，插在患者和医生中间的例子。自此，医生得到的不再是直接获得的信息，而是通过技术（听诊器）后的信息，尽管我们知道这实际上就是对原始信息进行简单处理（放大）后得到的信息，但是实际上这已经拉开了技术统治医疗乃至垄断的序幕。听诊器促成了两个重要观点：1.医学是研究疾病的，而不是研究病人的；2.病人所知不可靠，机器所知才是可靠的。听诊器把病人和疾病分隔开来（因为疾病在一定程度上可以视作依附于听诊器声音而存在的事物），并且把病人的主观倾诉拒之门外。在听诊器之后，医学稳步走上了几乎完全依靠技术的道路，1895年X光的发现以及在医疗上的应用更加证实了这一点。自此医疗诊断进入了一个新的时代，其特征是医生通过医疗器械间接与患者的经验和身体交流。</p><p>但到了现代，情况又出现了大变化。随着医生们越来越多的使用技术，疏远了患者。而且另一个原因是，患者对于技术的信任程度也与日俱增，即使医生不使用技术，患者也会主动要求技术检测。不可否认的是，新技术拯救了不计其数的生命。但是我们需要考虑的一点是，有多少使用新技术的人真正知道自己是否需要使用新技术呢。我举临终关怀来说，如果一个癌症晚期的人只能活一个月了，但是凭借着现代手段可以活四个月，但是这四个月将伴随着极大的痛苦。诚然，是否使用这些技术取决于我们自己，技术看上去只是给了我们其他的选项。但是当患者自己都不知道该怎么办时，那么技术就会做出自己的选择。</p><p>老实说，对于医疗方面我自己也没有什么经验，所以对于本章部分内容以及我自己写的部分内容还是保持怀疑的态度，例如对于医生和患者之间的关系的例子。不过，事实上我更感兴趣的是未来AI作为代替医生来治疗的角色出现时，我们能否更加清晰地看出这一路上医生是如何逐渐演变的。</p><h2 id="第七章-机器意识形态：计算机技术垄断"><a href="#第七章-机器意识形态：计算机技术垄断" class="headerlink" title="第七章 机器意识形态：计算机技术垄断"></a>第七章 机器意识形态：计算机技术垄断</h2><p>在作者生活的年代，个人计算机刚开始普及，互联网也刚刚兴起，一切都处于萌芽之中，但是作者却可以凭借敏锐的目光捕捉到这一趋势，我是非常佩服。当然，在移动互联网已经普及的今天，作者所言更加值得我们深思。</p><p>在所有技术当中，计算机可以说是一种最为独特的存在。首先在于计算机技术的用途几乎数不清，计算机几乎可以用于现代社会的所有方面。而且计算机技术深深整合进了其它机器当中，也就是现在熟知的嵌入式。作者在书中统称计算机技术，实际上就是基于数字电路技术所衍生出来的一套庞大的机器运算体系。</p><p>在过去几十年里，计算机技术蓬勃发展，并且在曾经人类最自豪的领域一次又一次地战胜人类，到近几年chatgpt的横空出世，人们终于认识到，对于计算机来说几乎没有什么是达不到的了。在这发展过程中，人们对计算机也产生了不同的看法。人们相信，凡是计算机能够做的，计算机都应该去做。现在看来计算机还是我们的工具，但是当计算机发展到一定程度，当人工智能再次取得突破性的进展时，我们是否还能心安理得地自居主人，使用着这些“工具”呢？</p><p>麦卡锡说“我的恒温器有三种信念——这里太热，这里太冷，这里不冷不热刚刚好。”这句话实际上对“信念”下了一个新的定义，这里不再把信念看作人独有的心理活动，而是将其扩展。这一切的背后就体现出人们对于计算机技术最终是否能够达到人类智慧的怀疑。</p><p>老实说，也许是年代的不同，这一章作者对于计算机技术带来的垄断结果的描述我并不苟同。确实有垄断，但是我却更加趋向于作者在前作《娱乐至死》中所描绘的场景。当然，如果后面我有了新的体会，还会回来补充的。实际上这两章的内容都有些让我似懂非懂，但是下一章的内容却可以说是醍醐灌顶，打开了一种新的思维方式。</p>]]></content>
      
      
      <categories>
          
          <category> 书评 </category>
          
          <category> 《技术垄断》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术垄断 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《技术垄断》第四、五章 难以把握的世界，崩溃的防线</title>
      <link href="/2023/08/10/%E3%80%8A%E6%8A%80%E6%9C%AF%E5%9E%84%E6%96%AD%E3%80%8B%E7%AC%AC%E5%9B%9B%E3%80%81%E4%BA%94%E7%AB%A0-%E9%9A%BE%E4%BB%A5%E6%8A%8A%E6%8F%A1%E7%9A%84%E4%B8%96%E7%95%8C%EF%BC%8C%E5%B4%A9%E6%BA%83%E7%9A%84%E9%98%B2%E7%BA%BF/"/>
      <url>/2023/08/10/%E3%80%8A%E6%8A%80%E6%9C%AF%E5%9E%84%E6%96%AD%E3%80%8B%E7%AC%AC%E5%9B%9B%E3%80%81%E4%BA%94%E7%AB%A0-%E9%9A%BE%E4%BB%A5%E6%8A%8A%E6%8F%A1%E7%9A%84%E4%B8%96%E7%95%8C%EF%BC%8C%E5%B4%A9%E6%BA%83%E7%9A%84%E9%98%B2%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="第四章-难以把握的世界"><a href="#第四章-难以把握的世界" class="headerlink" title="第四章 难以把握的世界"></a>第四章 难以把握的世界</h2><p>“任何愚蠢至极的思想都会有人相信，你总是能找到一个教授相信这样的思想。”——门肯</p><p>在当今社会，互联网已经成为了我们了解社会的最大来源。尽管我们本身并未接触过的知识，如果其中展现出了一些所谓的科学研究手段，我们就会深信不疑地奉为真理，尽管得出的结论可能是任何作用都没有的屁话。造成这一现象的原因是，技术的运行和上帝之道一样，即令人生畏，对于绝大多数人来说，又十分神秘莫测。</p><p>在技术统治时代的早期，学校成了技术统治文化的第一种世俗管理机构。学校使一些信息的流动变得合法化，也就是那些他们认为学生需要掌握的知识，而另外一些被认为是无关紧要的信息被排除在体系之外，尽管在这方面可能会有许多书籍，但对于绝大多数学生来说他们并不会接触这些信息。这样，学校就成了管理信息生态的手段，它在本质上是一种信息免疫机制，启到了筛选信息的功能。</p><p>19世纪电报的发明改变了这一切。在电报之前，信息的流动速度只能和火车一样快，每小时56千米。在这个时期信息只能在局部范围内引起人们的兴趣，也只能用来理解和解决具体的问题。但是电报的发明使得运输和通信首次分离开来，电报技术产生了不受语境拘束的信息，几百千米外的故事忽然就变成了触手可及的信息，电报第一次把信息变成了商品，在此基础上报纸应运而生。摄影技术的诞生使得图像不只是文字的补充，更有取代的倾向，成为我们理解现实的主要手段。到了20世纪，无线电报、摄影技术等促成了广播时代的到来。而今天，个人计算机（包括移动手机，作者生活的年代还没有出现今天的智能手机）的出现将人类带入了一个全新的时代，信息的产生和流动速度空前提高，信息杂乱无章的出现，并不指向具体的人。</p><p>在技术垄断时期，一个典型的问题是，技术垄断的信息免疫机制是难以操作的机制。对于互联网上海量的信息，我们没有什么免疫机制，任凭算法推荐将我们带入信息的茧房之中，在过剩的信息中完全迷失。信息不再是帮助我们解决问题的朋友，而是变成失控的猛兽，将整个文化拖下水，这正是这个难以把握的世界的开端。</p><h2 id="第五章-崩溃的防线"><a href="#第五章-崩溃的防线" class="headerlink" title="第五章 崩溃的防线"></a>第五章 崩溃的防线</h2><p>由此可见，给技术垄断下定义的一个办法就是说，抵御信息过剩的防御机制崩溃以后，社会遭遇的后果就是技术垄断。技术产生的信息压制了文化，某一种文化试图把技术作为工具传播自己，但事实证明，技术有自己偏爱的文化传播趋势，任何强加于此的文化终将失败。当我们无法界定什么信息是有意义或者无意义时，信息就成了混乱之源而不是秩序之源。我们只能跟着技术自身的趋势而走。</p><p>在技术统治时代，除了学校之外，家庭也是一个典型的信息控制系统。父母的作用就是要排除损害家庭宗旨的信息，由此界定了儿童的定义，这在作者的另一本书《童年的消逝》中已经有了很详细的讲解。当电视和互联网变成了孩童获取信息的主要来源，孩子们获取信息的手段实际上就已经和大人们没有任何区别，也就是说失去信息控制的直接结果就是造成了“童年的消逝”，当今人们所感叹的“早熟”，实际上就是这种结果的具体体现。</p><p>任何理论得到过多的信息支撑时，这些信息基本上就失去任何意义了。因为理论的功能就是过分的简约，以此来帮助人组织、掂量和排除信息。而当我们日复一日地获取着一些支撑这些理论的信息时，就是在做无谓的重复。因为我们只需要理解并使用的理论本身却给我们增加了过多不必要的时间浪费。</p><p>对于信奉《圣经》的人来说，《圣经》就是最好的信息防御机制，它告诉他们什么信息是有用的（如福音书），让他们避开了“有害的信息”，于是他们的行为就获得了意义，并且目的明确，而且他们相信自己的生命有了道德权威，并且有了意义。相反，如果一种文化的理论不给道德领域可以接收的信息提供指引，而放任信息自由流窜，那么我们就可以将其视为技术垄断的文化。在今天，马克思主义正面临着技术垄断文化的挑战。在过去一个半世纪里，马克思主义的核心理念，即“一切制度性灾难和压迫都是阶级冲突的产物，因为人的意识是由其物质处境决定的”。但是今天海量的信息似乎在向我们展示，资本主义国家的工人似乎过得相当事宜，许多美国政客确信可以用自由民主取代马克思主义。</p><p>在原有的防线崩溃后，要控制技术产生的信息，最终也只能求助于技术手段。一种最为重要的手段是官僚主义。官僚主义在原则上是一种技术工作的协调机制，意在减少需要加工的信息量，排除细枝末节，只看要点来做出决策。官僚主义只有一个隐形假设：效率原则上是一切社会制度的目标，而它将为了达成效率不择手段地前进，而不考虑其他问题。这十分符合技术发展的气质，既然有能改进的点，有能提高效率的方法，那我们就应该去做。</p><p>但是，当官僚主义开始接管政治、社会和道德时，问题的严重性就会开始显现。官僚主义者往往不关注全局，他们只关心决策在多大程度上影响官僚体制的运行效率。官僚主义者往往对全局知之甚少，但是却认为自己可以并且应该统治一切。</p><p>专家的角色就是专注于一个知识领域，筛选现有的知识，剔除与问题无关的知识，并利用剩下的知识来解决问题。但是这背后隐藏着一个巨大的问题，当技术手段不能解决问题时，当我们并不需要考虑效率时，再继续套用这种方法的后果是灾难性的。这多见于与人交往的场景。例如在育儿上是不会有专家的，那些所谓的专家只是得到了一些所谓的技术方法，能够帮助父母更“好”的培养孩子，但实际上他们可能改变不知道培养的目的是什么，他们做的只是让孩子在最少的时间内记住过多的东西。</p><p>技术垄断时代的人们希望用技术手段来控制信息，但是实际上这种行为是行不通的，具体原因将在下一章中讲述。</p>]]></content>
      
      
      <categories>
          
          <category> 书评 </category>
          
          <category> 《技术垄断》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术垄断 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《技术垄断》第三章 从技术统治时代到技术垄断时代</title>
      <link href="/2023/08/10/%E3%80%8A%E6%8A%80%E6%9C%AF%E5%9E%84%E6%96%AD%E3%80%8B%E7%AC%AC%E4%B8%89%E7%AB%A0-%E4%BB%8E%E6%8A%80%E6%9C%AF%E7%BB%9F%E6%B2%BB%E6%97%B6%E4%BB%A3%E5%88%B0%E6%8A%80%E6%9C%AF%E5%9E%84%E6%96%AD%E6%97%B6%E4%BB%A3/"/>
      <url>/2023/08/10/%E3%80%8A%E6%8A%80%E6%9C%AF%E5%9E%84%E6%96%AD%E3%80%8B%E7%AC%AC%E4%B8%89%E7%AB%A0-%E4%BB%8E%E6%8A%80%E6%9C%AF%E7%BB%9F%E6%B2%BB%E6%97%B6%E4%BB%A3%E5%88%B0%E6%8A%80%E6%9C%AF%E5%9E%84%E6%96%AD%E6%97%B6%E4%BB%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>到十八世纪末，技术统治论已经步入坦途，而十九世纪的一系列广为人知发明将开始重新塑造我们的世界。这些发明包括留声机和电报（19世纪30年代）、转轮印刷机（40年代）、打字机（60年代）、跨洋电缆（1866）、电话（1876）、电影和无线电报（1895）。19世纪人们发明了“发明”本身。在这时期人们产生了两个理念：一是如果某事能够做，那就应该做。另一个是我们不再将人视为上帝的子民，而是视为消费者，这无疑是技术进步的最佳动机。</p><p>在技术统治时代，各种技术的出现冲击了旧的社会体制，直至其瓦解，并在其上诞生了更适合各种技术发展的资本主义社会。但是传统世界观却并没有完全消亡，原因十分简单，技术统治时代的公民知道，科学技术并不能给人提供生存的哲学依据，它们仍然只是我们用来完成各种工作的得力助手，所以他们仍然紧守着父辈们的哲学。尽管宗教所赖以生存的自然观已经坍塌，但人们仍然从中寻求生存的意义，他们仍然继续相信工具应当是自己的奴仆，而不是主人。这在今天可能更为明显，今天AI以前所未有的势头冲击着各个领域——尤其是在不久前还被人们认为是只有人类才能做的领域，人们开始游行抗议AI，这在以前是不可想象的，技术不仅不再是人们的奴仆，甚至打算完全取代这些曾经的主人。</p><p>技术垄断兴起后，传统世界观完全消失，因为技术垄断清楚任何替代它的选择。赫胥黎的《美丽新世界》对此做出了精彩的描述，不断进步的技术有其自己的思想，它重新定义宗教、艺术、家庭、政治和一切，并且清除任何其他选择。就在前几年，我们还认为AI不可能进入人类最宝贵的艺术创作领域，但是事实却证明，AI可以并且做的相当好，或许几年后我们对艺术创作的定义就将完全改变，原来的艺术创作者们突然发现自己变成了辅助AI创作的机器。</p><p>在几百年前的中国，人们可以知道，自己从出生到死去，社会基本上不会发生什么变化，尽管有，那也只是因为掌权者的改变带来的自然更替，换句话说社会完全在统治者的掌控之下，我们可以通过掌权者的想法知道社会的大致走向——掌权者的无能也是一种体现，起码我们能知道社会又要开始不安定，宫廷又会出现权力斗争。但是在今天却完全不一样。看似是统治者们在掌权这个社会，但是说实话没有任何人知道未来会是怎样的，我们完全被技术的发展拖着走，所谓的政策大多数是某些技术已经掀起了轩然大波后做出的反应。<strong>任何技术都能代替我们思考问题，这是技术垄断论的基本原理之一</strong>。</p><p>美国是第一个进入技术垄断时代的国家，他们的国民性也十分适合这种文化。泰勒在《科学管理原理》中明确提出管理的本质意义就是要解决劳动生产率最大化的问题，他认为人的批判并不稳妥可靠，因为其中主观性的内容太多。不能计量的东西要么不存在，要么没有价值。在量化的科学管理下，工人自己不必思考问题，而只需要按照按照工厂的标准去行动，而所谓工厂的标准，实际上就是技术能够最大化发挥的标准，本质就是技术自己“思考”出来的标准。</p><p>过去一百多年的学术研究冲击使得原有的信仰体系完全消亡，尼采宣布“上帝已死”，而达尔文的进化论更是给几千年的神学画上了句号。我们只剩下一个可以信任的东西，那就是技术。虽然我们不知道灵魂、天堂和神灵到底是怎么回事，但是飞机可以飞翔，抗生素可以治病，计算机能够毫不出错地完成任务——只有人会犯错。技术高歌猛进，传统信念贬值，这一切都将技术统治文化推进到了技术垄断文化。</p>]]></content>
      
      
      <categories>
          
          <category> 书评 </category>
          
          <category> 《技术垄断》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术垄断 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《技术垄断》第二章 从工具时代到技术统治时代</title>
      <link href="/2023/08/09/%E3%80%8A%E6%8A%80%E6%9C%AF%E5%9E%84%E6%96%AD%E3%80%8B%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E4%BB%8E%E5%B7%A5%E5%85%B7%E6%97%B6%E4%BB%A3%E5%88%B0%E6%8A%80%E6%9C%AF%E7%BB%9F%E6%B2%BB%E6%97%B6%E4%BB%A3/"/>
      <url>/2023/08/09/%E3%80%8A%E6%8A%80%E6%9C%AF%E5%9E%84%E6%96%AD%E3%80%8B%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E4%BB%8E%E5%B7%A5%E5%85%B7%E6%97%B6%E4%BB%A3%E5%88%B0%E6%8A%80%E6%9C%AF%E7%BB%9F%E6%B2%BB%E6%97%B6%E4%BB%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>对于时代的分类我们已经司空见惯，例如石器时代、工业时代和钢铁时代等词汇从小就出现在我们的教材当中。清楚的分类可以清晰地体现出某些新事物的发现对于整个社会所造成的影响。同样，基于技术对人类文化的影响程度，我们可以把文化划分为三种类型：<strong>工具使用文化，技术统治文化和技术垄断文化</strong>。</p><p>一切<strong>工具使用文化</strong>的主要特征都是相同的，那就是发明工具的目的主要是做两件事：一是解决物质生活里具体而紧迫的问题（例如风车用来提水灌溉、碾磨谷物），二是为艺术、政治、神话、仪式和宗教等符号世界服务（例如教堂）。这两种工具的共同特点都是并不会侵害它们所进入文化的尊严和完整性。这些工具顺应发明者的思想，只为了发明者的目的而工作，它们不会有自己的想法和导向，而是遵循着发明者的意愿而工作。当然也有极少数工具会影响着人们的信仰，最典型的例子就是武士刀，围绕着武士刀构成了一套完整的武士道精神理念。但是，这些工具并不会被认为是独立自主的，它们所象征的精神都是人为规定，完全处于社会体制或宗教体制的管束的。武士刀自己不会让武士们起来反抗封建君主，要怎么做还是完全依赖于使用者的自由想法。这也是工具使用文化的社会的共同点。</p><p>西方<strong>技术统治文化</strong>始于中世纪的欧洲，那时出现了三大发明：<strong>机械时钟，古登堡印刷机以及望远镜</strong>。机械时钟始于修道院，本来是修士们为了确定每天敲钟的具体时间而发明的，但是修士们没想到的是这项发明最终却改变了他们自己的生活：他们现在需要根据时钟的时间同步进行起居修炼。到了1370年，查理五世让全巴黎市民根据皇宫的钟表时间来调整自己的作息生活。人们发现统一的钟表时间对于商业活动有着绝佳的好处。最后，本来被发明用于服务上帝的发明证明它自己本身更加偏爱金钱。</p><p>古登堡发明的印刷机以及伽利略发明的望远镜（当然，第谷和开普勒也没有望远镜，但是第谷自己创造的天文观测仪器也能观测到相当好的结果）都对中世纪的欧洲造成了前所未有的冲击。但是讽刺的是，无论是古登堡还是伽利略，他们本人都无意造成这种冲击，甚至会反对这种冲击。哥白尼是一位虔诚的天主教徒，他这一辈子只出版过一本书，那就是《天体运行论》。事实上哥白尼本人并不怕教会的惩罚，并且这本书在出版后几乎没受到教会的任何处分，这可能是因为哥白尼本人应该根本没想过要和教会对抗什么，他本人并不相信自己的研究成果会瓦解神学至高无上的地位。开普勒则更进一步。他虽然在科学上提出了开普勒三大定律，为后来的万有引力定律和整个物理学做了奠基性的工作，但是其本人却还是一个典型的中世纪人。但是有一点例外：开普勒认为神学和科学应该加以区隔，“我尊重教士，但是我在哲学上证明，地球是球体，有两极，在宇宙中小得微不足道，在众多的星球之中快速漫游。”</p><p>开普勒的观点提出了技术统治论的基石：区分道德价值和思想价值。开普勒本人是路德教徒，在他被罗马教廷赶出教门后仍然真诚地信仰着上帝，他把太阳作为圣父和造物主的象征。但是虽然他本人也对计算得出的椭圆形轨道很不满意，但是他仍然不为了自己的信仰而修改自己得出的结果。这也体现了科学和神学之间不可调和的矛盾，而将这种矛盾更为清晰地表现出来的人是伽利略。伽利略发明了真正意义上的天文望远镜，而他所观测到的结果将成为整个神学的痛苦不安之源。伽利略虽然是虔诚的天主教徒，但他明确对《圣经》表示异议，认为教士没有资格对自然现象发表意见。</p><p>伽利略1642年去世，这一年艾萨克·牛顿出生。虽然牛顿本人更是一位虔诚的天主教徒，但是牛顿所点燃的名为现代科学的火焰却在接下来的几百年里燃烧了整个旧世界。他们不能想象一个没有上帝的世界，但是他们所构建的科学全部只关乎真理，而不关乎权力。他们本人是工具使用文化时代的人，但是他们却为技术统治论奠定了基础。</p><p>培根可以说是技术统治时代的第一人，尽管他本人几乎没有从事任何科学领域的研究，他提出的一系列科学的方法却比任何人更接近现代。他十分明确技术对于文化的影响，在《新工具》中提出了经验主义的哲学方法，他要论证<strong>建立在观察和实验基础上的科学归纳法才是我们认识世界最好的工具</strong>。培根十分重视发明对于社会和文化的影响，并且提出了很多促进科学和发明的主张，他的很多主张在今天已经成为了科学事业的基石。培根是技术统治时代的第一位学者，但是许多人加入他的行列还要等待很长的时间。但是趋势一旦形成，就再也不可逆转，人们逐渐形成了“知识就是力量”的理念，作为知识结晶的各种发明创造受到人们的热烈欢迎，相信教会力量的时代一去不复返，欧洲乃至整个世界走上了技术统治论的不归路。</p><p><img src="https://d08cdkzlxr.feishu.cn/space/api/box/stream/download/asynccode/?code=NjFlYjkyZjgyYjJiZTgxMTU3Yzk5NDcxZDlhYzA1NWVfdmlFUWQ0U2hTTGxzZjRFZ1VNYmpRdHc4Q3hDbHhPSWRfVG9rZW46WWlFUmI1TjNNb1A5M0x4TWxtemNsS3RZblNiXzE2OTE1OTQ4Mzg6MTY5MTU5ODQzOF9WNA" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 书评 </category>
          
          <category> 《技术垄断》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术垄断 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《技术垄断》第一章 塔姆斯法老的批判</title>
      <link href="/2023/08/09/%E3%80%8A%E6%8A%80%E6%9C%AF%E5%9E%84%E6%96%AD%E3%80%8B%E7%AC%AC%E4%B8%80%E7%AB%A0-%E5%A1%94%E5%A7%86%E6%96%AF%E6%B3%95%E8%80%81%E7%9A%84%E6%89%B9%E5%88%A4/"/>
      <url>/2023/08/09/%E3%80%8A%E6%8A%80%E6%9C%AF%E5%9E%84%E6%96%AD%E3%80%8B%E7%AC%AC%E4%B8%80%E7%AB%A0-%E5%A1%94%E5%A7%86%E6%96%AF%E6%B3%95%E8%80%81%E7%9A%84%E6%89%B9%E5%88%A4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>“他们接受的将是大量的信息，而不是老师的真传”——塔姆斯法老</p><p>在柏拉图的《斐德罗篇》中记载了埃及法老塔姆斯的故事，塔姆斯的朋友特乌斯发明了文字，并向塔姆斯炫耀，声称文字可以”增加埃及人的智慧，强化他们的记忆，找到了改善记忆和智慧的担保书”。塔姆斯提出了怀疑，”技艺发明人并不是评判发明利弊的最佳人选，只有使用者才能作出恰当的评判。识文断字的人可能不再使用记忆，而是成为健忘的人。他们接受的将是大量的信息，而不是老师的真传”。</p><p>塔姆斯的故事背后传达的是一个直到现在都很为重要的思想，那就是技术本身有其导向，而不受发明技术的人的控制，这在人工智能迅速发展的今天尤其重要。尽管特乌斯信誓旦旦地认为自己看到了文字的无限好处，但是他却没有办法让人们都用文字来去做他认为重要的事情。特乌斯希望人们用文字来记录和传播真理，却忽视了文字是否会代替真理本身。换言之，技术在被创造出来之后，事实上就不再受发明者的意愿而控制了，技术不是中性的技术，它会按照自己内部的属性去改变一切。</p><p>弗洛伊德说：我们的发明只不过是手段的改进，目的却未见改善。毋庸置疑，技术在过去几百年取得的成就让每一个人惊叹，新技术必然会源源不断的出现，这是不可否认的事实。所以，我们要做的，是暂时放下对于新技术的狂热，相对冷静、客观地衡量技术带来的利弊。也就是说，抛去手段，来仔细思考一下这些目的是否因为手段的改变而变得有所不同。</p><p>发明文字的人一定没有考虑到，文字会重塑我们的世界，而不仅仅是使“口头语言世界的智慧更为广泛地传播和更久地保存下来”。当然，文字做到了这些，但是事实上文字最后却改变了“真理”、“智慧”这些词汇原有的意义。或许在口头语言的时期，德高望重的老者记忆中的内容就是所谓的真理，但是文字出现后，有文字记载的内容将会取而代之。这些内容到底出自哪里根本无关紧要——重要的是，在这两者之间出现冲突时，哪一种会被认为是真理。或许文字的出现还不能明显地体现出这些差别，但是在古登堡时代，这一切将会被改写。空前数量的印刷品远超过了一个人能掌握的所有内容，并且彻底地改变了我们对于“真理”的定义。</p><p>上述分析表明，一种媒介不仅仅是一种媒介，新旧媒介之间的竞争（例如口头语言和文字，以及印刷文化）也不仅仅是媒介的竞争。我们应当意识到，每一种媒介都有一种意识形态偏向，而媒介之间的竞争本质上是背后的意识形态的竞争。在印刷机对手抄本发动攻击时，实际上还是背后的印刷文明对传统文明的攻击。每一种技术对于一些东西有着自己的想法，当他们与旧技术进行竞争时，实际上也是改变人们对于这种东西的理解的过程。现代一个典型的例子就是，iPhone改变了我们对于智能手机的定义。在iPhone出来之前，我们可能对智能手机有着天马行空的想象，但是iPhone出来之后，我们认为，这就是智能手机，或者说，智能手机就应该是这样——一块完整的电容屏，不需要其他多余的按键。</p><p>尽管有很多用于特定环境的技术改进，他们大多数只对某一特定领域的内容产生影响。不过在很多研究该领域的科学家看来，技术和自然界一样，也是有生态的，一项技术不会独立地被创造，它的出现将对整个生态产生影响。也就是说，一种新技术并不是什么东西的增减损益，它将在一定程度上改变一切。在现代，我们经常考虑的一件事是网课对于大学教育会带来哪些方面的改善或者坏处。但是这样做是毫无意义的。原因就在于，网课有可能重塑整个大学的教育体系（现在其实已经有很大的趋势了，我敢说对于绝大多数学生来说，看网课的时间实际上已经超过了在大学课堂上听老师讲课的时间），被重塑后的体系甚至可能会以网课为主，大学课程的设立将建立在辅助网课的基础上。尽管大学的体系目前看上去和几十年前似乎是一样的，但是并不是说没有这种改变的可能性。所以当我们把目光稍微拉远，就会发现之前的问题是没有任何意义的。大学认为大学生就应该按照学院的安排，按照时间来一节课一节课地按部就班的学习，但是网课不这么认为。网课认为大学生就应该随时随地，想什么时候学任何内容，就可以去学。</p><p>基于此，我们可以看到，技术已经在相当程度上改变了我们身边的一切，不仅仅是物质上，更包括我们日常的概念——也就是我们的世界观。跨越两千年，我们却更应该静下来倾听塔姆斯法老的告诫，因为我们已经来到所谓“技术垄断”的时代的十字街口。</p>]]></content>
      
      
      <categories>
          
          <category> 书评 </category>
          
          <category> 《技术垄断》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术垄断 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>引言与深度学习的历史趋势</title>
      <link href="/2023/08/02/%E5%BC%95%E8%A8%80%E4%B8%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%8E%86%E5%8F%B2%E8%B6%8B%E5%8A%BF/"/>
      <url>/2023/08/02/%E5%BC%95%E8%A8%80%E4%B8%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%8E%86%E5%8F%B2%E8%B6%8B%E5%8A%BF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>如果说近些年最火的话题，人工智能无疑是其中之一，ChatGPT的成功应用使得人们第一次真正意识到了AI的强大以及发现AI已经发展到了如此强大的地步。长久以来，抽象和形式化的任务对于人类而言都是最困难的脑力任务，但讽刺的是这对于计算机来说却是最容易的，alpha GO早已证明了这一点。相对的，对于人类来说最为简单的主观、直观的非形式化内容，对于计算机来说却是最为困难的，因为我们的此方面感觉来源于日常生活中的大量积累，而计算机要想达到同样的效果，必须至少接受相同的知识，这也是为什么在人工智能概念出现后几十年内技术都没有什么显著的进步——我们缺乏足够的数据集来训练我们的模型。但是现在不一样了，互联网时代的到来给人们带来了空前的数据量，几乎可以涉及到现代社会的方方面面的海量数据无疑成为了训练模型的绝佳来源，也就是在此环境下，大语言模型ChatGPT应运而生。</p><p>早期的人工智能项目采用知识库方法，即将世界的知识用形式化的语言进行硬编码来让计算机理解，但是都失败了。这表明AI必须具备自己从原始数据中提取模式的能力，这种能力我们称为机器学习。对于机器学习来说一个重要的点是对于给定数据表示形式的依赖，我们需要先提取出一个合适的特征集，然后才能将特征集提供给简单的机器学习算法。例如，在使用逻辑回归判断产妇是否适合破腹产时，AI系统会依赖几条相关信息，如是否存在子宫疤痕，但是如果将病人的核磁共振扫描图交给AI，它将无法作出任何有效的预测，原因很简单，在AI看来核磁共振扫描图就是一堆像素点，要想在像素点和并发症之间作出逻辑判断是不可能的。</p><p>然而，实际上对于很多任务来说，我们并不知道应该提取哪些特征。例如，我们想让机器判断一张图片中是否有汽车，我们很难根据像素点来描述汽车像什么，因为一个汽车的图像很可能因为环境和拍摄角度的不同而表现的很不一样。解决这个问题的方法是表示学习。一个典型的例子是自编码器，自编码器由一个编码器和一个解码器函数组合而成，编码器函数把输入数据转换为一种不同的表示，而解码器函数将这个新的表示转换为原来的形式，这样我们就得到了一个新的表示。我们希望新的表示能尽可能多的保留信息并且有更好的特性。</p><p>在设计用于学习特征的算法时关键的地方是分离出能解释观察数据的<strong>变差因素</strong>。但是实际的困难是多个变差因素可能影响到我们能观察到的每一个数据。例如，一张夜间拍摄的红色汽车的图片可能使得很多像素点都很接近黑色，而拍摄视角对于汽车轮廓起着决定作用。而对于识别汽车轮廓来说，我们并不想知道是哪个角度拍摄的，我们只想知道图片中是不是有汽车，这就理清变差因素并且忽略我们不关心的因素。</p><p>但是，我们很难从原始数据中提取如此高层次抽象的特征。对此，我们引入了<strong>深度学习</strong>来通过较简单的概念构建复杂的概念。例如，我们要识别人，可以发现人的轮廓和边角是由边线定义的，边线在可见层是由像素点组成的。在下图中，第一层可以通过比较相邻像素点点亮度来识别边缘，而有了第一层描述的边缘，第二层可以容易的搜索可识别为角和轮廓的边的集合。有了对于角和轮廓的图像描述，第三层就可以找到特定轮廓和角的集合识别为对象部分。最后通过对象部分就可以确定图像中存在的对象。</p> <img src="/2023/08/02/%E5%BC%95%E8%A8%80%E4%B8%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%8E%86%E5%8F%B2%E8%B6%8B%E5%8A%BF/1280X1280.JPEG" alt="img" style="zoom:50%;"> <p>目前主要有两种度量模型深度的方式。第一种是基于评估架构所需执行的顺序指令的数目，例如在上述例子中深度就为4。另一种是在深度概率模型中使用的方法，它将描述概念彼此如何关联的图的深度视为模型深度，例如，在概念的图仅包括两层时，如果我们细化每个概念需要N次计算，那么计算的图将包括2N层。</p><h1 id="深度学习的历史趋势"><a href="#深度学习的历史趋势" class="headerlink" title="深度学习的历史趋势"></a>深度学习的历史趋势</h1><p>虽然深度学习似乎是近几年才出现的东西，但是其历史发展却可以追溯到上世纪40年代。深度学习的最早雏形出现在控制论中。我们今天看到的最早的学习算法，其核心都是在模拟生物学习。当时的一个重要思想是大脑作为很好的例子证明智能行为是可能的，那么只要我们能在算法上模仿大脑，理论上我们就可以制造出”人工智能”。一个代表性的例子是<strong>线性模型</strong>，线性模型希望学习一组权重来计算他们的输出。但是它具有很多的局限性，最著名的就是他们无法学习异或函数（1），这也导致了第一次神经网络大衰退。自此之后神经科学也不再是深度学习领域的指导，而只作为灵感来源。</p><p>80年代的联结主义的核心思想是，当网络将大量简单的计算单元连接在一起时可以实现智能行为。其中分布式表示的概念在今天仍然具有非常重要的意义。其思想是，系统的每一个输入都应该由多个特征表示，并且每一个特征都应该参与到多个可能输入的表示。例如，假设一个能识别红色，绿色和蓝色的汽车，卡车和小鸟的系统，一种表示输入的方法是使用九个神经元，分别对应红汽车，绿汽车，蓝汽车，红卡车等。改善的方案是使用六个神经元，三个神经元描述颜色，三个神经元描述对象身份。然而，在当时由于训练量的匮乏，深度学习在与机器学习的其他领域如核方法和图模型的竞争中显得心有余而力不足，这导致了神经网络的第二次衰退。</p><p>转折点发生在2006年。人们发现，在八十年代就出现的很多算法现在能工作的非常好，只是当是缺乏数据和硬件来训练而显得效果不佳。但现在不一样了，随着硬件技术的极大进步以及社会数字化带来的海量数据量，我们发现当将训练的样本数量提高到一定数量级时，训练出来的模型的效果将发生质的变化，这也是chatgpt的原理。随着未来训练数据量的近一步提高，我们有充分的理由相信人工智能大模型的精度与能力将上升到一个可怕的程度。</p><p>（1）<a href="https://blog.csdn.net/maum61/article/details/90287897">https://blog.csdn.net/maum61/article/details/90287897</a></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重大企划！</title>
      <link href="/2023/07/03/%E9%87%8D%E5%A4%A7%E4%BC%81%E5%88%92%EF%BC%81/"/>
      <url>/2023/07/03/%E9%87%8D%E5%A4%A7%E4%BC%81%E5%88%92%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="重大企划！！！"><a href="#重大企划！！！" class="headerlink" title="重大企划！！！"></a>重大企划！！！</h1><p>可以算是心血来潮，也可以算是一直以来的愿望，在几个月前很黑暗的时候想到过，但是之后也不了了之了。但是随着现在心境的转换以及本着想做就做的原则，我觉得是时候把这件令人兴奋的事情拿出来提上日程了！</p><p>没错，这就是针对之前的未来规划（全力回避FLAG）综合考虑后得出的结论，那就是在七月和八月，利用好这两个月的时间，做出一部自己的独立游戏出来！</p><p>是的，独立游戏，会采用unity开发，并且预计会用上相当多的AI技术作为辅助，最后以一个游戏的形式展示出来，属于我自己的独特的产品展示。</p><p>说老实话，我觉得这个想法无异于痴人说梦，因为其实我在各方面来说都只是一个技术小白罢了，并且我如果真的去做一款自己喜欢的游戏的话，我肯定会把期望拉的很高的，这也会导致我最后很大概率无法完成这一个作品吧。</p><p>但是，我还是觉得，自己一个人能做出一款具有可玩性和比较高的审美的作品，是一件非常让人兴奋的事情。对于现在的我来说，能够让我兴奋起来，觉得“能做这件事情真好啊”，这就已经足够珍贵了。</p><p>这也许也是迈出痛苦的深渊，走向新世界的重要的一步。</p><p>后续我会专门开一栏记录游戏的进展，一起加油吧！</p><p><img src="/2023/07/03/%E9%87%8D%E5%A4%A7%E4%BC%81%E5%88%92%EF%BC%81/sakura1.jpg"></p><blockquote><p>那种事情，真的可以做到吗？</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 日有所记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅谈《命运石之门》</title>
      <link href="/2023/06/14/%E6%B5%85%E8%B0%88%E3%80%8A%E5%91%BD%E8%BF%90%E7%9F%B3%E4%B9%8B%E9%97%A8%E3%80%8B/"/>
      <url>/2023/06/14/%E6%B5%85%E8%B0%88%E3%80%8A%E5%91%BD%E8%BF%90%E7%9F%B3%E4%B9%8B%E9%97%A8%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>刚刚看完了《命运石之门》这部作品（第一部与剧场版），趁着记忆还比较鲜明，在这里浅谈一下感想。<br>石头门无疑是一部久负盛名的作品了，虽然达不到《巨人》在当时的高度，但是在当年神作频出的年代，能够获得这么久且高的认可，不得不说，这部作品一定又&#x3D;有它的独特之处的。</p><p>石头门无疑是一部主打时间穿越的作品。时间穿越无疑是一个经久不衰的话题，但是对于我自己来说，我在观看这类作品的时候一直是比较不舒适的，不论是主打时间穿越的作品，还是哪些作品中有着时空穿越的话题，都会引起不适。在我看来，在文学作品中引入时空穿越的作者，大多都想设计一个闭环来达到让读者在最后能发出“啊，原来是这样的惊叹”，可以说是用来达成传统的“首尾呼应”的一种手法吧，最喜闻乐见的手法就是人物在最后所做的事情最后影响了故事最开始的主人公的选择。在这里点名批评某巨人作者，他在最后就是明显的想使用这种方法来圆自己在第一话中为了艾伦所设计的流泪。但是使用时空穿越这一种手法难免会遇到最经典的祖父悖论，人们都是生活在线性时空的动物，我们都是因果论的信徒，所以在作品中使用时空穿越，让之后发生的事情来干涉之前的话，永远不可避免要直接来解释祖父悖论，如果不能很好地通过所谓平行宇宙来解释的话，其实会引起很严重的逻辑问题，对于像我这种的观众来说，就和看了答辩一样难受，因为故事也是要讲逻辑的，这样公开在逻辑上拉答辩的做法恕我难以接受。</p><p>另外一个让我看起来比较难受的可能是男主的性格，虽然我也中二吧，但是男主确实语言动作过激，比较不符合逻辑（可能是刚看完半泽直树后对逻辑的要求程度突然变高了吧），甚至到了让人有点难受的地步（后面实锤傲娇后确实感觉好了不少hh,不过前期看着还是比较难受的），不过也可能是我最近对这种过激性格比较反感吧，总之要看完还是要耐着点性子的。</p><p>另一方面就是我觉得感情线看起来也不是很明晰，主要是针对回归命运石之门线之后，红莉栖对于男主的感情，其实是处于一个很奇怪的状态的，因为事实上这个世界线中的红莉栖并没有和男主以及大家共同度过那么多的实验室的时光，对于作为观众的我们，拥有上帝视角，可能会觉得这些非常自然，可是只要稍加思索就能发现，这实际上是相当不合逻辑的，试想，两个就见过两面的人（在这个世界线中）就说我喜欢你，然后就接吻了，虽然介绍了很多红莉栖“做梦”，回忆起其他世界线的记忆，可以一定程度上的解释这些，但是就我个人的观看体验来说我还是比较存疑的。</p><p>不过，很久没一口气看完一部20多集的番剧了，我当然还是觉得这是一部比较高水平的作品的，包括其中的一些铺垫，有些很容易让人想出，有一些却确实能让人发出“啊，原来是这样”的感叹。不过，在故事情节方面肉眼可见的和巨人还是有相当的差距的，就思想的深度来说，和寄生兽也有一定的差距，是一部好作品，但是一时我可能还不能说出什么特别闪耀的点，可能是我一口气看完后没来得及仔细品尝吧。我之后如果有了一些新的感悟还会回来重新修改我现在的思考的。</p><p>————————————</p><p>看完《命运石之门0》后，我才深深的感觉到，为什么这是一部值得被称为神作的作品了。</p><p>在前面我也谈到了，仅仅把第一部拿出来当作一个独立的部分来评价的话，我并不会给它很高的评价，主要原因可能还是这本来就是一部以剧情闻名的作品，但是仅仅看第一部的话很难对其剧情做出很高的评价，主要就是在于其逻辑的自洽性是很差的。另外，在人物性格的塑造方面，对于男主的性格塑造非常的单一、不具体。</p><p>但是，0却改变了这些，足以给这部作品打上神作的标签。</p><p>0的故事可以看作是对于上一部的补充，故事讲述了在另一条世界线上，冈部选择了通过牺牲红莉栖来拯救真有理的世界。而死去的红莉栖则以“amadues”的人工智能的形象出现。这一部分在剧情上补全了整个故事的逻辑，特别是介绍了未来线中的冈仑的故事，让整个故事线显得非常严谨（尽管关于时间穿越的悖论的不严谨性是不可能删除的，但是如果直接按照作者设立的世界线收束的世界观来说，是可以自洽的，所以不必死死纠缠在科学上的可行性即可）。在人物性格塑造方面，不仅是丰富了作品中原有的人物形象，最令我耳目一新的是对于男主形象的塑造。可以说，看完0后对男主的印象简直和看完上一部后的天差地别，但是又不会显得特别的突兀，而是让男主的形象显得更加饱满和立体。</p><p>在0中，冈部一登场就是一个深沉、阴郁的形象，与上一部中大大咧咧，有一种神经质的感觉截然不同。这一开始会认为是在经历了这么多次轮回后收到刺激而形成的性格。这确实是直接原因，但是在看到后面后却可以知道，男主在上一部作品中表现出的接近疯癫的状态其实并不是他原本的常态，而是当初为了真有理而做出的改变，并且在此之后一直保持着这样的状态。这样的角色塑造无疑使得男主的形象变得饱满起来，也可以消除之前的关于男主形象塑造方面的种种疑问（例如这样什么都不会的男主，仅仅因为主角光环而得到这么多人的信任）。</p><p><img src="/2023/06/14/%E6%B5%85%E8%B0%88%E3%80%8A%E5%91%BD%E8%BF%90%E7%9F%B3%E4%B9%8B%E9%97%A8%E3%80%8B/4.png" title="这一经典画面在不同地方都得到了不同的诠释"></p><p><img src="/2023/06/14/%E6%B5%85%E8%B0%88%E3%80%8A%E5%91%BD%E8%BF%90%E7%9F%B3%E4%B9%8B%E9%97%A8%E3%80%8B/2.png" title="虽然最后冈部的回归还是有点奇怪，不过可能是因为我还是喜欢看起来很NB的男主吧hhh"></p><p>关于新加的角色，我的感觉是除了真帆的塑造比较好之外，其他角色都给人一种工具人的感觉。例如篝，对于真有理角色的塑造有着很好的效果，但是其自身却很难给我留下比较深的印象。而由纪就更是如此，她对于桶子和 铃羽的关系和性格塑造就起了很好的升华作用。</p><p>作为本作剧情的结尾和高潮部分，最后冈部几千次的跳跃确实是很震撼人心的。但是我个人觉得本作最精彩的部分还是各种地方的前后呼应以及将暗喻的手法使用的淋漓尽致。例如在在作品的最后，在时间的遥远处，冈部和真有理的见面其实在很早之前就有暗示（不记得是哪一集了，但是确实是有的）。</p><p><img src="/2023/06/14/%E6%B5%85%E8%B0%88%E3%80%8A%E5%91%BD%E8%BF%90%E7%9F%B3%E4%B9%8B%E9%97%A8%E3%80%8B/3.png"></p>]]></content>
      
      
      <categories>
          
          <category> 漫评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命运石之门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一篇随记</title>
      <link href="/2023/06/14/%E4%B8%80%E7%AF%87%E9%9A%8F%E8%AE%B0/"/>
      <url>/2023/06/14/%E4%B8%80%E7%AF%87%E9%9A%8F%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="7dd29a8804ce0426bd5b23ca699012c944035bce6514b263f176b0f2bba2ede5"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这是屋主的最私人日记，请输入密码观看</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 日有所记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全力回避Flag！</title>
      <link href="/2023/05/30/%E5%85%A8%E5%8A%9B%E5%9B%9E%E9%81%BFFlag%EF%BC%81/"/>
      <url>/2023/05/30/%E5%85%A8%E5%8A%9B%E5%9B%9E%E9%81%BFFlag%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>终于经历了火力全开的五月份，一整个月基本上就是在图书馆度过的，偶尔也会去实验室干点活。也实实在在的感受到了曾经自己熟悉的感觉，那种真正愿意为了某些事情而拼尽全力的感觉。一个人在某处站着的时候，眼中满是曾经的自己，又或者是，曾经自己眼中未来真正的自己。<br>思考了很多，也尝试了很多，改变了许多。<br>但是，这并不意味着现在已经是什么值得高兴的时候，也不是什么应该就此放松的时刻。一切都还刚刚开始，当我重新开始严肃对待每一件事情的时候，我依然发现自己在能力上的很大的欠缺。如果说之前是我根本没有去在意这些问题，以一种完全不在乎的心态来做事，那么现在，我仅仅是重新发现了这些早已存在在我的身上的缺点而已。<br>这些缺点，曾经的我尝试去解决，但是无果而终。<br>然而，事实上，我确实一直都在和这些问题抗争，也许最后我将不得不承认我永远无法彻底摆脱这些，但是，重要的是一直抗争着的过程，而不是那个所谓的“战胜”的结果。<br>没错，也许明天我就会逝去，从某种意义上来说，这也何尝不是一种“战胜”呢？因为我再也没有机会去犯错了。追求最后“彻底战胜”的结果就是这样。因为，生活并不是游戏，我们没有一个关卡一个关卡的闯关，没有一个战胜了之后就永远不会复活的Boss,也许我们也可以将它划分成一个又一个阶段，但是生活永远不会消失，它一直都会在那里,在我们活着的时间里，永远没有Game over。<br>所以，记录斗争的历程即可，无需过多考虑那虚无缥缈的结果。</p><hr><p><img src="/2023/05/30/%E5%85%A8%E5%8A%9B%E5%9B%9E%E9%81%BFFlag%EF%BC%81/flag.png"><br>关于flag，确实立了很多，而且基本上全部都被收回了，但尽管如此，心中还是应该充满期待，永不放弃那一丝的希望，只要我还活着，有些目标无论如何我都不想永远地去放手。<br>五月之后，六月、七月和八月，是个基本上没有任何强制性活动的时间，只有两门需要重视的结课考试，如果要躺的话，确实可以躺的很平。就像以往的任何时间一样。<br>实话实说，每当遇到这种情况，我也会本能的来立下一堆flag,最后看着他们消失在风中。<br>不过，这也算一大特色了把~我也知道，就算实现不了，我的心里也会一直一直装着这些东西。有些东西，我还是一直想要将它们实现的。趁着现在还有精力，我还有能力的时候，放任那些想法消逝在时间的长河当中，才是最不可饶恕的行为。<br>下面也算是未来三个月的一些to do list,我会挑选一些事情来完成（全部完成肯定是不可能的啦hhh,说老实话，能完成其中一个我都觉得不大可能）：</p><p>1.<strong>较为熟练的掌握Unity技术，blender和C#。</strong>说实话这个也许是最可能实现的，因为这三个月以及之后肯定是要频繁的使用的，而且这是一件一直在做的事情，如果说这三个月要有什么不同的话，那么就是没有那么多的考试，反而拥有更多自由的时间了。虽然说这自由有可能最后反而成为了最后的阻力而不是当初所设想的动力，但是还是希望能够克服这些不利因素。不过，这也算一个比较宽泛的概念，因为“熟练”本来就是一个模糊的概念，从具体一点来说，我希望之后能在博客上面更多的分享总结一些我在学习以及项目过程中的一些浅薄的技术分享文章。</p><p>2.<strong>推完数学一三本书的基础知识。</strong>具体指标是把三本教材都给先啃一下（摘抄，看书），练习题的话因为还没确定有哪些，初定的目标是把自己手头上买的复习书上面的习题都写一遍。无论最后是否决定考研，这些基础数学知识的强化也是至关重要的，毕竟我也已经不止一次感受到了前一年的摆烂对现在专业课学习上面造成的严重问题。除此之外，像模电数电这样的之前确实没学的课程也有可能拿回来重新学一边（只要我觉得有必要）。同时，学习完的学习笔记也和之前一样上传到博客当中。</p><p>3.<strong>继续搭建好这个网站。</strong>这个就不多说了hhh。</p><p>4.<strong>一定程度上提高霓虹语水平。</strong>这就是flag杀手。经典每年暑假flag保留项目了hhh。来看看这次能不能有什么不一样的吧。我倒是有可能把日语方面的练习上传到网站上面，不过那是相当无聊并且繁琐的，最终也会和之前每天单词打卡一样变为无趣和无效，我可能还是会等自己有能力整点上面花活的时候再上传hhh。</p><p>5.<strong>敲完一篇小说。</strong>如果说霓虹语，绘画是保留项目，这个可能就是始祖级别的了，不过还是让我们拭目以待吧!</p><p><img src="/2023/05/30/%E5%85%A8%E5%8A%9B%E5%9B%9E%E9%81%BFFlag%EF%BC%81/flag2.png"><br>暂时就想到这么多，还有什么之后再补充吧，希望这个暑假小屋能够有更多的烟火气息吧。看到这么变态的安排的人也不必过于惊讶，屋主本来就是一位在计划上重拳出击，在执行上唯唯诺诺的人~</p>]]></content>
      
      
      
        <tags>
            
            <tag> 日有所记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数理方程与特殊函数知识点总结</title>
      <link href="/2023/05/16/%E6%95%B0%E7%90%86%E6%96%B9%E7%A8%8B%E4%B8%8E%E7%89%B9%E6%AE%8A%E5%87%BD%E6%95%B0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
      <url>/2023/05/16/%E6%95%B0%E7%90%86%E6%96%B9%E7%A8%8B%E4%B8%8E%E7%89%B9%E6%AE%8A%E5%87%BD%E6%95%B0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>以下是屋主自己整理的数理方程与特殊函数知识点总结（教材是华中科技大学的数学物理方程与特殊函数），里面内容比较全面，但是针对的是华中科技大学的考试部分，并且其中关于格林函数的具体应用方面的内容比较少，如有错误请向我指出，我将不胜感激！<br>（Safari和部分手机端可能无法打开）</p><div class="row">    <embed src="/pdf/数理方程与特殊函数.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
      
      
      <categories>
          
          <category> 课程学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数理方程与特殊函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>星野爱美图欣赏</title>
      <link href="/2023/05/06/%E6%98%9F%E9%87%8E%E7%88%B1%E7%BE%8E%E5%9B%BE%E6%AC%A3%E8%B5%8F/"/>
      <url>/2023/05/06/%E6%98%9F%E9%87%8E%E7%88%B1%E7%BE%8E%E5%9B%BE%E6%AC%A3%E8%B5%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>“我爱你们，这句话，一定不是谎言。”</strong><br><img src="/2023/05/06/%E6%98%9F%E9%87%8E%E7%88%B1%E7%BE%8E%E5%9B%BE%E6%AC%A3%E8%B5%8F/IMG_0499.JPG"><br><img src="/2023/05/06/%E6%98%9F%E9%87%8E%E7%88%B1%E7%BE%8E%E5%9B%BE%E6%AC%A3%E8%B5%8F/IMG_0500.JPG"><br><img src="/2023/05/06/%E6%98%9F%E9%87%8E%E7%88%B1%E7%BE%8E%E5%9B%BE%E6%AC%A3%E8%B5%8F/IMG_0501.JPG"><br><img src="/2023/05/06/%E6%98%9F%E9%87%8E%E7%88%B1%E7%BE%8E%E5%9B%BE%E6%AC%A3%E8%B5%8F/IMG_0502.JPG"><br><img src="/2023/05/06/%E6%98%9F%E9%87%8E%E7%88%B1%E7%BE%8E%E5%9B%BE%E6%AC%A3%E8%B5%8F/IMG_0503.JPG"><br><img src="/2023/05/06/%E6%98%9F%E9%87%8E%E7%88%B1%E7%BE%8E%E5%9B%BE%E6%AC%A3%E8%B5%8F/IMG_0522.JPG"><br><img src="/2023/05/06/%E6%98%9F%E9%87%8E%E7%88%B1%E7%BE%8E%E5%9B%BE%E6%AC%A3%E8%B5%8F/IMG_0675.JPG"><br><img src="/2023/05/06/%E6%98%9F%E9%87%8E%E7%88%B1%E7%BE%8E%E5%9B%BE%E6%AC%A3%E8%B5%8F/IMG_0900.JPG"><br><img src="/2023/05/06/%E6%98%9F%E9%87%8E%E7%88%B1%E7%BE%8E%E5%9B%BE%E6%AC%A3%E8%B5%8F/IMG_3253.PNG"><br><img src="/2023/05/06/%E6%98%9F%E9%87%8E%E7%88%B1%E7%BE%8E%E5%9B%BE%E6%AC%A3%E8%B5%8F/IMG_3256.PNG"><br><img src="/2023/05/06/%E6%98%9F%E9%87%8E%E7%88%B1%E7%BE%8E%E5%9B%BE%E6%AC%A3%E8%B5%8F/IMG_3263.PNG"></p>]]></content>
      
      
      <categories>
          
          <category> 美图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 星野爱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随机过程学习</title>
      <link href="/2023/05/06/%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/05/06/%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>以下是屋主自己整理的随机过程知识点总结（教材是华中科技大学的随机过程），里面有一些内容不是很全面，如有错误请向我指出！<br>（Safari和部分手机端可能无法打开）</p><div class="row">    <embed src="/pdf/随机过程知识点总结.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
      
      
      <categories>
          
          <category> 课程学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随机过程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>复变函数公式大全</title>
      <link href="/2023/05/01/%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0%E5%85%AC%E5%BC%8F%E5%A4%A7%E5%85%A8/"/>
      <url>/2023/05/01/%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0%E5%85%AC%E5%BC%8F%E5%A4%A7%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>以下是屋主自己整理的复变函数的公式总结，仅供参考，如有错误恳请各位指出！<br><img src="/2023/05/01/%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0%E5%85%AC%E5%BC%8F%E5%A4%A7%E5%85%A8/001.jpg"><br><img src="/2023/05/01/%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0%E5%85%AC%E5%BC%8F%E5%A4%A7%E5%85%A8/002.jpg"><br><img src="/2023/05/01/%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0%E5%85%AC%E5%BC%8F%E5%A4%A7%E5%85%A8/003.jpg"><br><img src="/2023/05/01/%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0%E5%85%AC%E5%BC%8F%E5%A4%A7%E5%85%A8/004.jpg"><br><img src="/2023/05/01/%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0%E5%85%AC%E5%BC%8F%E5%A4%A7%E5%85%A8/005.jpg"><br><img src="/2023/05/01/%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0%E5%85%AC%E5%BC%8F%E5%A4%A7%E5%85%A8/006.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 课程学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复变函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4-29,4-30游记</title>
      <link href="/2023/05/01/4-29-4-30%E6%B8%B8%E8%AE%B0/"/>
      <url>/2023/05/01/4-29-4-30%E6%B8%B8%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>快速的水一下这两天陪父母以及小姨一家在武汉游玩的游记吧。<br>这两天的武汉真的就是人山人海，说真的，要是我自己一个人的话，我绝对不会出来看人挤人，不如看番或者赶作业吧（）。<br>不过既然来了，还是得好好跟着去的。我也去了之前没去过的几个地方（话说我本来就没在武汉到处玩过啊啊啊），下面就随便放几张照片水一下了。<br><img src="/2023/05/01/4-29-4-30%E6%B8%B8%E8%AE%B0/001.jpg" title="1"><br>东湖的樱花园，明年四月一定要来这里看sakura，当然还有武大的！<br><img src="/2023/05/01/4-29-4-30%E6%B8%B8%E8%AE%B0/002.jpg" title="2"><br>在东湖上坐轮船，在船顶的感觉真的很好！<br><img src="/2023/05/01/4-29-4-30%E6%B8%B8%E8%AE%B0/003.jpg" title="3"><br>黄鹤楼，不说了，纯纯的全是人<br><img src="/2023/05/01/4-29-4-30%E6%B8%B8%E8%AE%B0/004.jpg" title="4"><br>中南财大小吃街yyds，以后工作日润过去吃！<br>不过就外出游玩而言，我显然还是更喜欢去逛漫展的（）。</p>]]></content>
      
      
      <categories>
          
          <category> 日有所记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>星野爱——最不懂爱的人，苦苦追求着爱</title>
      <link href="/2023/04/23/%E6%98%9F%E9%87%8E%E7%88%B1%E2%80%94%E2%80%94%E6%9C%80%E4%B8%8D%E6%87%82%E7%88%B1%E7%9A%84%E4%BA%BA%EF%BC%8C%E8%8B%A6%E8%8B%A6%E8%BF%BD%E6%B1%82%E7%9D%80%E7%88%B1/"/>
      <url>/2023/04/23/%E6%98%9F%E9%87%8E%E7%88%B1%E2%80%94%E2%80%94%E6%9C%80%E4%B8%8D%E6%87%82%E7%88%B1%E7%9A%84%E4%BA%BA%EF%BC%8C%E8%8B%A6%E8%8B%A6%E8%BF%BD%E6%B1%82%E7%9D%80%E7%88%B1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>说老实话，在观看《我推的孩子》之前，已经很久没有看过后劲如此之大的动漫了，虽然只是一集单集，但这仅仅80多分钟所展示出来的内容，以及引起的思考，却是让人回味无穷的。影片最特别的一点便是成功塑造出了一个极具特色的“星野爱”的idol形象。我们或许看过很多作品，一些作品可能以生动的剧情闻名，而另一些作品虽然就剧情来说没有什么让人印象深刻的点，但是它们却可以成功塑造出让人难以忘怀的人物形象（例如同样为动画工房制作的小埋形象）。本集可以说是两者兼备，但我认为作品在后者的表现更加令人感叹。就这点来说，即使这集前篇得不到今年的最佳单集（还有巨人的前篇）。也算是近几年塑造人物形象最成功的单集之一了。不得不说赤坂老师的人物塑造能力还是非常一流的，动画工房的制作也是一如既往的给力。<br>作为本篇的主要角色，星野爱，在这短短的82分钟里，被刻画的形象鲜明，令人印象深刻。就我本人的观感来说，这里的原因可以归结到前后的巨大落差感，在这短短一集中，星野爱给人的印象可以说是180度大转弯的，这无疑使得她的形象十分具有立体感。<br>作品一开始便介绍了星野爱的大致情况——天生的偶像，万众瞩目的新星，16岁的超级美少女，从各个方面来说都是完美的，遥不可及的存在。而这样的大明星却突然来到了男医生所在的医院，而且居然怀孕了——这里构成了第一次巨大反差。<br><img src="/2023/04/23/%E6%98%9F%E9%87%8E%E7%88%B1%E2%80%94%E2%80%94%E6%9C%80%E4%B8%8D%E6%87%82%E7%88%B1%E7%9A%84%E4%BA%BA%EF%BC%8C%E8%8B%A6%E8%8B%A6%E8%BF%BD%E6%B1%82%E7%9D%80%E7%88%B1/001.png"><br>说实话看到这里我就突然震惊了，一开始看到爱挺着个大肚子，我是拒绝相信她怀孕的——毕竟没有人能接受看到一个16岁的美少女（而且还是一个偶像）怀孕吧。但是剧情却让你不得不相信这就是事实。看到这里我对爱的印象其实就变得非常糟糕了的，确实得承认，在不知道具体原因和背景的情况下，看到这种事情很难不把爱和不良少女联系到一块去。而且爱在之后和医生交谈时所说的话语更是让人难受，“以谎言堆积谎言”，“我星野爱就是这么贪得无厌”，再加上后面医生所表现出来的“无脑粉丝”的形象，可以说一下子就让人想起了现实中令人不适的疯狂饭圈文化以及娱乐圈爆瓜的行为。看到这里，的确很难对爱有一个很好的印象。<br><img src="/2023/04/23/%E6%98%9F%E9%87%8E%E7%88%B1%E2%80%94%E2%80%94%E6%9C%80%E4%B8%8D%E6%87%82%E7%88%B1%E7%9A%84%E4%BA%BA%EF%BC%8C%E8%8B%A6%E8%8B%A6%E8%BF%BD%E6%B1%82%E7%9D%80%E7%88%B1/002.png"><br>之后的剧情便是介绍了比较离谱的转生成偶像的孩子的设定——说实话这个设定一开始确实很令人不适，甚至让我在那里捶着桌子在心里大喊“离谱”。男医生和女患者——这两位爱的狂热粉丝，在转生之后成为了爱的孩子，而他们在这一世依然疯狂的喜欢着爱。这一段剧情可以说是笑点（具有记忆的婴儿确实很搞笑）和背景介绍兼具的。在兄妹搞笑的成长剧情中，成功穿插了霓虹偶像界的现状——生存困难，被资本所控制，没有资源的偶像基本上没有任何机会。这段介绍让人们一改以往对idol光鲜亮丽、吃喝不愁的刻板印象，认识到了这也是一个在资本运营下险象环生的危险行业。在这个大背景下，我们再次审视星野爱——这个一无所有，靠自己的天赋和拼了命的努力取得如此之大的成就的偶像，确实很难不心生敬佩。<br><img src="/2023/04/23/%E6%98%9F%E9%87%8E%E7%88%B1%E2%80%94%E2%80%94%E6%9C%80%E4%B8%8D%E6%87%82%E7%88%B1%E7%9A%84%E4%BA%BA%EF%BC%8C%E8%8B%A6%E8%8B%A6%E8%BF%BD%E6%B1%82%E7%9D%80%E7%88%B1/2023-04-23%20(5).png"><br>不过更大的转折点在于星野爱对待两个孩子上。爱是一个孤儿，从小就没有自己的家庭，是一个从小就没有得到过他人的爱的人。从心理学上来说，这样的人，确实不懂如何去爱别人，体会不到这种感觉。她的名字叫爱，却一直不懂什么是真正的爱，这可能也是一种讽刺吧。<br>但是，我们可以看出，在爱的内心深处，却是一直渴望着爱的。也如她所说，“我不懂什么是爱，如果谎言是一种爱，那么我将毫不犹豫地去说谎”。这样的星野爱，一直重复着“我爱你”的谎言，期待总有一天这一切谎言都会变为事实，看到这里，确实让我沉默感叹了很久。<br><img src="/2023/04/23/%E6%98%9F%E9%87%8E%E7%88%B1%E2%80%94%E2%80%94%E6%9C%80%E4%B8%8D%E6%87%82%E7%88%B1%E7%9A%84%E4%BA%BA%EF%BC%8C%E8%8B%A6%E8%8B%A6%E8%BF%BD%E6%B1%82%E7%9D%80%E7%88%B1/2023-04-23%20(6).png"><br>也正是因为从来没有过自己的家庭，所以星野爱一直渴望着自己的家庭——这便是她生下这两个孩子的最大动机。这和本集的前面相呼应，一下子消除了之前的不良印象。而事实证明，就是这样一个“不懂爱”的爱，努力工作，努力赚钱，认真地照顾着两个孩子，甚至因为听到了两个孩子对于生父的谈话，就直接去找前男友让他来看望两个孩子（这在之后也为爱的死亡埋下了隐患）。作为一位母亲，星野爱已经做到了极致。她是最不懂爱的人，但她为了爱所做的事情，却远远超过了其他人。<br><img src="/2023/04/23/%E6%98%9F%E9%87%8E%E7%88%B1%E2%80%94%E2%80%94%E6%9C%80%E4%B8%8D%E6%87%82%E7%88%B1%E7%9A%84%E4%BA%BA%EF%BC%8C%E8%8B%A6%E8%8B%A6%E8%BF%BD%E6%B1%82%E7%9D%80%E7%88%B1/2023-04-23%20(7).png"><br>在本集的最后，爱被疯狂的粉丝刺杀了，粉丝痛斥爱是个“大骗子”。但是，爱又何尝不知道呢，“所有的谎言最后都会变为报应”，这一点她早已心知肚明。但是她依然编造着“爱”的谎言。我们最后所看到的，是一个从小没得到过任何爱，一直不理解爱是何物的女孩，拼了命的想要去爱上他人，并为此付出了巨大的努力的故事。<br>倒在血泊中的爱，对着两个孩子，说出了第一句，也是最后一句“我爱你们”。这是谎言吗？纵观这个说了无数“谎言”的女孩的一生，这句话，绝对不是谎言。这，就是真正的“爱”。<br><img src="/2023/04/23/%E6%98%9F%E9%87%8E%E7%88%B1%E2%80%94%E2%80%94%E6%9C%80%E4%B8%8D%E6%87%82%E7%88%B1%E7%9A%84%E4%BA%BA%EF%BC%8C%E8%8B%A6%E8%8B%A6%E8%BF%BD%E6%B1%82%E7%9D%80%E7%88%B1/2023-04-23%20(8).png"></p>]]></content>
      
      
      <categories>
          
          <category> 漫评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 我推的孩子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>暂停游戏日志打卡</title>
      <link href="/2023/04/20/%E6%9A%82%E5%81%9C%E6%B8%B8%E6%88%8F%E6%97%A5%E5%BF%97%E6%89%93%E5%8D%A1/"/>
      <url>/2023/04/20/%E6%9A%82%E5%81%9C%E6%B8%B8%E6%88%8F%E6%97%A5%E5%BF%97%E6%89%93%E5%8D%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>为了抵制游戏诱惑，把更多的时间投入到更加重要的工作当中去，现在开始进行游戏禁止的打卡活动，我会坚持每周更新下去的！</strong><br>-主要针对的对象就是玩的最多的CSGO了，虽然我是真的很喜欢fps游戏，在这当中我也感到了快乐，但是这毕竟影响了我去做很多事情，所以是时候放一放了，预计在暑假之前都不会再碰这款游戏了，我将以steam的截图为证。</p><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src="/2023/04/20/%E6%9A%82%E5%81%9C%E6%B8%B8%E6%88%8F%E6%97%A5%E5%BF%97%E6%89%93%E5%8D%A1/cccc.jpg" alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">游戏立入禁止</div>  <p>坚持每天打卡！</p>  <a href="/%E6%9A%82%E5%81%9C%E6%B8%B8%E6%88%8F%E6%97%A5%E5%BF%97%E6%89%93%E5%8D%A1"></a>  </figcaption>  </figure>  </div><p>-<strong>4.20</strong><br>从今天正式开始了！<br><img src="/2023/04/20/%E6%9A%82%E5%81%9C%E6%B8%B8%E6%88%8F%E6%97%A5%E5%BF%97%E6%89%93%E5%8D%A1/2023-04-20.png" title="4-20"></p><p>-<strong>4.22</strong><br>纪念一下，打个卡先<br><img src="/2023/04/20/%E6%9A%82%E5%81%9C%E6%B8%B8%E6%88%8F%E6%97%A5%E5%BF%97%E6%89%93%E5%8D%A1/2023-04-22.png" title="4-22"></p><p>-<strong>4.25</strong><br>五天啦<br><img src="/2023/04/20/%E6%9A%82%E5%81%9C%E6%B8%B8%E6%88%8F%E6%97%A5%E5%BF%97%E6%89%93%E5%8D%A1/2023-04-25.png" title="4-25"></p><p>-<strong>4.30</strong><br>十天啦！<br>忙里偷闲，在宾馆更新一下我好久没有更新的网站（四天！你知道这四天我是怎么过去的吗？！）<br>这些天却是都非常地忙碌，但也能显著感觉到自己的思考能力在逐渐回暖，思考任何问题都比之前浑浑噩噩的状态时更加清晰和明确了，希望我能继续维持这个状态，争取让大脑更多的回到以前的优秀状态吧。要做到这一点，持续性的禁止游戏也是必须的。<br>我很高兴，在五一放假的前一天晚上，我并没有像以往无数次一样，忘记一切，全身投入到打游戏当中，然后打到两三点钟。这次放假前的一天，我坚持住了认真听讲了8节课，并且也认真地去准备了并且进行了数电的操作考试（这在以前我估计就直接摆烂了），并且在回去之后并没有去打游戏（虽然也没成功去跑4.01千米去搞到小樱的奖章www，还有4月三十号一天不知道能不能成功打卡），并且还把寝室的卫生打扫了一下，然后就是继续看樱花庄的宠物女孩。这在以前对我来说是很不可能的，但是它确实发生了，我也很高兴能看到自己的变化。<br>我希望这一切都是值得的，我也希望能认识并且成为能让我自己满意的自己。<br><img src="/2023/04/20/%E6%9A%82%E5%81%9C%E6%B8%B8%E6%88%8F%E6%97%A5%E5%BF%97%E6%89%93%E5%8D%A1/2023-04-30.png" title="4-30"></p><p>-<strong>5.5</strong><br>打脸真是来的飞快，在5.2和5.5晚上分别进行了3~4小时和2小时的游戏。<br>其实导致我还是打游戏的原因非常的简单，就是以往重复过无数次的原因，一次是因为出去逛的太累了，回到电脑旁边看到别人在看动画，便萌生出了“打一会游戏”的想法，而今天晚上的则是常见的因为考完试所以直接去打游戏了。<br>实际上，这两次我事先都没有打游戏放松一下的打算，纯粹是因为自己没控制好自己，就拿今晚来说，我带电脑回来本意是把项目进度推进一下的，不成想还是没控制住自己。<br>但是，我也并不认为这是前功尽弃，起码我打了一会儿就收手了，我觉得我已经逐渐可以控制自己的一些娱乐行为了，为了未来的目标，进一步的控制也是十分必要的。<br>所以这个模块将继续存在，可能会变成我的游戏记录模块？<br>不管怎样，斗争的经历也值得被铭记。<br><img src="/2023/04/20/%E6%9A%82%E5%81%9C%E6%B8%B8%E6%88%8F%E6%97%A5%E5%BF%97%E6%89%93%E5%8D%A1/2023-05-06.png" title="5-06"></p>]]></content>
      
      
      <categories>
          
          <category> 打卡 </category>
          
          <category> 暂停游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语单词打卡</title>
      <link href="/2023/04/19/%E8%8B%B1%E8%AF%AD%E5%8D%95%E8%AF%8D%E6%89%93%E5%8D%A1/"/>
      <url>/2023/04/19/%E8%8B%B1%E8%AF%AD%E5%8D%95%E8%AF%8D%E6%89%93%E5%8D%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>本着能水就水的原则，现在开始进行英语单词打卡项目！</strong></p><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src="/2023/04/19/%E8%8B%B1%E8%AF%AD%E5%8D%95%E8%AF%8D%E6%89%93%E5%8D%A1/IMG_4800.JPG" alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">墨墨背单词</div>  <p>坚持每天打卡！</p>  <a href="/%E8%8B%B1%E8%AF%AD%E5%8D%95%E8%AF%8D%E6%89%93%E5%8D%A1"></a>  </figcaption>  </figure>  </div><div class="gallery">    <div class="fj-gallery  data" data-rowheight="220" data-limit="10">    <span class="gallery-data">[{"url":"4-19.jpg","alt":"","title":"4-19"},{"url":"4-20.jpg","alt":"","title":"4-20"},{"url":"4-21.jpg","alt":"","title":"4-21"},{"url":"4-22.jpg","alt":"","title":"4-22"},{"url":"4-23.jpg","alt":"","title":"4-23"},{"url":"4-24.jpg","alt":"","title":"4-24"},{"url":"4-25.jpg","alt":"","title":"4-25"},{"url":"4-27.jpg","alt":"","title":"4-27"},{"url":"4-28.jpg","alt":"","title":"4-28"},{"url":"4-30.jpg","alt":"","title":"4-30"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div>]]></content>
      
      
      <categories>
          
          <category> 打卡 </category>
          
          <category> 英语单词 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KON美图分享</title>
      <link href="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/"/>
      <url>/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_0962.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_1272.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_1273.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_1274.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_1275.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_1277.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_1278.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_1279.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_1280.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_1281.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_1282.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_1283.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_1284.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3229.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3230.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3231.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3232.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3233.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3234.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3236.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3237.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3238.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3239.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3240.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3241.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3242.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3243.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3244.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3245.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3287.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3292.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3293.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3294.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3295.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3299.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3302.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3304.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_3994.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_4028.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_4029.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_4032.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_4033.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_4526.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_4541.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_4542.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_4552.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_4701.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_4739.JPG"><br><img src="/2023/04/18/KON%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB/IMG_4740.JPG"></p>]]></content>
      
      
      <categories>
          
          <category> 美图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 轻音少女 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4月18日杂记</title>
      <link href="/2023/04/18/4%E6%9C%8818%E6%97%A5%E6%9D%82%E8%AE%B0/"/>
      <url>/2023/04/18/4%E6%9C%8818%E6%97%A5%E6%9D%82%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0b4c1393d1c3d9e1766c2fc81e8ff1cf6684c7fe05e4ecad3e1df5f638f1bf19">6110ab8c8c0631f393712c26675df9e001e9b5ab14720202f7dd0ec0444321c99f9eedc672fb803b847eff76ffd9b6c4f5d3af64db7b637489db5b79987a907e1a50eb897ccccc7b46aa2dca6bd7e98283df889b515389f3e495d4e587a8e1a9b3e4b45408930d9bd9339ccbccfa7e79befb2b1677014abdd03c17f77d18b96d57f4410501ddf3caeb78f2e74166cfd3d3aecf04451fbefc79a367446e6300e8a635a900f3250552b8dae6278ccb78096817edf21584a2f811d23d0de6f5afc2fec03593f6773bd6207b968ae103bc3a158f3ecc58a4785ba4d9234f99a08f09b829529fef99313a15c4ca938e6de2a2ccc481f3d3716cb8856039d68e6347fbb9c72d8e3af0b53cf227ee4fdbbff461718bad7a3828fbe55e6566e9118ae62151287907d9b7a3afac3d758a174ef91b79c2083f6e27892604e348afecd1faf24d451699568e990449420d4cca1eb76bdbe1bc3e313c9bde135b9b05dcfb0edd10be8f5c8ad4a89a7dd38acbf2ea72923ab4e905ae56fbae58e6c8b3496740ee5e4554e0110ea0b674985f8ba89c582344bde511f5509b5e043577542d244ab64ceeb02593a26942310b8153b3eb2d78b67237e387830a64bfd708965920a4a82537ee86c54a5473a464c32323a867a01e9d8d38f236432aecf8710adb2a8767b96d24b0f64b329b1c1449929a0329a482bdcb6f106b283ed58ec6dcb7b013ac395d2e1af129e24114522ec9de5665d0da063229bd5e30fe8afeb6e98204509edb16aec3784d13ec28d03ca60fc8487398ca64eeb00c5b66c7361f6487299e93d30f71c1fd0420d6198645dd875b5c52b7903eae0381133cca6a55789f5766f51ece68e2cd0f41a73612f9da36f7af4d3e204390f5327f7f5492163aaf3d3fde55f8cad0ae2f3beb77715552a0f3adb7b261c9f813d0b1ec5e39b5cf0e5b43905b046875fe99a59e829e9f62e1d5934aff3d5538722f89d6a307246a66deebab4e418a4a1a5e91e41d29bfaa84123c599db9b5ddfab473e42e44671ed5a895c06d1b9c63a8f07ad119ad21f072f0df99666996f62c10c81b5a9c3cc822e90403c7b51770a6b84a531ed8cc12e81c16b2e783c2017de73de4d2a27bff568f5aa6f22c9e8e7e9070320286c775a5e70c5eb35e60681ad95597a98d0aa47865b0a7a088af4a975e77555affe03bfa93bd7d115045ae46e48fadf656a853f705345859b2691e4ce7d987b3917a90e409b482c8bc384bdf036a69e6c344031849d7dca0f9e41570c3fcde964940525ab1d9e6c63400a9ef95726ff1561703cccbfda4aff807d27c6772368e93d15918b307fcf756922c49d62f377fc2d39187b90b1ee6410a990178c00dd908fafe90f9284d966e86f903f883493b00c77ad81a3ddd6b310cb6daac7cc1d4b772c30b739ead51b8dc072bffc5bb3122b3674285481950ac7ba592b1a85fe860ba5f6ca60a1a7efb5dd46a5ff9a0822b6cf37852ea270f5f5f52c27a3e9aad5f98cd9ae85479cd7bc0941c07210bef3b038824b7fd5024c50c1fd4c25491a58619e16770015103f73de7e91671bd9c5502838977ec05c9a990d93e68ffdc7f180f40e95c580bed0d34b02a1706196bac12bf1f646ba7a4b53f028ac5b71fb152f2e95698576edf176d4ce111be10a66e031d9a9fdf8ce047fbcb0cf5d4550d846f67701dae020d90c6508586591f28f16c0e9a07949b1e84e3a4f57df8a0a907390923588ff6ee112a702238469b7245f930dc1487d023d59ad57590d70f201555ab4ba760e54a291aba5af484c948de8fe80f6acbd78138e56885bf1875d339d735f5b2db1a7e2b047295a23cef908829b30fafdb3b0a1c53df7dc7b874b94d06ef7a18120e591ea5741d81c8a6afbb122f79db6817e2abd1f95ecd2262e284798d3f41b9e5d6e2a8a6f560a55607e2738239d3ba88e7e74268e37e1f5782695a25e95941a920103d5eac4d6c88f7bfa4a355917eec8443f071b962add7a837243ce58a9d55f6f81d19a0a839d5b6aba0655414f64a873c23528f798c8afc6af383b078fb96c3c87ee739f03997f3a3cb2ba4f10dd5c05d3c235e7ce8b0aac73daa83c31120e343a0ff39c5cf37b0986ba3bea9894348f3ae963e3a05c8c4b666baaa5b245cbd6bbd207b5289d1bfbb19d5df69ea7d18c17f01a0e67b1d9699958f339d139fbd08af81d5a2423539e974edc070ae59e6768e71598bed4d87faa3909c96dd1aef8fe94418522e91abc5f19e7802e417adbdf64cd60e91e028b81fe598db5502c64a6952e0d0bddd2cf912e5f8ba736582ff4650e4fa984d6a76fb779741c88d6a3c31769dc00b481a1264dfedff60006ab080d2305429abaf4631e894572048da5548b74cdf7b76f0c36384ea4e166ab2555ee6ed6391c62471eca80a00f948a84293cd239e5440178b3ed5e1bb9d0df84b5366205da95b7377a83b1143744de7c90bd56e99f160fb854b0f78af3b256a7dea4dd81690684c807c56b40a857fe450831b1e97bb2ac389176a65b237f8b7fcc0b3be3ceadb3a0719e7ef1b0250871af13dd0058bda729a94818f9f28a80fac81fb407b572f466f6df9b8bdd15562544a3832557ad2b8a25eb9321481b88a4b8a1744f1801e750368ea1622b5024c3666a6cd6fa598864595640c983aed000a5658d463be5382abb7414fec9b7dd2edbabdfec21ba0e35ff7ec3e4b340e557347650314b59fc31b65b6543a39e3986144e2d4739d36e18c4b2bae2afa1822723e845345a0be15c9425c57f48f0cd7c29762ec0f0ddebcf92916cb4cd2fe57b3078f98b96862de6710fba145875ef3a05914ceb6c767b22991fe5ec9e3e1f0537f9d98c740a5f0938a0d4db81a54dfa1f1fd208c76296f6ad86693bb7d8fc869818394698f6cba72ab3f45cecf13eb799494b47501d236b7a9f8d3d8406e3033fcc84fe1fc2228a7f46b126e833d33e137705cd234413f6b58465f881b0ca7bdfdafe165bef654729457d371fde032dff4d74aa80b09695a332cb07d3a7acf876986241af9300ec628ee1033530c2f4a282c3ce82539933cea574210c35ed3a9916c6734f0ca4e3e6762d8823017644a27ba06f3436ddd09d45fcd53b177068170c704cf5ae00e171326c1f3c64bcaae283dff6fda9f955f3eda195dfc3a5d84a17d8884f92e7d783f62f8017c320425879f5382737a971dd84cbed8db622a34103931fa400a0fed21f6293a899a5c88c3d715288b7708e21a4f7a8571950a6ec6bade84c9b777f9712c5bccdd12ff587ee2e4d64f747cad7ccc1f82df5043e153033229aa3350b9211769a8f5a3c4dc80d5d44c55b3fefa337247c3f38f93d1ef67d542bd146e550fb601f9ff96aef204bb828eff04e017bec0cc41ebc94182420f0d27f0a13e55a6ef16f8fb4dc0707f0b5ab1bfb9e166d98f24709f4004ceb7f6a450bddd240e3eba90e5b1743190c3747aade76e700e06c37ce7af4463056c370b10622c25afeeb3135b3c0fcab7aa0f81c11904e752b2f7ce33b7ca95ed1461a683a62a80ade325c7850fcd1beea2f55e2e2fc2a133fb67e72fe505c4938ac35b5f7907170a0e29a84584de030c90deb54ed64bfc0cfcc67490058575213ccbdbd8a6127ca87d20bfcbf4be71e071ed20f7eb75693a5c12fd254da59e820bca8f660e6318a13fd4b934103fe240542da86b174edbea1ca166308434846c18b551bf54120d111b8c0df0b3800567c9660a74827c27aed2a56bc24d37eaabc9876ad70e292f2a0881e28fe9abf21c3a20693b2cbeaf102f6e13e8d65cc2f169d4d790964f3893109586e9431363ea79b3e5159530077ddd073cd3cff57592356f70f299980ce31544b8ebcc29556cdb5b0138335c3f5106f38ae9ffb68855ba686e7829e6be775aa948ffff79ac39b7f423515cde18d43f2a2aaf323dfb967697ff4a6cd53b390ea41e9f8487fa343e06952140964a49defa45dcb2ee785573d390036aedb1149888359c2977cba1f6688d6d87cc11cb64a29c682bb46ddb1f8a9e4762ec519d040b720b800bae01ab2b1207e68ad0dcc4228f345d2a212963cef8e5d9ba7ee37b836bac2af8cda60eb9734d4e240a6a1ea6521765af7c60a1f209cebd3363078bbfcdad3f6ffc58cfd5cebcc9b07cb6df812ce145ca0bd7344a5961e54a79047eecb1cbc812dcd28b68f716d11c8bb665873c472784167843f33a66a5306b6089adf9c53bf975366a5955c9720bec21cf9f287b7c144d7d04ecdece1dcd358f8250baee57c3c26c9ca748e4e2ed2f05dcbf74398b30c150c035825b2ebfaf38cc3f0d23018d535ad0c27ac386bea952995f6f889646a6b9e00c27741357341d7c095d98568ccbbe3e284a9b1223bfe8aee785c0ed6517986702f5fff000a3dbcf5b0946c117a912c01fe61b9de4c4bf74174091f90b068a9a7d674e4c0ed1ffb1ff9112ac706d17a521bdf3cd24c16b298cc2317b7451a4516c7f52c4bd307b704f35e43e40b8acbdaaff31e2e7b8d50b20fbe12a8aac9d0d8d8b442b26b4ee8d7030cf063b51ee711669df96b471df8b55bbd6d80526be1b523884f177b3f9f53d52dbd2a6a57d22453e9b002761e7bf9ccc2818bb8c8edea3bbe1f8f0814bca9da21eeaf8a6a4469b2638a5cb885a3cfbdaed9c85fa8584b562a6c94eeab1254ed3ccc6416861d5e27429d6853b65f80628808a991bfa711baf9caa780145964b1b9b8c836fc11d03397bd1be8efa87b797b58f077ef8d6bdcb01b86a32453f4578a3c1238ec6988bba668f94a459a0a0b412dd27faa3f74faecf7f434d3330ccde97d740492ea71b5730a9c5834facb60fe53edf88da3257b0c4e5ed712d4c009c54850a8725a52a3a0fabe33f94c729261f4780ca7db9b26766e1243e6618118ddf921aa59a2ebfc39706aeda5fd345c2953f59a7b860fd38f447c28004a27e8d5ef49af820aba4993a2efdc6fcb20aaf2dac4bfead416efc3416574fa676f671d169efa03283c56764440fc4885d6ea3a47d80e68e0dffb26d409267bd0eaa19864e31854176dc32c7c93cf624c751d53883518472988b98b59ca9a706764e02d5b9cdacfde6b7860d1296e9c8e3a19ed4d7e6a59cc4a946ab8717612d1c96c7a4125855572aab7948492f9b12ba4cd33bd27e36bf825cb0fb87ecb0e500e19bd518879ce3070eef85dde1ec1124a552bd162d1b9c4c2a290a5c09010e8150e99de076fe5addce838a3b6e488b74f9c6d6b50733a86bcf416edb78406bfa87fa47d2e14e413e3e954d5065733bba6b4169d5c3f928964572582f61ed171de53ecb74831109ad7d50df6b9ef56be83d55d885d34568124a9d2f299eb1fd3567062ccc518f9b541013ca30025adca399e645f7aa</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这是屋主的最私人日记，请输入密码观看</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 日有所记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于网站的未来</title>
      <link href="/2023/04/17/%E5%85%B3%E4%BA%8E%E7%BD%91%E7%AB%99%E7%9A%84%E6%9C%AA%E6%9D%A5/"/>
      <url>/2023/04/17/%E5%85%B3%E4%BA%8E%E7%BD%91%E7%AB%99%E7%9A%84%E6%9C%AA%E6%9D%A5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>　　花费了四天的时间，总算把这间小木屋搭建成了能看的东西了。并且，也放了一些以前写的东西和存储的资源，让这间小木屋看起来不会那么冷清和单调。<br>　　关于网站的美化以及功能的完善方面，之后肯定会一直继续去做的。至于能做到哪一步，屋主尽力而为，毕竟这只是一间无人问津的小木屋，是屋主在各种繁杂的社交媒体以及流媒体的包围之下，最后做出的选择。<br>　　所以，屋主可以无视他人（或者说大众）的喜好，按照自己的意愿去记录。屋主喜欢记录，但并不愿意让记录去打扰到并不想看到这些的人，所以屋主搭建了这个小木屋。我会坚持更新这个网站，并且其中相当多的内容应该会是在他人看起来比较无聊的东西，不过，这并不会打扰到别人，并且如果有真正感兴趣的人，我的朋友，也希望这些东西能得到你真诚的祝福。<br>　　目前屋主设立了美图（分享好的图片）、小说（屋主自己也不知道之后会不会更新，可能要很久很久之后吧）、技术方面的文章（比如unity，但目前很菜，只能简单分享一些）和日记（平时吹吹水，证明屋主还活着）等方面的内容，后面屋主也希望开设一些新的模块，不过在这里就不立flag了。<br>　　屋主很喜欢这种感觉，从0开始创立了一个小屋子，并且给它装上漂亮的装饰，摆上好看的家具，这间小屋远离人群，盖在海的那边。小屋永远也不会像城市中心的建筑一样，为了让所有人路过的时候都发出赞叹。但如果有偶然进入的客人，小屋也会热情接待来客，如果来客能在小屋得到喜悦，那么这将是很大的荣幸。<br>　　我的朋友，祝你好运！</p>]]></content>
      
      
      <categories>
          
          <category> 日有所记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于unity中材质的导入</title>
      <link href="/2023/04/16/%E5%85%B3%E4%BA%8Eunity%E4%B8%AD%E6%9D%90%E8%B4%A8%E7%9A%84%E5%AF%BC%E5%85%A5/"/>
      <url>/2023/04/16/%E5%85%B3%E4%BA%8Eunity%E4%B8%AD%E6%9D%90%E8%B4%A8%E7%9A%84%E5%AF%BC%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在unity中搭建虚拟物体或者导入模型时，为了使模型看起来更加真实，我们通常需要在模型上添加材质（material），有关材质的具体参数涉及到光学等各种知识，在此不做过多介绍。本文档只就如何在网络上寻找材质并且成功导入unity当中进行简单说明。<br>1.材质的寻找<br>推荐以下两个网站：<br>1）<a href="https://quixel.com/megascans/home/%EF%BC%88%E9%9C%80%E8%A6%81VPN,%E4%B8%8A%E9%9D%A2%E4%B9%9F%E6%9C%89%E5%A4%A7%E9%87%8F%E7%9A%84%E6%A8%A1%E5%9E%8B%E6%96%87%E4%BB%B6%EF%BC%89">https://quixel.com/megascans/home/（需要VPN,上面也有大量的模型文件）</a><br><img src="/2023/04/16/%E5%85%B3%E4%BA%8Eunity%E4%B8%AD%E6%9D%90%E8%B4%A8%E7%9A%84%E5%AF%BC%E5%85%A5/%E5%9B%BE%E7%89%871.png"><br>2）<a href="https://ambientcg.com/">https://ambientcg.com/</a><br>要注意的是，有的材质在使用过程中是不支持商业活动的，在使用材质的过程中请务必关心此方面的内容。<br>2.材质的下载及导入<br>以第一个网站为例，选择你喜欢的材质，点击下载即可（有各种画质的材料可供选择，选择你觉得合适的即可）。注意在下载前你需要登录你的EPIC账号。下载得到的是一个压缩包，将其解压至文件夹内即可。打开文件夹，我们一般可以看到以下内容：<br><img src="/2023/04/16/%E5%85%B3%E4%BA%8Eunity%E4%B8%AD%E6%9D%90%E8%B4%A8%E7%9A%84%E5%AF%BC%E5%85%A5/%E5%9B%BE%E7%89%872.png"><br>我们只需关注以下几项内容：albedo（反射率）,roughness（粗糙度）,normal（法线贴图）,metalness（金属的）以及AO（遮挡）（图中未给出），其中有些材料可能不会带有metalness以及AO,该情况下无需考虑或调整该项参数，但是所有材料都会带有前三项属性的图片，他们可能是jpg格式的，也可能是png格式的。<br>3.材质的导入与创建<br>在项目中创建文件夹，右击选择创建（create）材质（material），得到一个材质球，然后我们在文件夹内导入上述的图片（上述五个只要有的都可以导入，其他的如displacement不需要导入），之后打开材质球，如下图所示，将shader改为Autodesk Interactive类型，之后将各个图片直接拖拽至对应的方框，即可生成相应的材质。<br><img src="/2023/04/16/%E5%85%B3%E4%BA%8Eunity%E4%B8%AD%E6%9D%90%E8%B4%A8%E7%9A%84%E5%AF%BC%E5%85%A5/%E5%9B%BE%E7%89%873.png"><br>4.材料的使用<br>可以直接选中想上材料的物体，将材料拖拽至上面，或者直接将材质拖拽至左侧层级中该物体所对应的位置即可将材质应用。注意的是最好关闭场景照明，以免由于光照原因使得材料看起来与预览时有较大出入。<br><img src="/2023/04/16/%E5%85%B3%E4%BA%8Eunity%E4%B8%AD%E6%9D%90%E8%B4%A8%E7%9A%84%E5%AF%BC%E5%85%A5/%E5%9B%BE%E7%89%874.png"></p>]]></content>
      
      
      <categories>
          
          <category> unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01路上的见闻</title>
      <link href="/2023/04/16/01%E8%B7%AF%E4%B8%8A%E7%9A%84%E8%A7%81%E9%97%BB/"/>
      <url>/2023/04/16/01%E8%B7%AF%E4%B8%8A%E7%9A%84%E8%A7%81%E9%97%BB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>“哎，今天的人真多啊……”看着眼前的人山人海，行字茂叹了口气。在假期的时候，大多数学生都不用去上学，那时出来坐地铁还是非常方便的，但是一到开学时间，地铁便成了人挤人的地方。在初中的时候还好，行字茂可以自己骑自行车去学校。可是现在的高中离行字茂的家非常远，不坐地铁是根本无法在短时间内到达的。<br>　　“哎，你知道吗，这个地铁站可是在上个世纪就存在的！当时的人们还没有超能力……”旁边一个看起来和自己差不多大的学生正在津津乐道地给他的讲故事，行字茂快速打量了他一下：往前翘的有些不自然的头发，加上小到几乎看不见的眼睛，几乎要成一条缝了，身高貌似比自己还要高一点。不知道为什么，看到这个人说话总有一种他在忽悠别人的感觉。<br>　　“上个世纪吗……”行字茂也不是很清楚这个地铁站的历史，不过从他记事起就有这个地铁站了，而且据他的爸爸说，这个地铁站在他小时候就有了。这样看来，还确实是一个上了岁数的建筑呢。不过这也不奇怪，因为现在有好多东西都是从以前留下来的，包括这些地铁站等建筑，虽然坐的地铁是换过，但是地铁站却是一成不变的样子，因为似乎每年公司都会生产出一模一样的地铁，所以也就没有必要更换这些东西了。<br>　　行字茂艰难地穿过人群，终于到了到了地铁口，门开后一群人都涌了进去，行字茂挤在人堆中间，感觉自己快失去了氧气一般。<br>　　不过，由于这里是比较靠前的一站，只有这一站的人十分多，往后走了几站，人们又大多数陆陆续续地走了下去，行字茂终于有机会重新呼吸空气了。他摇了摇头，刚准备开始打量身边的人，突然被身后突然的一拍给吓到了。<br>　　“啊，对不起，吓到你了吗？”行字茂转过头，发现是刚才忽悠，啊不，是讲故事的那个人，他现在一个人站在行字茂的旁边。<br>　　难道刚才那个人不是他的同伴么……行字茂心想。“没有没有，请问找我有事吗？”<br>　　“你好，我叫岛游硕，打扰了，请问你是花中技术高中的学生吗？”<br>　　“啊……是的啊……”行字茂吓了一跳，连忙看了看自己的身上。没有穿校服，没有戴标志，按理来说应该没理由会被认出是花高的学生啊……<br>　　“哈哈，不用看了不用看了，是我猜测的啦！”看到行字茂忙乱的眼神，岛游硕不禁大笑起来。<br>　　“啊，不好意思……”看到别人一眼就看出了自己的窘态，行字茂突然觉得有些不好意思起来。“你好，我叫行字茂，是花高的学生。不过，你是怎么猜出我是花高的学生呢，其实，我今天才第一次去上学……”<br>　　“这很简单啊，你看，花高已经接近地铁站的最后一站了，再加上这个时间段大多是学生上学的时间，而且你长得也很像高中生的样子，所以我就推测你是花高的学生啦！”<br>　　“原来是这样的吗。”行字茂看着导游硕，敬佩之意顿时油然而生。<br>　　“啊，忘记说啦，我也是花高的高一新生，那么从今天起我们就是同学啦，以后也请多指教啦，行字茂同学！”岛游硕继续笑着对行字茂说，同时向行字茂伸出了右手。行字茂赶忙也伸出了手，握着刚刚认识的人的手，看着这个怎么看都不像高一新生的同学，“这就是高中吗”，他不禁心想。<br>　　说起花中技术高中，是花中市一个很有名的技术部高中。凡是被上天赋予技术类超能力的人，都会被送来技术高中接受对自己超能力的使用的学习。然后在他们完成学习之后，就会被赋予相应的姓氏。不过，虽然行字茂到目前为止并没有获得超能力，但是据老爸行字越说，已经托他认识的人解决了这一问题，帮行字茂编造出了一个超能力，也就是“可以非常快速地掌握电脑技术”。所以目前行字茂是以这一“超能力”的身份入学的。虽然看着不像超能力，可是也是有不少人的超能力看起来比这还没用却被当作主超能力来使用的，原因就在于没有更好的超能力了。由于行字茂从小就接触父亲的工作，而且对电脑展示出了超乎寻常的兴趣和能力，所以就算拿这种东西当作超能力也是完全不会引起周围人的怀疑的。<br>　　“花中技术高中站，到了，请要下车的乘客……”一声电子铃声把行字茂从思绪中拉了回来。“到了，我们下地铁吧！”岛游硕朝行字茂挥挥手，于是两人一起地铁。由于接近最后一站了，人数也不像一开始那么多了，旁边有一些看起来像是高中生的人也都下了车。上去之后再走几步，就要到新的学校了。行字茂感到一阵兴奋，可是这兴奋从何而来，行字茂却不知道。<br>　　上了高中，要做些什么呢，要结识哪些人，要学到什么东西呢？<br>　　不知道，不知道，还是不知道。<br>　　可是，就是有一种兴奋感涌出心头。老实说，已经很久没有感受到这种兴奋感了。<br>　　走出地铁站，一束阳光照到了行字茂的头上，短暂的眩晕之后，行字茂可以清晰的看见远处的一块大牌子，上面赫然写着“花中技术高中”几个大字。一时间，行字茂居然愣住了。<br>　　“你怎么回事，再不去要迟到啦，不要开学第一天就被批评啊！”岛游硕拉起行字茂跑了起来，行字茂这才想起来看手表，这一看吓了他一跳，时间突然不知道什么时候已经到了七点二十五了！两人开始狂奔起来，朝着花高的方向猪突猛进，不过按照这个时间，无论再怎么冲，五分钟是注定到不了的啦。</p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
          <category> 长篇小说 </category>
          
          <category> 《普通人就要过普通的人生》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 天马行空 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>超能力者们的世界</title>
      <link href="/2023/04/16/%E8%B6%85%E8%83%BD%E5%8A%9B%E8%80%85%E4%BB%AC%E7%9A%84%E4%B8%96%E7%95%8C/"/>
      <url>/2023/04/16/%E8%B6%85%E8%83%BD%E5%8A%9B%E8%80%85%E4%BB%AC%E7%9A%84%E4%B8%96%E7%95%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>　　“亲爱的，今天的报纸到了吗？”一位成熟的中年大叔坐在桌子旁，看着妻子端上来只有在五星大酒店才能看到的无论是外观还是香味都无与伦比的汉堡肉三明治，满脸幸福的笑容。<br>　　“哎呀呀，今天的报纸我忘记拿了，对不起亲爱的！我马上就去拿给你！”妻子也满脸笑容地回答着丈夫，将手上的两盆三明治端在了桌子上，然后转身走向门口。<br>　　“真是模范夫妇呢。”少年拿起三明治啃了一口，嗯，教科书一般的美味，和上一次吃到是一模一样的美味，和下一次吃到也是一模一样的美味，虽然少年的味觉可能根本记不住味道是否一样，但是可以凭理性知道味道一定是一模一样的。<br>　　“那是当然！儿子，你以后也要找到像妈妈这样完美的女人哦！啊不对，比妈妈差一点的也远远够啦！”中年男人看着妻子的背影，眼里发出了耀人的光芒。这不是比喻，因为，这个男人的眼睛真的可以发光！<br>　　“亲爱的，又在说我了吗，真是讨厌！”只见妻子拿着一卷报纸姗姗走来，夫妻两的视线交织在了一起，少年明显感到身边的温度急剧升高，仿佛一切都融入到了爱情炽热的火焰之中，当然，男人的眼中再次发出了耀人的光芒。<br>　　啊，忘了介绍了。此刻正在啃着三明治的少年，名字是行字茂，今年15周岁，是一名即将踏入高中校园的帅气男高中生！而眼前这对恩爱的夫妻，则是他的妈妈艺厨惠和他的爸爸行字越。<br>　　“小茂今天就要上高中了呢，真是期待啊！”妈妈充满期待地看着小茂，“不知道今年小茂能不能受到「那个」的恩惠呢！”<br>　　“那当然，小茂可是我的儿子！”行字越骄傲地挺起了胸膛，然后又深情的看向了妻子，“小茂的体内，可是流淌着我和你卓越的血统！”<br>　　“哦，亲爱的～”妈妈含情脉脉地看着爸爸，这幅在谁看来都要感动不已的夫妻恩爱画面，行字茂却早已司空见惯。他熟练的吃完了三明治，又熟练的背起了书包，朝着门外走去，“我出发了！”<br>　　“一路顺风！”妈妈充满期待地看着儿子，“在新学校要多交一些朋友哦！”<br>　　“知道了！”行字茂打开门，一阵风吹过脸庞，他捋了捋被风吹乱的头发。<br>　　“咝……”呼吸了一口新鲜的空气后，行字茂走出家门，踏上了熟悉的坡道。<br>　　现在已经是春天了，之间几天前还是没什么生气的玉兰花在一夜之间似乎约定好了一样一同绽放，白里透粉，就如同旧时代一些影视作品里面描绘的樱花绽开的场景一样令人心动。<br>　　“花开了啊……”看着路旁的一排排玉兰花一夜之间都盛开了，行字茂也不由得惊叹。那是什么时候的事情呢？应该是很小很小的时候，还能看到那些作品的时候，好像看到一个女孩，在樱花树下站着的身姿，眼前的场景，无疑触动了他的那一份记忆。<br>　　突然，一阵大风吹来，白色的花瓣瞬间飘洒在了空中。<br>　　“烦死了烦死了，每年这个时候就有一大堆活要干。”行字茂还没来得及反应，掉在地上的花瓣突然都立了起来，一个个又都跳回了树上，一切又都恢复到了起风前！<br>　　“啊……扫洁大爷……”当面这么搞太破坏氛围了吧……行字茂扭头看向了路边正在发牢骚的大爷。大爷正聚精会神地朝着花瓣挥舞着双手，好像没有看到行字茂一样，只是在聚精会神地操控着花瓣。<br>　　“终于完成啦！“大爷长叹一口气。“哎，这不是小茂吗！今天要去上学了吗！”<br>　　“是的大爷！今天开始要去上高中啦！”行字茂笑着回答道。“那我不耽误大爷工作啦！大爷再见！”<br>　　“好好，小茂要努力啊！”大爷欣慰的笑着。这时有一阵风吹来，刚回去的花瓣又一起奔向了地上。<br>　　“哎，怎么又起大风啊……”<br>　　“让落到地上的花瓣重新回到树上”的超能力吗……虽然是能让花瓣回到树上，却不能让花一直开放呢，该腐败的花瓣，终究还是要腐败的啊。这么做，应该也只是应居委会的要求，“尽量保持我们镇玉兰花开放的时间，以最大程度吸引游客前来参观”这样的话吧。行字茂看着大爷，心里忽然又想起了父母刚才说的话。<br>　　“我到底什么时候才能拥有超能力呢……”<br>　　没错，超能力！在旧地球，所有人都梦寐以求的东西，却在一百年前，因为某些不知名的原因，突然降临在地球上了！<br>　　但是，与人们想象的不同，并没有所谓的天选之子，也没有出现如同神明那般强大的超能力者，事实上，超能力十分雨露均沾地出现在了所有地球人身上！而且，每个人都会获得几个超能力，这些超能力大多都是一些实用的和几个没什么用的奇奇怪怪的超能力，例如行字越的超能力有“将看到的字或者图片等信息复制粘贴到电脑上面”，“在面对爱人时会眼睛发出耀人的光芒”，而艺厨惠则拥有“只要看到食谱和食材就可以直接生成绝对标准的食物”这个超能力。绝大多数人会在十二岁到十八岁期间获得一到三个超能力，这些超能力中一般会有一个比较有用的超能力，这个超能力通常会在十四周岁那一天获得，而他们也会根据超能力被政府赋予新的姓氏，同时这个姓氏也决定了他们未来的工作，比如“行字”这个姓氏就代表着在打字部上班。<br>　　可是，当所有同龄人都至少获得了一个超能力的时候，行字茂却迟迟没有获得属于自己的超能力，也正因如此他到现在也没有获得新的姓氏，周围也总有一些一样的的眼光。<br>　　“超能力，吗……”行字茂摇了摇头，想把这些不愉快的东西统统抛到脑后。再怎么说，今天毕竟是高中生活的第一天啊！<br>　　那么，全力以赴吧！</p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
          <category> 长篇小说 </category>
          
          <category> 《普通人就要过普通的人生》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 天马行空 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站搭建记录</title>
      <link href="/2023/04/16/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/"/>
      <url>/2023/04/16/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>（持续更新中）</p><p>这是属于这个小木屋自己的记忆，记录着小木屋逐渐走向成熟的过程</p><p><strong>2023.4.14</strong></p><p>-基于hexo，使用了NexT主题，依托github，成功搭建了一个有着个人信息的网站</p><p>-发表了第一篇文章“写在世界之开始”</p><p><strong>2023.4.15</strong></p><p>-成功将yeageryuan.cc域名解析，并且成功绑定了github上的网页，有了自己的网站了</p><p>-将NexT主题更换成了更加美观的Butterfly主题</p><p>-增加了本地搜索功能</p><p>-重设了部分UI以及背景</p><p>-发表了一些日记和资源</p><p><strong>2023.4.16</strong></p><p>-继续重设了部分UI和美化工作</p><p>-增添了评论功能</p><p><strong>2023.4.17</strong></p><p>-完善了部分页面的创建以及内容的完善</p><p>-完善了主页面以及其他页面的背景美化工作</p><p>-完善了各个文章的整合资源</p><p>-完善了tags和categories</p><p>-评论功能消失（暂未解决）</p><p><strong>2023.4.18</strong></p><p>-解决了本地部署和服务器不一致的问题（刷新url）</p><p><strong>2023.4.19</strong></p><p>-完善创建了所有页面</p><p>-解决了网站的图标问题</p><p><strong>2023.5.6</strong></p><p>-增加了PDF预览功能</p><p><strong>2023.7.1</strong></p><p>-增加了首页人物互动功能</p><p><strong>2023.8.3</strong></p><p>-更换了主题图片</p>]]></content>
      
      
      <categories>
          
          <category> 网站记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件夹测试</title>
      <link href="/2023/04/16/%E6%96%87%E4%BB%B6%E5%A4%B9%E6%B5%8B%E8%AF%95/"/>
      <url>/2023/04/16/%E6%96%87%E4%BB%B6%E5%A4%B9%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>此篇用来测试post_asset_folder功能，用来更好的存储并且分类每一篇文章所引用的资源<br><img src="/2023/04/16/%E6%96%87%E4%BB%B6%E5%A4%B9%E6%B5%8B%E8%AF%95/001.JPG"><br><img src="/2023/04/16/%E6%96%87%E4%BB%B6%E5%A4%B9%E6%B5%8B%E8%AF%95/002.JPG"><br><img src="/2023/04/16/%E6%96%87%E4%BB%B6%E5%A4%B9%E6%B5%8B%E8%AF%95/003.JPG"><br><img src="/2023/04/16/%E6%96%87%E4%BB%B6%E5%A4%B9%E6%B5%8B%E8%AF%95/004.JPG"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>小樱美图分享！</title>
      <link href="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/"/>
      <url>/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><pre><code>来和我一起念，知世就是力量！</code></pre><p><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/95507334_p0_master1200.jpg" alt="小樱" title="知世就是力量！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/100018821_p0_master1200.jpg" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_0276.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_0279.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_0280.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_0282.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_0283.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_0296.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_1138.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_3325.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_3326.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_3328.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_3329.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_3331.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_3332.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_3497.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_3692.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4053.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4055.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4056.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4057.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4093.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4098.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4099.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4100.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4101.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4102.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4103.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4105.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4108.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4110.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4116.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4117.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4118.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4119.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4120.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4121.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4141.JPG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4094.PNG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4095.PNG" alt="小樱" title="小樱！"><br><img src="/2023/04/15/%E5%B0%8F%E6%A8%B1%E7%BE%8E%E5%9B%BE%E5%88%86%E4%BA%AB%EF%BC%81/Sakura/IMG_4113-1.PNG" alt="小樱" title="小樱！"></p>]]></content>
      
      
      <categories>
          
          <category> 美图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 木之本樱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>水一篇日记</title>
      <link href="/2023/04/15/%E6%B0%B4%E4%B8%80%E7%AF%87%E6%97%A5%E8%AE%B0/"/>
      <url>/2023/04/15/%E6%B0%B4%E4%B8%80%E7%AF%87%E6%97%A5%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>  （本篇作测试用）<br>　　下午体育课，跟着老师一起在森林公园徒步行走了10公里，总共耗时约3个小时，确实是一件比较累的事情。<br>　　不过，尽管来过很多次森林公园了，这里面依然有着许多没见过的风景与地方可供欣赏，就如“户外运动”这门课程的名字所述，这门运动真正的体现了户外的魅力吧。<br><img src="/2023/04/15/%E6%B0%B4%E4%B8%80%E7%AF%87%E6%97%A5%E8%AE%B0/61f3f99b2c2bc239b204f548df1b849.jpg" alt="公园风景" title="公园风景"><br><img src="/2023/04/15/%E6%B0%B4%E4%B8%80%E7%AF%87%E6%97%A5%E8%AE%B0/62cef34c51622a2bd5cee36d0b0f57e.jpg" alt="公园风景" title="公园风景"><br><img src="/2023/04/15/%E6%B0%B4%E4%B8%80%E7%AF%87%E6%97%A5%E8%AE%B0/685742d4df7191cc71040181b0fc7a4.jpg" alt="公园风景" title="公园风景"><br><img src="/2023/04/15/%E6%B0%B4%E4%B8%80%E7%AF%87%E6%97%A5%E8%AE%B0/b04b55ef1b341906479db0d3fa3ec18.jpg" alt="公园风景" title="公园风景"><br>    记得在双引号前面打上空格，还有一件事，就是地址的格式要规范起来！<br>    注意格式的大小写，不然也会出现本地部署与网络不一致的问题，会导致图片识别不出来！</p>]]></content>
      
      
      <categories>
          
          <category> 日有所记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 森林公园 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写在世界之开始</title>
      <link href="/2023/04/14/%E5%86%99%E5%9C%A8%E4%B8%96%E7%95%8C%E4%B9%8B%E5%BC%80%E5%A7%8B/"/>
      <url>/2023/04/14/%E5%86%99%E5%9C%A8%E4%B8%96%E7%95%8C%E4%B9%8B%E5%BC%80%E5%A7%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>　　陌生人，你好，欢迎来到海的那边。<br>　　我在这里搭了一个小木屋，也许你来去匆匆，但如果你此刻稍有闲暇，不妨进来坐坐。<br>　　在这里，记录着屋主人的生活与感悟。屋主并不想去打扰别人，但如果来客你有兴趣，这里的一切将为你敞开。<br>　　路途匆匆，那些曾经发生过的事情，随着时间的流逝，总会在记忆中褪色，磨去熟悉的轮廓，最终变得与我们最开始的认知截然不同。所以趁着事情还历历在目，想法还充满生机，记忆还是最初的模样，我希望将它记录下来。年复一年，若能在很多很多年后，还能找到这个网页，看见当初那个自己，确实是一件很有意义的事情。<br>　　屋主是个爱好广泛的人，什么都想去做，但是什么又都做不长久，这份记录也许会在某一天结束，甚至被本人所遗忘。但是记录下来的文字还将一直存在着，直到有一天彻底消失在数据的海洋当中。<br>　　但是一切都会结束，在时间面前，万物都显得苍白无力。能在自己的时间里，活的精彩，活的满足，就足够幸运了。<br>　　有缘人，很高兴与你相遇。请多关照！<br><img src="/2023/04/14/%E5%86%99%E5%9C%A8%E4%B8%96%E7%95%8C%E4%B9%8B%E5%BC%80%E5%A7%8B/thesea.jpg" alt="你能看到那片海吗,我的朋友" title="你能看到那片海吗,我的朋友"> <!-- 此路径表示图片和MD文件，处于同一目录 --></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
